{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": ""
        }
    ],
    "info": {
        "description": "",
        "version": "1.0",
        "title": "FranConnect API"
    },
    "basePath": " ",
    "tags": [
        {
            "name": "Introduction",
            "description": "<p>Managing a Franchise System requires that all users have access to timely and reliable information that is appropriate for their roles. Yet, crucial information can be siloed in disparate applications limiting the ability to get a complete view across the entire franchise, reducing the efficiency of users performing their daily tasks. Getting a collection of enterprise applications to effectively work together can tie-up the IT resources needed to develop and maintain an integrated solution or perhaps is outside the core capabilities of the organization. To help meet this need while addressing the challenge, FranConnect offers several options for integrating FranConnect Sky with other business software.</p><p><h4 class=\"western\">Off-the Shelf Integrations</h4>A number of popular third-party business applications are available for integration with your FranConnect Sky system. Using FranConnect-provided, pre-built integrations provide additional functionality such as document e-signature, lead assessment, and brand reputation management.</p><p><h4 class=\"western\">FranConnect Delivered Integrations</h4>Customers can also choose to have FranConnect deliver and maintain an integrated solution. Working with the customer to understand their work processes, the applications that need to be integrated, and the desired outcome, FranConnect can propose a solution that best meets the customer’s business requirements.</p><h4 class=\"western\">Customer Initiated Integrations</h4><p>FranConnect makes available documented REST APIs for several FranConnect Sky application modules. Providing the greatest degree of control, customers can use these APIs to develop and support custom integrations using their own in-house or third-party development resources.</p><h4 class=\"western\">FranConnect APIs</h4><p>FranConnect APIs enable users to import and/or export data between FranConnect Sky and third-party applications. APIs make HTTP calls using the standard HTTP POST method in \"x-www-form-urlencoded\" format. You must provide the input to the API as an XML string whereas the output can either be in XML or JSON format, depending on how you would like to receive the response in your application. Various operations can be performed with the API by appending (and, thereby, replacing) variables in the request URL. FranConnect APIs support the following operations: login, module, subModule, query, create, update, retrieve, delete, log, and logout.</p><p>To perform the create and/or update operations, you must pass the attributes for the specific record in an xmlString. To perform the retrieve and/or delete operations, you must specify the parameters and their values in the filterXML. Other parameters that are used to specify the request (such as module name and sub module name) must be appended in the request as URL parameters.</p><h4 class=\"western\">Getting Started</h4><p>Contact the helpdesk team (<a href=\"mailto:helpdesk@franconnect.com\">helpdesk@franconnect.com</a>) to get the Client ID, Client Secret, and redirect URI that are required to generate the access token.</p><h4 class=\"western\">Supported Modules</h4><p>The FranConnect API provides access to all entities in the FranConnect system within the Finance (manage-finance), Sales (fs), Info Manager  (fim), CRM (cm), and the Admin (admin) modules.</p><h4 class=\"western\">Rate Limits and Accounts</h4><p>The FranConnect API does not impose any rate limit restrictions at present, but the users are expected to retrieve data after certain interval and retrieve only the deltas (wherever applicable) so as to not overload the system. Retrieving a large dataset might result in slowness and impede the overall system performance.</p><h4 class=\"western\">Concurrent Requests</h4><p>The FranConnect API does not support concurrent requests and the requests must be made one at a time.</p><h4 class=\"western\">Testing</h4><p>You can perform testing in your UAT environment and then move the code over to your production environment. In case you don’t have a UAT environment, you can request for one from your customer advocate or by sending an email to our HelpDesk team (<a href=\"mailto:helpdesk@franconnect.com\">helpdesk@franconnect.com</a>). A temporary UAT environment can be provided to you, but there might be some cost associated with it.</p><p><span style=\"color: rgb(184, 49, 47);\"><strong>Important!</strong> This document uses <strong>Postman</strong> as the GUI client for testing the FranConnect API. However, you can emulate the API using your preferred programming language.</span></p>"
        },
        {
            "name": "FAQ",
            "description": "<p>Below is a list of general frequently asked questions posed by developers working with the FranConnect API. For additional API related questions, contact the helpdesk team (<a href=\"mailto:helpdesk@franconnect.com\">helpdesk@franconnect.com</a>).<ol><li><b>Can the API pull multiple attributes for multiple stores in a single request?</b> <br><strong>If attribute is a tab:</strong> No, the API cannot pull multiple tabs for multiple stores in a single request. It is possible to pull multiple stores but not multiple attributes in a single request. For multiple attributes, you must send multiple requests. <br><strong>If attribute is a field:</strong> Yes, the API can pull multiple fields for multiple stores in a single request for a single tab. And, in response, it will retrieve all the fields of that particular tab.</li><li><b>Can the API send comma delimited location ID (multiple locations) in a single request? We are assuming Location ID is the internal Location reference ID and not the Franchisee ID displayed on Center Info.</b> <br><strong>For create/update/delete operation:</strong> No, the API cannot send comma delimited location ID. <br><strong>For retrieve operation:</strong> Yes, the API can send comma delimited location ID<li><b>Can the API query back from a custom field (Location Number)?</b> <br>Yes, the API can pull from any of the custom field, if it is exportable and searchable.</li><li><b>Does the API support Unicode input?</b><br>No, the API does not support Unicode inputs. It supports data input through UTF-8.<li><b>Encountered the Error “HTTP 401 Status Code” while setting up OAuth 2.0 Authentication.</b><br>Ensure that you are using the correct Client ID and Client Secret pair provided by the FranConnect for setting up OAuth 2.0 Authentication.<li><b>Encountered the Error “HTTP 404 Status Code” with the message “Not Found” while performing Retrieve operation such as Retrieve Schema, Retrieve CRM Leads or Retrieve the List of Modules through the API.</b><br>Ensure that you are using the correct context path in the request URL as per your Tenant. This document uses the context paths (<a href=\"https://developers.franconnectdemo.net/fc/\">https://developers.franconnectdemo.net/fc/</a>) and (<a href=\"https://skyapi.franconnect.net/\">https://skyapi.franconnect.net/</a>) for the REST API and Finance API respectively.<li><b>Encountered the Error “HTTP 400 Status Code” with the message “Invalid: access_token” while performing CRUD operation.</b><br>Ensure that you have followed all the steps mentioned in the <a href=\"#tag/Authentication\">Authentication</a> section to generate the access token. Enter the access token in the header of the request with <b>Authorization</b> as the <b>key</b> and its value in the format <b>Bearer access_token</b>.<br>Temporary Headers also display the key <b>Authorization</b>, but didn't get updated always. So, it is recommended to add this key in the header of the request.<li><b>How to add a new Remark and retrieve an existing Remark for a CRM contact through the API?</b><br>Remark is a sub-module of CRM, that can be retrieved by using the “sub-module” endpoint. Click <a href=\"#tag/List-of-Sub-Modules\">here</a> for details on the “List of Sub-Modules” section.<br><img src=\"images/Remark.png\"><br><b>Follow these steps to create a new remark:</b><br><b>Step1:</b> Perform the Query operation by using “module” as “cm”, “sub-module” as “remark” and “operation” as “create”.<br><img src=\"images/Step1.png\"><br>This provides the “xmlString” that is required to create the Remark for that Contact. Click <a href=\"#tag/List-of-Field-Names\">here</a> for details on the Query operation.<br><b>Step2:</b> Perform the Create operation by using the xmlString received through Step 1, module as “cm” and “sub-module as “remark”.<br><img src=\"images/Step2.png\"><br>This creates a Remark for the Contact whose Reference ID is provided in the “xmlString”. Click <a href=\"#tag/Contact\">here</a> for details on the Create operation.<br><b>Follow these steps to retrieve an existing remark for a contact:</b><br><b>Step1:</b> Perform the Query operation by using “module” as “cm”, “sub-module” as “remark” and “operation” as “retrieve”.<img src=\"images/Step3.png\"><br>This provides the “filterXML” that contains the attribute names and their values that are required to retrieve the Remarks available for that Contact. Click <a href=\"#tag/List-of-Field-Names\">here</a> for details on the Query operation.<br><b>Step2:</b> Perform the Retrieve operation by using any field retrieved using the filterXML, module as “cm” and “sub-module as “remark”.<br><img src=\"images/Step4.png\"><br>This retrieves all the Remarks for that Contact whose Reference ID is provided in the “filterXML”. Click <a href=\"#operation/CRM_Retrieve_Contact\">here</a> for details on the Retrieve operation.<li><b>Encountered the Error “HTTP 404 Status Code” when an API Endpoint is hit.</b><br>Ensure that there is only one forward slash '/' in the Endpoint. The Endpoint must be in this way: /rest/dataservices/operation. If you enter double forward slash '//' in the Endpoint, then the error 404 is displayed.</li></ol></p>"
        },
        {
            "name": "Authentication",
            "description": "<p>FranConnect recommends you to use OAuth 2.0 authorization to authenticate to the FranConnect API.</p><img src=\"images/AuthorizationTab.png\"><p>Perform the following steps to set up the OAuth 2.0 authorization, using the <strong>Postman</strong> GUI client:</p><ol><li>Select <b>GET</b> as the API method.</li><li>Click the <strong>Authorization</strong> tab.&nbsp;</li><li>Select the option <strong>OAuth 2.0&nbsp;</strong>for the<strong>&nbsp;Type&nbsp;</strong>field.</li><li>Select the option<strong>&nbsp;</strong><strong>Request Headers</strong> for the <strong>Add authorization data to</strong> field.</li><li>Click <strong>Get New Access Token&nbsp;</strong>to generate request for a new token.</li><img src=\"images/AccessTokenOptions.png\"><li>In the <strong>Get New Access Token&nbsp;</strong>dialog that appears, enter the details as explained in the following steps.<ol type=\"a\"> <li style=\"margin-left: 1px;\">Enter a name for your Access Token (Optional).</li><li style=\"margin-left: 1px;\">Select the desired grant type. The FranConnect API supports four grant types using the OAuth framework. The fields in the <strong> Get New Access Token</strong> dialog vary depending upon your selection of the grant type. These are explained in detail in the <u><a href=\"#tag/Authorization-Code\">Authorization Code</a></u>, <u><a href=\"#tag/Implicit\">Implicit</a></u>, <u><a href=\"#tag/Password-Credentials\">Password-Credentials</a></u>, and <u><a href=\"#tag/Client-Credentials\">Client-Credentials</a></u> sections. </li></p>"
        },
        {
            "name": "Authorization Code",
            "description": "<p><img src=\"images/Get-New-Access-Token.png\"><br>For using the grant type as <strong>Authorization Code</strong>, enter the details in the <strong>Get New Access Token&nbsp;</strong>dialog as explained in the following steps:<ol> <li style=\"margin-left: 1px;\">Enter a name for your Access Token (Optional).</li><li style=\"margin-left: 1px;\">Select the <strong>Grant Type</strong> as <strong>Authorization Code</strong>.</li><li style=\"margin-left: 1px;\">Enter the callback URL to which the generated access token would be redirected. The callback URL is also known as redirect URI and this URL should match the one that you use during the application registration process.<br>Example: Callback URL can be https://oauth.powerbi.com/views/oauthredirect.html<br>To register your callback/redirect URL, contact <a href=\"mailto:helpdesk@franconnect.com\">helpdesk@franconnect.com</a></li><strong>Note:</strong> The above mentioned example uses the callback URL using the Postman client. If you are using any other GUI client, use your own redirect URI.<li style=\"margin-left: 1px;\">Enter the endpoint for the authorization server as the <strong>Auth URL</strong>. This is used to get the authorization code.<br>Example: Auth URL can be https://auth.franconnectuat.net/userauth/oauth/authorize?response_type=code&amp;client_id=FRANC0NN3CT_API&amp;redirect_uri=https://oauth.powerbi.com/views/oauthredirect.html</li><p><strong>Note:</strong> The response_type is <strong>code</strong> for the Grant Type <strong>Authorization</strong> and the redirect URI is same as the callback URL.</p><li style=\"margin-left: 1px;\">Enter the endpoint for the authentication server in the <strong>Access Token URL&nbsp;</strong>field. This is used to exchange the authorization code for an access token.<br>Example: Access Token URL can be https://auth.franconnectuat.net/userauth/oauth/token?X-TenantID=developers.franconnectdemo.net&grant_type=authorization_code&client_id=FRANC0NN3CT_API&redirect_uri=https://oauth.powerbi.com/views/oauthredirect.html</p><p><strong>Note:</strong> If the login URL for your FranConnect system is https://developers.franconnectdemo.net/fc, then the X-TenantID will be developers.franconnectdemo.net</li><li style=\"margin-left: 1px;\">Enter the Client ID provided to you by FranConnect in the <strong>Client ID</strong> field. <br>Example: Client ID can be FRANC0NN3CT_API</li><li style=\"margin-left: 1px;\">Enter the Client Secret provided to you by FranConnect in the <strong>Client Secret</strong> field.<br>Example: Client Secret can be DDEEMVOE2L0O1P9E<br>Contact <a href=\"mailto:helpdesk@franconnect.com\">helpdesk@franconnect.com</a> to get your Client ID and Client Secret.</li><li style=\"margin-left: 1px;\">Select the option <strong>Send as Basic Auth header</strong> for the <strong>Client Authentication&nbsp;</strong>field.</li></ol></li></ol></p><p>Enter all these details, and click <strong>Request Token</strong> to request for a token.</p><p>The FranConnect API validates all the details and displays a dialog to enter the following additional information: <strong>Company Code</strong>, <strong>Username</strong> and <strong>Password</strong>.</p> </p><img src=\"images/Auth-Comp-Code.png\"><ol><li>If the login URL for your FranConnect system is https://developers.franconnectdemo.net/fc, then the company code will be developers.franconnectdemo.net</li><li>Your username and password will be your login credentials for your FranConnect system</li></ol><p>If all the details are valid, then, the access token is generated that can be used for the API calls.</p><p><strong>Note:</strong> The access token is valid for 12 hours, after which a new access token is to be generated using the <a href=\"#operation/Refresh_Token_Auth\"> refresh token</a>. This refresh token is valid for 30 days. Refresh tokens that were generated more than 30 days back cannot be used to generate a new access token.</p>"
        },
        {
            "name": "Implicit",
            "description": "<p><img src=\"images/Access_Token_Implicit.png\"><br>For using the grant type as <strong>Implicit</strong>, enter the details in the <strong>Get New Access Token&nbsp;</strong>dialog as explained in the following steps:<ol> <li style=\"margin-left: 1px;\">Enter a name for your Access Token (Optional).</li><li style=\"margin-left: 1px;\">Select the <strong>Grant Type</strong> as <strong>Implicit</strong>.</li><li style=\"margin-left: 1px;\">Enter the callback URL that you want to be redirected to, once your application is authorized. The callback URL is also known as redirect URI. This URL should match the one that you use during the application registration process.<br>Example: Callback URL can be https://oauth.powerbi.com/views/oauthredirect.html<br>To register your callback/redirect URL, contact <a href=\"mailto:helpdesk@franconnect.com\">helpdesk@franconnect.com</a></li><li style=\"margin-left: 1px;\">Enter the endpoint for the authorization server as the <strong>Auth URL</strong>. This is used to get the authorization code.<br>Note that the redirect URI is same as the callback URL.<br>Example: Auth URL can be https://auth.franconnectuat.net/userauth/oauth/authorize?response_type=token&amp;client_id=FRANC0NN3CT_API&amp;redirect_uri=https://oauth.powerbi.com/views/oauthredirect.html</li><p><strong>Note:</strong> The response_type is <strong>token</strong> for the grant type <strong>Authorization</strong>.</p><li style=\"margin-left: 1px;\">Enter the Client ID provided to you by FranConnect in the <strong>Client ID</strong> field. <br>Example: Client ID can be FRANC0NN3CT_API</li><li style=\"margin-left: 1px;\">Select the option <strong>Send as Basic Auth header</strong> for the <strong>Client Authentication&nbsp;</strong>field.</li></ol></li></ol></p><p>The FranConnect API validates all the details and displays a dialog to enter the following additional information: <strong>Company Code</strong>, <strong>Username</strong> and <strong>Password</strong>.</p> </p><ol><li>If the login URL for your FranConnect system is https://developers.franconnectdemo.net/fc, then the company code will be developers.franconnectdemo.net</li><li>Your username and password will be your login credentials for your FranConnect system</li></ol><p>If all the details are valid, then, the access token is generated that can be used for the API calls.</p><p><strong>Note:</strong> For this grant type, no refresh token is generated. The access token is valid for 12 hours, after which a new access token is to be generated. </p>"
        },
        {
            "name": "Password Credentials",
            "description": "<p><img src=\"images/Access_Token_Pwd_Cred.png\"><br>For using the grant type as <strong>Password Credentials</strong>, enter the details in the <strong>Get New Access Token&nbsp;</strong>dialog as explained in the following steps:<ol> <li style=\"margin-left: 1px;\">Enter a name for your Access Token (Optional).</li><li style=\"margin-left: 1px;\">Select the <strong>Grant Type</strong> as <strong>Password Credentials</strong>.</li><li style=\"margin-left: 1px;\">Enter the endpoint for the authentication server in the <strong>Access Token URL&nbsp;</strong>field. This is used to exchange the authorization code for an access token.<br>Example: Access Token URL can be https://auth.franconnectuat.net/userauth/oauth/token?X-TenantID=developers.franconnectdemo.net<p><strong>Note:</strong> If the login URL for your FranConnect system is https://developers.franconnectdemo.net/fc, then the X-TenantID will be developers.franconnectdemo.net</li><li style=\"margin-left: 1px;\">Enter the login credentials for your FranConnect system in the <strong>Username</strong> and <strong>Password</strong> fields.</li><li style=\"margin-left: 1px;\">Enter the Client ID provided to you by FranConnect in the <strong>Client ID</strong> field. <br>Example: Client ID can be FRANC0NN3CT_API</li><li style=\"margin-left: 1px;\">Enter the Client Secret provided to you by FranConnect in the <strong>Client Secret</strong> field.<br>Example: Client Secret can be DDEEMVOE2L0O1P9E<br>Contact <a href=\"mailto:helpdesk@franconnect.com\">helpdesk@franconnect.com</a> to get your Client ID and Client Secret</li><li style=\"margin-left: 1px;\">Select the option <strong>Send as Basic Auth header</strong> for the <strong>Client Authentication&nbsp;</strong>field.</li></ol></li></ol></p><p>Enter all these details, and click <strong>Request Token</strong> to request for a token.</p><p>The FranConnect API validates all the details and generates an access token that can be used for the API calls.</p><p><strong>Note:</strong> The access token is valid for 12 hours, after which a new access token is to be generated using the <a href=\"#operation/Refresh_Token_Auth\"> refresh token </a>. This refresh token is valid for 30 days. Refresh tokens that were generated more than 30 days back cannot be used to generate a new access token.</p>"
        },
        {
            "name": "Client Credentials",
            "description": "<p><img src=\"images/Access_Token_Client_Cred.png\"><br>For using the grant type as <strong>Client Credentials</strong>, enter the details in the <strong>Get New Access Token&nbsp;</strong>dialog as explained in the following steps:<ol><li style=\"margin-left: 1px;\">Enter a name for your Access Token (Optional).</li><li style=\"margin-left: 1px;\">Select the <strong>Grant Type</strong> as <strong>Client Credentials</strong>.</li><li style=\"margin-left: 1px;\">Enter the endpoint for the authentication server in the <strong>Access Token URL&nbsp;</strong>field. This is used to exchange the authorization code for an access token.<br>Example: Access Token URL can be https://auth.franconnectuat.net/userauth/oauth/token?X-TenantID=developers.franconnectdemo.net<p><strong>Note:</strong> If the login URL for your FranConnect system is https://developers.franconnectdemo.net/fc, then the X-TenantID will be developers.franconnectdemo.net</li><li style=\"margin-left: 1px;\">Enter the Client ID provided to you by FranConnect in the <strong>Client ID</strong> field. <br>Example: Client ID can be FRANC0NN3CT_API</li><li style=\"margin-left: 1px;\">Enter the Client Secret provided to you by FranConnect in the <strong>Client Secret</strong> field.<br>Example: Client Secret can be DDEEMVOE2L0O1P9E<br>Contact <a href=\"mailto:helpdesk@franconnect.com\">helpdesk@franconnect.com</a> to get your Client ID and Client Secret</li><li style=\"margin-left: 1px;\">Select the option <strong>Send as Basic Auth header</strong> for the <strong>Client Authentication&nbsp;</strong>field.</li></ol></li></ol></p><p>Enter all these details, and click <strong>Request Token</strong> to request for a token.</p><p>The FranConnect API validates all the details and generates an access token that can be used for the API calls.</p><p><strong>Note:</strong> The access token is valid for 12 hours, after which a new access token is to be generated using the <a href=\"#operation/Refresh_Token_Auth\"> refresh token </a>. This refresh token is valid for 30 days. Refresh tokens that were generated more than 30 days back cannot be used to generate a new access token.</p>"
        },
        {
            "name": "Refresh Token",
            "description": "<p>The access token that is generated using the grants enlisted above, remains valid only for 12 hours. Along with an access token, you'll also be given a <strong>refresh token</strong>. You can use this refresh token to generate a new access token. The lifespan of a refresh token is 30 days and once you've used up a refresh token, it can not be used to generate any more access tokens.</p>"
        },
        {
            "name": "Error Codes",
            "description": "<p>FranConnect uses various error codes in the API response to indicate that the request was not processed. In general, response codes in the <code>2xx&nbsp;</code>range indicate success while codes in the <code>4xx&nbsp;</code>and <code>5xx&nbsp;</code>range indicate an error in processing the request (such as a required parameter was invalid, incorrect XML format, and so on).</p><p>Following are the common error codes and their meaning for the FranConnect API:</p><ul><li><p>400<strong> Invalid : &lt;parameter&gt;</strong> - Returned when the input parameter name is invalid</p></li><li><p>400<strong> Invalid XML format: {error}</strong> - Returned when the xmlString entered in the payload is invalid</p></li><li><p>400 <strong>Request to {operation}{subModule} is not supported</strong> - Returned when some operation is restricted for a specific sub-module</p></li> <li> <p>400 <strong>Invalid mandatory field : {field}</strong> - Returned when the value provided in xmlString is invalid for a mandatory field</p> </li><li><p>400 <strong>Invalid mandatory field : {custom_error}</strong> - Returned when the xmlString entered in the payload is invalid. For example, the end date is before the start date or the userID contains space(s)</p></li><li><p>401 <strong>Missing : &lt;parameter&gt; </strong> - Returned when a mandatory parameter is missing</p></li><li> <p>401 <strong>mandatory field : {field}</strong> - Returned when a mandatory field is missing in the xmlString.</p></li> <li><p>409 <strong>{subModule}already exists</strong> - Returned when you try to perform create operation for a sub-module again and only one time submission is allowed for that sub-module</p></li><li><p>411 <strong>Duplicate mandatory field : {field}</strong> - Returned when you try to input duplicate data</p></li><li><p>438 <strong>Invalid tag &lt;tagName&gt;</strong> - Returned when the &lt;tagName&gt; is invalid for the specified module and sub-module</p></li><li><p>500 <strong>Database error</strong> - Returned when there is a database mapping issue</p></li><li><p>503 <strong>Service Unavailable</strong> - Returned when the system is undergoing maintenance</p></li></ul><p></p><p></p>"
        },
        {
            "name": "List of Modules",
            "description": "<p>You must use the \"module\" endpoint to get a list of all the modules that are available through the REST API.</p> To retrieve the list of modules, you must make a POST request with “responseType” parameter appended in the URL.</p>",
            "operationId": "List_of_Modules"
        },
        {
            "name": "List of Sub-Modules",
            "description": "<p>You must use the \"subModule\" endpoint to get a list of all sub-modules/tabs available for a specific module and use them, subsequently, in Create, Retrieve, Update, and, Delete operations.</p> To retrieve the list of subModules for a given module, you must make a POST request with “module name”, and “responseType” parameters appended in the URL. The following sections provide examples on how this is to be performed for Admin (module=admin), Sales (module=fs), Info Manager (module=fim), and CRM (module=cm).</p>",
            "operationId": "List_of_Sub_Modules"
        },
        {
            "name": "List of Field Names",
            "description": "<p> The \"query\" endpoint enables you to get all those field names and internal names that you need to send in the request body for Create, Retrieve, Update, and, Delete operations. You must use the \"query\" endpoint to generate an XML input sample. This XML sample must be used for manipulating various FranConnect system entities using the Create, Retrieve, Update, and Delete operations. Sample XML will adapt to contain the fields as per the form builder.</p><p>You must consider the following points before using the \"query\" endpoint:</p><ul><li>Once you have the access token, then only you are authorized to make a call to the \"query\" endpoint using this access token.</li><li>Request XMLs are generated after using this endpoint. You can use these Request XMLs to import/export/delete data into the FranConnect system. The 'module'represents the entity for which you want to retrieve the query xml string (for example, 'admin'for Admin, 'cm' for CRM, 'fs' for Sales, 'fim' for Info Manager. The subModule represents the sub-module/tab that is required (for example, 'user' for Users, 'contact' for contacts, 'lead' for leads, and, 'franchisee' for locations). </li><li>The 'roleTypeForQuery' parameter specifies the user type(for example, set roleTypeForQuery = 0 for franchise users, 1 for corporate users, 2 for regional users, and so on) that you want to create or update. However, for delete and retrieve operations, the 'roleTypeForQuery' parameter is not required. </li><li>The response is received in XML format only.</li><li>If internationalization (translation settings) is enabled, then the<strong> &lt;userLanguage&gt;</strong> element node appears in \"query\" endpoint for the create and update operations. Otherwise, your system's default language is considered as the default language for the API.</li></ul>"
        },
        {
            "name": "Admin",
            "description": "<p>The Admin module enables you to manage different types of users and locations. Using the FranConnect API, you can perform Create, Retrieve, Update, and Delete operations for various types of users (such as Corporate User, Regional User, Franchisee User, and Divisional User) and locations.</p><p>The following sections explain and provide examples to perform Create, Retrieve, Update, and Delete operations for users. Similarly, you can perform Create, Retrieve, and Update operations for locations.</p>"
        },
        {
            "name": "Sales",
            "description": "<p>The Sales Module helps you to manage franchisee leads across their lifecycle. Using the FranConnect API, you can perform Create, Retrieve, Update, and Delete operations for all the tabs that are available in <strong>Sales > Lead Management</strong>, except the file type fields and the pages/tabs that contain multiple tabular sections. The “file” type of fields are not supported by the FranConnect API and you can perform only Retrieve operations on pages that contain multiple tabular sections. </p><p>The following sections provide details and examples to perform Create, Retrieve, Update, and Delete operations on a Sales Lead’s “Primary Info” tab. Similarly, you can perform these operations for any other tab in <strong>Sales > Lead Management</strong>.</p>"
        },
        {
            "name": "Info Manager",
            "description": "<p>Using the FranConnect API, you can manage the \"in-development\" and the operational locations in the Info Manager module. Using Create, Retrieve, Update, and Delete API operations, you can manage information that can either be in the location’s main page (in Center Info) or in any of the tabs (such as Real Estate and Mystery Review).</p><p>Note that the following sections explain and provide examples on how to perform these operations on the “Primary Info” tab for locations. Similarly, you can perform these  operations for other tabs as well for locations that are either in-development or have been opened since.</p>"
        },
        {
            "name": "Company",
            "description": "These API endpoints support operations associated with Companies."
        },
        {
            "name": "Regional",
            "description": "<p>Using the FranConnect API, you can manage information for different tabs corresponding to any Area-region present in your system. Using Create, Retrieve, Update and Delete API operations, you can manage information corresponding to different Area-regions present in your Regional module."
        },
        {
            "name": "CRM",
            "description": "<p>The CRM module is used to manage leads, contacts, and accounts across their entire lifecycle. Using Create, Retrieve, Update, and Delete API operations, you can manage information that can either be in the CRM’s main page or in any of the tabs (such as Accounts, Leads, Contacts, and Opportunities).</p>"
        },
        {
            "name": "Tasks",
            "description": "<p> A task is a piece of work to be done. Using the FranConnect API, you can perform Create, Retrieve, Update, and, Delete operations for the tasks in Sales, Info Manager and CRM modules.</p>"
        },
        {
            "name": "Emails",
            "description": "An email is a piece of communication that is sent from within the FranConnect system. Using the FranConnect API, you can perform the Create, Retrieve and Delete operations for emails. Note that the Update operation cannot be performed for emails since an email that has already been created and sent out cannot be updated."
        },
        {
            "name": "SMS",
            "description": "<p>Using the FranConnect API, you can perform the Retrieve operation for SMS for only the Sales and CRM modules, as follows: CRM-Contacts and CRM-Leads, Sales-Leads</p>\n>"
        },
        {
            "name": "Campaigns",
            "description": "<p>Using the FranConnect API, you can perform the Retrieve operation for Campaigns for only the Sales and CRM modules, as follows: CRM-Contacts and CRM-Leads, Sales-Leads.</p>"
        },
        {
            "name": "Email Campaigns",
            "description": "<p>Using the FranConnect API, you can perform the Retrieve operation for Campaign emails for only the Sales and CRM modules, as follows: CRM-Contacts and CRM-Leads, Sales-Leads.</p>"
        },
        {
            "name": "SMS Campaigns",
            "description": "<p>Using the FranConnect API, you can perform the Retrieve operation for Campaign SMS as follows: CRM Contacts and CRM Leads, Sales Leads.</p>"
        },
        {
            "name": "Finance",
            "description": "<p>The Finance module supports integration with other third party systems for reporting on sales, royalties, profit and loss, and payments. The FranConnect API allows you to automate the transfer of data between the Finance module and your Finance/POS systems.</p>"
        },
        {
            "name": "Franchisee Number",
            "description": "<p class=\"western\">Franchisee number is the unique reference number that indicates a particular location. It is used while performing CRUD operations in the API. Using the FranConnect API, you can retrieve a list of franchisee numbers for all the locations or for a single location.</p><p><strong>Note:</strong> For the Info Manager sub-module, the Franchisee number refers to the unique Reference ID for that franchisee location and can be used for the Update, Retrieve and the Delete operations.</p>"
        },
        {
            "name": "Sales Reports",
            "description": "This API endpoint supports the Finance Sales based operations."
        },
        {
            "name": "Royalties",
            "description": "This API endpoint supports the Finance Royalty based operations."
        },
        {
            "name": "Payments",
            "description": "This API endpoint supports the Finance Payment based operations."
        },
        {
            "name": "Adjustments",
            "description": "This API endpoint supports the Finance Adjustment based operations."
        },
        {
            "name": "Audits",
            "description": "These API endpoints support the Finance Audit based operations."
        },
        {
            "name": "Profit and Loss Statements",
            "description": "This API endpoint supports the Finance Profit and Loss based operations."
        },
        {
            "name": "Memos",
            "description": "This API endpoint supports the Finance Memo based operations."
        },
        {
            "name": "Operations",
            "description": "The purpose of the Operations module is to improve operational performance from the brand to the unit level. The FranConnect API allows you to create Segments and define segment hierarchies. <p>In FranConnect API, segments are identified by either their <b>segmentId</b> or <b>customSegmentId</b>. A segmentId is a unique identifier that we store in our FranConnect's database, whereas, a customSegmentId is a unique identifier that a user is able to see at the front-end. Moreover, a customSegmentId is incremental in nature, for eg. segmentA is created with a customSegmentId of 001, then the next segment that gets created, will automatically take a customSegmentId of 002 and so on.</p>"
        },
        {
            "name": "Segment Categories",
            "description": "These API endpoints support operations associated with Segment Categories."
        },
        {
            "name": "Custom Segment Fields",
            "description": "These API endpoints support operations associated with Custom Segment Fields"
        },
        {
            "name": "Segments",
            "description": "These API endpoints support operations associated with Segments."
        },
        {
            "name": "Edit Segments",
            "description": "These API endpoints support operations related to editing of segments. Following these endpoints, you will be able to edit the general information of a segment like its name, categoryId, customSegmentId, description etc. and alter the list of associated units, owners and or segments."
        },
        {
            "name": "People",
            "description": "These API endpoints support operations associated with People."
        },
        {
            "name": "Events and Webhooks",
            "description": "<p>Event is generated by the FranConnect Sky System when an action occurs or is completed. By Requesting Event, the System helps the users to know the recent activities or actions that have occurred.</p><p><b>Webhook Introduction</b></p><p>Webhook is a way through which an application can send automated messages or information to other applications over the web. It is a serialized message sent from one application to another’s unique URL. For example, an e-commerce site notifies you about the new orders, a payment site tells your accounting app when the clients pay you, etc.</p><p>In other words, using Webhook, the online accounts can “speak” to each other and get notified automatically when something new happens.</p><p><b>How Events and Webhooks are Related?</b></p><p>Event represents everything that happens in the System. Every new activity in the System comes under Event. On the other hand, Webhook is a mechanism that allows you to receive notifications about Event that you have created.</p><p>In short, Event is an action or activity, and Webhook is the notifications about that action or activity.</p><p><b>Why Enable Webhook?</b></p><p>The main reason to enable Webhook in the FranConnect Sky System is that continuously Polling a service to find out the recent activities is a cumbersome process. Polling is a waste of resources for the Client as well as the Server. Giving the Server the ability to push notifications via Webhook Callback resolves this problem effectively, as the notification is provided in the form of a Webhook URL after every recent activity. In fact, Webhook notifications provide information about Events when they occur.</p><p><b>Handling Webhook</b></p><p>To confirm that the notification sent via HTTP POST request has been successfully delivered, a status code 2XX reply from the Webhook Configured URL.</p>"
        },
        {
            "name": "Sales Webhook",
            "description": "<p>Use webhooks in workflows to pass information about a Lead from FranConnect to another web application.</p>"
        },
        {
            "name": "CRM Webhook",
            "description": "<p>Use webhooks in workflows to pass information about a Lead/Contact from FranConnect to another web application.</p>"
        },
        {
            "name": "INFO MANAGER WEBHOOK",
            "description": "<p>FranConnect System now supports Webhook to pass information from FranConnect’s Info Mgr to another web application about a location.</p>"
        },
        {
            "name": "Segments Webhook",
            "description": "<p>FranConnect System now supports Webhooks to pass information from FranConnect's segment module to another web application about segments, segment categories and custom segment fields.</p>"
        }
    ],
    "x-tagGroups": [
        {
            "name": "",
            "tags": [
                "Introduction",
                "FAQ",
                "Authentication",
                "Authorization Code",
                "Implicit",
                "Password Credentials",
                "Client Credentials",
                "Refresh Token",
                "Franchisee Number",
                "Retrieve Franchisee Number",
                "Error Codes",
                "List of Modules",
                "Retrieve Modules",
                "List of Sub-Modules",
                "Retrieve Sub-Modules",
                "List of Field Names",
                "Retrieve Schema",
                "Admin",
                "User",
                "Division",
                "Area/Region",
                "Multi-Unit",
                "Sales",
                "Sales Lead",
                "Info Manager",
                "Franchisee",
                "Company",
                "Regional",
                "Area Info",
                "CRM",
                "CRM Lead",
                "Contact",
                "Account",
                "Transactions",
                "Opportunity",
                "Tasks",
                "Task",
                "Emails",
                "Email Messages",
                "SMS",
                "SMS Messages",
                "Campaigns",
                "Email Campaigns",
                "SMS Campaigns",
                "Finance",
                "Sales Reports",
                "Royalties",
                "Payments",
                "Adjustments",
                "Audits",
                "Profit and Loss Statements",
                "Memos",
                "Operations",
                "Segment Categories",
                "Custom Segment Fields",
                "Segments",
                "Edit Segments",
                "People",
                "Events and Webhooks",
                "Sales Webhook",
                "Lead",
                "INFO MANAGER WEBHOOK",
                "Segments Webhook",
                "FRANCHISE",
                "CRM Webhook",
                "LEAD/CONTACT"
            ]
        }
    ],
    "paths": {
        "/common/franchisee": {
            "get": {
                "tags": [
                    "Retrieve Franchisee Number"
                ],
                "summary": "Retrieve for all Locations",
                "description": "<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"28%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/common/franchisee</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/common/franchisee</td></tr></table><h4>To retrieve the Franchisee Number, you must provide the following items in the header of the GET request: </h4><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Specify &ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>Specify &ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p class=\"western\">Performing the above mentioned steps will provide the franchisee number and the franchisee names of all the locations.</p><img src=\"images/Retrieve_Franchise_Number_All.png\">",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveFranchiseeNumberResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/common/franchisee/filter": {
            "post": {
                "tags": [
                    "Retrieve Franchisee Number"
                ],
                "summary": "Retrieve for a Specific Location",
                "description": "<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"28%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/common/franchisee/filter</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/common/franchisee/filter</td></tr></table><h4>To retrieve the Franchisee Number for a specific location, you must provide the following items in the header of the POST request: </h4><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Specify &ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>Specify &ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p class=\"western\">You can specify any of the following as the filter criteria in the body of the request: areas, countries, divisions, entities, fields, and franchisee numbers. Performing the above mentioned steps will provide the franchisee number and the franchisee name for the required location.<p class=\"western\">In the example that is included, the “franchisee_name” has been used as a ‘constraints’ criterion. Other acceptable values of constraints, that can be used to filter and retrieve franchisee number for a specific location, are explained in the following table:</p><center><table width=\"623\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"157\"/> <col width=\"135\"/> <col width=\"223\"/> <col width=\"51\"/> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"157\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Field</span></strong></p><p class=\"western\" align=\"center\">&nbsp;</p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"135\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Field Description</span></strong></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"223\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Applied Clause</span></strong></p><p class=\"western\" align=\"center\">&nbsp;</p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"51\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Format</span></strong></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>franchisee_name</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Franchisee Name as seen in UI</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td width=\"157\"><p class=\"western\" align=\"center\"><strong>franchisee_no</strong></p></td><td width=\"135\"><p class=\"western\" align=\"center\">Internal Unique Reference Number of the location</p></td><td width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>area_id</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Internal Unique Reference Number of the area</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td  width=\"157\"><p class=\"western\" align=\"center\"><strong>is_store_archive</strong></p></td><td  width=\"135\"><p class=\"western\" align=\"center\">Flag of archived Store in Opener</p></td><td  width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td  width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>is_store</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Flag Store in Opener</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td  width=\"157\"><p class=\"western\" align=\"center\"><strong>is_franchisee</strong></p></td><td  width=\"135\"><p class=\"western\" align=\"center\">Flag of franchisee in Opener</p></td><td  width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td  width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>divisions</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Internal Unique Reference Number of the division</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td  width=\"157\"><p class=\"western\" align=\"center\"><strong>country</strong></p></td><td  width=\"135\"><p class=\"western\" align=\"center\">Internal Unique Reference Number of the country</p></td><td  width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td  width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>franchise_owner_id</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Internal Unique Reference Number of the owner</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td  width=\"157\"><p class=\"western\" align=\"center\"><strong>fim_entity_id</strong></p></td><td  width=\"135\"><p class=\"western\" align=\"center\">Internal Unique Reference Number of the entity</p></td><td  width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td  width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr></tbody></table></center><p class=\"western\">&nbsp;</p><p class=\"western\">&nbsp;</p></p><img src=\"images/Retrieve_Franchise_Number_Specific.png\">",
                "operationId": "Retrieve_Franchise_Number_Specific",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "datalist",
                        "description": "ParameterType:ArrayList<Entity>",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "franchisee_name": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "constraints": {
                                        "franchisee_name": {
                                            "clause": "EQUAL",
                                            "values": [
                                                "10012"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveFranchiseeNumberLocationResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/module": {
            "post": {
                "tags": [
                    "Retrieve Modules"
                ],
                "summary": "Modules",
                "description": "<p class=\"western\">Use this operation to get a list of all modules available through the REST API.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/module?responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to retrieve a list of all available modules</h4><p class=\"western\">To retrieve all the available modules using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. <p>The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol>The following item must be used as path parameter:<li>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><img src=\"images/Retrieve_Modules.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ModuleResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/ModuleArray"
                }
            }
        },
        "/submodule?module=admin": {
            "post": {
                "tags": [
                    "Retrieve Sub-Modules"
                ],
                "summary": "Admin",
                "description": "<p class=\"western\">Use this operation to get a list of all sub-modules/tabs available for Admin.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/submodule?module=admin&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to retrieve a list of all available sub-modules</h4><p class=\"western\">To retrieve all the available sub-modules for a specific module using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above.</p><p>The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the list of all sub-modules is being retrieved. In this case, the module to be used is “admin”</u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><p></ol></p><img src=\"images/Admin_Submodules.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdminSubModuleResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AdminSubModuleArray"
                }
            }
        },
        "/submodule?module=fs": {
            "post": {
                "tags": [
                    "Retrieve Sub-Modules"
                ],
                "summary": "Sales",
                "description": "<p class=\"western\">Use this operation to get list of all sub-modules/tabs available for Sales.</p></p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/submodule?module=fs&responseType=XML</td></tr><tr><td></td></tr></table><p><h4 class=\"western\">Prerequisites to retrieve a list of all available sub-modules</h4><p class=\"western\">To retrieve all the available sub-modules for a specific module using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. <p>The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the list of all sub-modules is being retrieved. In this case, the module to be used is “fs”</u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><p></ol></p><strong>Notes:</strong> In response, the \"element names\" specify the actual name that you must use to perform any operation and \"element value\" specifies the display name of the sub-module that is displayed in the system.<br/>Format: &lt; element_name&gt; element_value&lt;/element_name&gt;<br/>Example: &lt;user&gt;User&lt;/user&gt;<br/>Here, <strong>user</strong> is the subModule key that is to be used in the API for user.</p><img src=\"images/Sales_Submodules.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SalesSubModuleResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/SalesSubModuleArray"
                }
            }
        },
        "/submodule?module=fim": {
            "post": {
                "tags": [
                    "Retrieve Sub-Modules"
                ],
                "summary": "Info Manager",
                "description": "<p class=\"western\">Use this operation to get list of all sub-modules/tabs available for Info Manager.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/submodule?module=fim&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to retrieve a list of all available sub-modules</h4><p class=\"western\">To retrieve all the available sub-modules for a specific module using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. <p>The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the list of all sub-modules is being retrieved. In this case, the module to be used is “fim”</u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><p></ol></p><img src=\"images/InfoManager_Submodules.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InfoMgrSubModuleResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/InfoMgrSubModuleArray"
                }
            }
        },
        "/submodule?module=cm": {
            "post": {
                "tags": [
                    "Retrieve Sub-Modules"
                ],
                "summary": "CRM",
                "description": "<p class=\"western\">Use this operation to get list of all sub-modules/tabs available for CRM.</p></p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/submodule?module=cm&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to retrieve a list of all available sub-modules</h4><p class=\"western\">To retrieve all the available sub-modules for a specific module using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above.<p>The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the list of all sub-modules is being retrieved. In this case, the module to be used is “cm”</u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><p></ol></p><img src=\"images/CRM_Submodules.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CRMSubModuleResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CRMSubModuleArray"
                }
            }
        },
        "/submodule?module=regional": {
            "post": {
                "tags": [
                    "Retrieve Sub-Modules"
                ],
                "summary": "Regional",
                "description": "<p class=\"western\">Use this operation to get a list of all sub-modules/tabs available for Regional.<table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path>/rest/dataservices/submodule?module=regional&responseType=XML </td> </tr> <tr> <td></td> </tr></table><h4 class=\"western\">Prerequisites to retrieve a list of all available sub-modules</h4><p class=\"western\">To retrieve all the available sub-modules for a specific module using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above.</p><p>The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the list of all sub-modules is being retrieved. In this case, the module to be used is “regional”</u>.</p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <p></ol></p><img src=\"images/Regional_Submodules.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RegionalSubModuleResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RegionalSubModuleArray"
                }
            }
        },
        "/query?module=admin&operation=create": {
            "post": {
                "tags": [
                    "Retrieve Schema"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section contains an example of the “query” endpoint applied to retrieve fields that are available during the Create operation for the Admin sub-module. </p><p>In a similar manner, the “query” endpoint can be applied to retrieve fields that are available during the Create operation for the Sales, Info Manager and CRM sub-modules.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td valign=\"top\"><context-path>/rest/dataservices/query?module=admin&operation=create&roleTypeForQuery=1&subModule=user</td></tr><tr><td></td></tr></table><img src=\"images/Admin_CreateQuery.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdminCreateQueryResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateSchemaArray"
                }
            }
        },
        "/query?module=admin&operation=retrieve": {
            "post": {
                "tags": [
                    "Retrieve Schema"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the “query” endpoint applied to retrieve fields that are available during the Retrieve operation for the Admin sub-module. </p><p>In a similar manner, the “query” endpoint can be applied to retrieve fields that are available during the Retrieve operation for the Sales, Info Manager and CRM sub-modules.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/query?module=admin&operation=retrieve&roleTypeForQuery=1&subModule=user</td></tr><tr><td></td></tr></table><img src=\"images/Admin_RetrieveQuery.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdminRetrieveQueryResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RetrieveSchemaArray"
                }
            }
        },
        "/query?module=admin&operation=update": {
            "post": {
                "tags": [
                    "Retrieve Schema"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the “query” endpoint applied to retrieve fields that are available during the Update operation for the Admin sub-module. </p><p>In a similar manner, the “query” endpoint can be applied to retrieve fields that are available during the Update operation for the Sales, Info Manager and CRM sub-modules.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/query?module=admin&operation=update&roleTypeForQuery=1&subModule=user</td></tr><tr><td></td></tr></table><img src=\"images/Admin_UpdateQuery.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdminUpdateQueryResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateSchemaArray"
                }
            }
        },
        "/query?module=admin&operation=delete": {
            "post": {
                "tags": [
                    "Retrieve Schema"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\">This section contains an example of the “query” endpoint applied to retrieve fields that are available during the Delete operation for the Admin sub-module. </p><p>In a similar manner, the “query” endpoint can be applied to retrieve fields that are available during the Delete operation for the Sales, Info Manager and CRM sub-modules.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/query?module=admin&operation=delete&roleTypeForQuery=1&subModule=user</td></tr><tr><td></td></tr></table><img src=\"images/Admin_DeleteQuery.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdminDeleteQueryResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeleteSchemaArray"
                }
            }
        },
        "/create": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section provides details (as well as an example) for performing the Create operation to add a user in the FranConnect system. Note that it is important to specify the “userLevel”, as this would determine the type of user that would be created. For example, to create a corporate user, the “userLevel” must be “Corporate”. Similarly, for regional users, the “userLevel” must be “Regional” and for brand/divisional users, the “userLevel” must be “Divisional”. For franchisee users, the “userLevel” can either be an “Owner” or an “Employee”, depending on the type of franchisee user that is created.</p> <table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path> /rest/dataservices/create?module=admin&subModule=user&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform a Create operation for adding a user using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “admin”</u>.</p></li><li><p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “user”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add a user. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p class=\"western\">Performing the above mentioned steps would create a new admin user. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for that user and can be used for the Update, Retrieve and the Delete operations.</p><img src=\"images/Admin_CreateUser.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdminCreateUserResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AdminCreateUserArray"
                }
            }
        },
        "/retrieve": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving the details of a user. In a similar manner, the Retrieve operation can be performed to retrieve information for a franchisee location. </p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=admin&subModule=user&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform a Retrieve operation for retrieving the details of a user using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above.  The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “admin”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “user”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a user. In this case,<strong> \"referenceId\"</strong> has been used to retrieve the details of an existing user. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><img src=\"images/Admin_RetrieveUser.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdminRetrieveUserResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AdminRetrieveUserArray"
                }
            }
        },
        "/update": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the Update operation performed for updating the details of a user. In a similar manner, the Update operation can be performed to update information for a franchisee location. </p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/update?module=admin&subModule=user&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform an Update operation for updating the details of a user using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Update operation is being performed. In this case, the module to be used is “admin”</u>.</p></li><li><p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “user”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to update a user. In this case,<strong> \"referenceId\"</strong> has been used to update the details of an existing user. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><img src=\"images/Admin_UpdateUser.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdminUpdateUserResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AdminUpdateUserArray"
                }
            }
        },
        "/activate": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Activate",
                "description": "<p class=\"western\">This section contains an example of the Activate operation. This operation can be performed to activate a user. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/activate?module=admin&subModule=user&xmlString=requiredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform an activate operation using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Update operation is being performed. In this case, the module to be used is “admin”</u>.</p> </li> <li> <p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “user”.</p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to activate a user. In this case,<strong> \"referenceId\"</strong> has been used to activate an existing user. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Activate. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><img src=\"images/Admin_ActivateUser.png\">",
                "consumes": [
                    "application/xml"
                ],
                "produces": [
                    "application/xml"
                ],
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcRequest><adminUser>\n<referenceId>20217750</referenceId>\n</adminUser>\n</fcRequest>",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdminSubModule"
                                },
                                "xml": {
                                    "name": "fcRequest",
                                    "wrapped": true
                                }
                            }
                        }
                    },
                    "description": "Admin User Activation object",
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ActivateUserResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/deactivate": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Deactivate",
                "description": "<p class=\"western\">This section contains an example of the Deactivate operation. This operation can be performed to deactivate a user. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/deactivate?module=admin&subModule=user&xmlString=requiredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform a deactivate operation using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Update operation is being performed. In this case, the module to be used is “admin”</u>.</p> </li> <li> <p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “user”.</p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to deactivate a user. In this case,<strong> \"referenceId\"</strong> has been used to deactivate an existing user. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Deactivate. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><img src=\"images/Admin_DeactivateUser.png\">",
                "consumes": [
                    "application/xml"
                ],
                "produces": [
                    "application/xml"
                ],
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcRequest><adminUser>\n<referenceId>20217750</referenceId>\n</adminUser>\n</fcRequest>",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdminSubModule"
                                },
                                "xml": {
                                    "name": "fcRequest",
                                    "wrapped": true
                                }
                            }
                        }
                    },
                    "description": "Admin User Activation object",
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DeactivateUserResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/delete": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\">This section contains an example of the Delete operation performed for deleting the details of a user. Note that the FranConnect API does not support the deletion of a Franchisee location. </p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/delete?module=admin&subModule=user&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform a Delete operation for deleting the details of a user using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above.  The following items must be used in the in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “admin”</u>.</p></li><li><p>The sub-module for which the Delete operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “user”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to delete a user. In this case,<strong> \"referenceId\"</strong> has been used to delete an existing user. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><img src=\"images/Admin_DeleteUser.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdminDeleteUserResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/AdminDeleteUserArray"
                }
            }
        },
        "/create?module=admin&subModule=division": {
            "post": {
                "tags": [
                    "Division"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section provides details (as well as an example) for performing the Create operation to add a new division in the FranConnect system.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/create?module=admin&subModule=division&xmlString=requiredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform a Create operation for adding a new division using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Create operation is being performed. In this case, the module to be used is “admin”.</p> </li> <li> <p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is division.</p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add a division. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><p class=\"western\">Performing the above mentioned steps would create a new division. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for the newly created division and can be used for the Update, Retrieve and the Delete operations.</p><img src=\"images/Admin_CreateDivision.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateDivisionResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcRequest>\n<adminDivision>\n<divisionName>Division1</divisionName>\n</adminDivision>\n</fcRequest>",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdminSubModule"
                                },
                                "xml": {
                                    "name": "fcRequest",
                                    "wrapped": true
                                }
                            }
                        }
                    },
                    "description": "Admin Division Creation object",
                    "required": true
                }
            }
        },
        "/retrieve?module=admin&subModule=division": {
            "post": {
                "tags": [
                    "Division"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving the details of a division. For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/retrieve?module=admin&subModule=division&filterXML=filteredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform a Retrieve operation for retrieving the details of a division using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “admin”. </p> </li> <li> <p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is \"division\". </p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve Area/Region. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><p> <strong>Note:</strong>The API gives you the ability to retrieve divisions on the basis of various tags, which have to be passed inside the filter tag. You can use the following tags (or a combination of them) to retrieve divisions:<ol> <li>referenceId (multiple referenceId(s) must be passed as comma-separated)</li> <li>divisionName</li> <li>createdDateFrom</li> <li>createdDateTo</li> <li>lastUpdatedOnFrom</li> <li>lastUpdatedOnTo</li> <li>createdBy</li> <li>createdByReferenceId</li></ol></p><img src=\"images/Admin_RetrieveDivision.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveDivisionResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcRequest><filter>\n<referenceId>787078813,1979772448</referenceId>\n</filter>\n</fcRequest>",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdminSubModule"
                                },
                                "xml": {
                                    "name": "fcRequest",
                                    "wrapped": true
                                }
                            }
                        }
                    },
                    "description": "Admin Division Retrieval object",
                    "required": true
                }
            }
        },
        "/update?module=admin&subModule=division": {
            "post": {
                "tags": [
                    "Division"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the Update operation performed for updating the details of a division.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/update?module=admin&subModule=division&xmlString=requiredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform an Update operation for updating the details of a division using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Update operation is being performed. In this case, the module to be used is “admin”. </p> </li> <li> <p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is \"division\". </p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to update a division. In this case,<strong> \"referenceId\"</strong> has been used to update the details of an existing division. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><img src=\"images/Admin_UpdateDivision.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UpdateDivisionResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcRequest><adminDivision>\n<referenceId>787078813</referenceId>\n<divisionName>LLC Aqcua<divisionName>\n</adminDivision>\n</fcRequest>",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdminSubModule"
                                },
                                "xml": {
                                    "name": "fcRequest",
                                    "wrapped": true
                                }
                            }
                        }
                    },
                    "description": "Admin Division Retrieval object",
                    "required": true
                }
            }
        },
        "/retrieve?module=admin&subModule=areaRegion": {
            "post": {
                "tags": [
                    "Area/Region"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving the details of an Area/Region. For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/retrieve?module=admin&subModule=areaRegion&filterXML=filteredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform a Retrieve operation for retrieving the details of an Area/Region using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “admin”. </p> </li> <li> <p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is \"areaRegion\".</p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve Area/Region. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><p> <strong>Note:</strong>The API gives you the ability to retrieve Area/Region on the basis of various tags, which have to be passed inside the filter tag. You can use the following tags (or a combination of them) to retrieve Area/Region(s):<ol> <li>referenceId (multiple referenceId(s) must be passed as comma-separated)</li> <li>areaName</li> <li>lastUpdatedOnFrom</li> <li>lastUpdatedOnTo</li></ol></p><img src=\"images/Admin_RetrieveAreaRegion.png\">",
                "operationId": "Retrieve_Area_Region",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveAreaRegionResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcRequest><filter>\n<referenceId>704429734</referenceId>\n</filter>\n</fcRequest>",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdminSubModule"
                                },
                                "xml": {
                                    "name": "fcRequest",
                                    "wrapped": true
                                }
                            }
                        }
                    },
                    "description": "Admin Area/Region Retrieval object",
                    "required": true
                }
            }
        },
        "/retrieve?module=admin&subModule=multiUnit": {
            "post": {
                "tags": [
                    "Multi-Unit"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving the details of a Multi-Unit owner. For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/retrieve?module=admin&subModule=multiUnit&filterXML=filteredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform a Retrieve operation for retrieving the details of a Multi-Unit owner using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “admin”. </p> </li> <li> <p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is \"multiUnit\". </p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve Area/Region. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><p> <strong>Note:</strong>The API gives you the ability to retrieve Multi-Unit owners on the basis of various tags, which have to be passed inside the filter tag. You can use the following tags (or a combination of them) to retrieve Multi-Unit owner(s):<ol> <li>referenceId (multiple referenceId(s) must be passed as comma-separated)</li> <li>muidValue</li> <li>lastUpdatedOnFrom</li> <li>lastUpdatedOnTo</li></ol></p><img src=\"images/Admin_RetrieveMultiUnit.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMultiUnitOwnerResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcRequest><filter>\n<referenceId>1261786866</referenceId>\n</filter>\n</fcRequest>",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdminSubModule"
                                },
                                "xml": {
                                    "name": "fcRequest",
                                    "wrapped": true
                                }
                            }
                        }
                    },
                    "description": "Admin Area/Region Retrieval object",
                    "required": true
                }
            }
        },
        "/create?module=fs&subModule=lead": {
            "post": {
                "tags": [
                    "Sales Lead"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section contains an example of the Create operation performed for adding the Primary Info for a Sales lead. In a similar manner, the Create operation can be performed to add other details such as Call, Compliance and Remark for the Sales lead. </p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/create?module=fs&subModule=lead&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform a Create operation for adding a lead using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be used in the  header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “lead”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add a lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p class=\"western\">Performing the above mentioned steps would create a new Sales Lead. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for that lead and can be used for the Update, Retrieve and the Delete operations.</p> <p><strong>Note:</strong> In order to create data in any tab/sub-module other than “Primary Info”, it is mandatory to specify the lead for which this data is to be created. The best way to uniquely specify a lead is through its <u><a href=\"#operation/Sales_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/Sales_Lead_Create.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FSCreateLeadResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FSCreateLeadArray"
                }
            }
        },
        "/retrieve?module=fs&subModule=lead": {
            "post": {
                "tags": [
                    "Sales Lead"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving the details of a Sales lead. In a similar manner, the Retrieve operation can be performed to retrieve other details for the lead.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/retrieve?module=fs&subModule=lead&filterXML=filteredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform a Retrieve operation for retrieving the details of a lead using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p> </li> <li> <p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “lead”.</p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a lead. In this case,<strong> \"referenceId\"</strong> has been used to retrieve the details of an existing lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol><p><h1>Case: Retrieve Merged Lead</h1><p> When leads are merged together, they result in a singular lead that is referred to as either a child lead or a merged lead. The leads that come together during the merging process are called the parent leads. Once such a merge occurs in the system, the parent leads are archived and can not be accessed anymore. <br> If you try to retrieve information corresponding to any of the parent leads through their <b>referenceId</b>, the API response will throw a soft error, expressing that the parent lead can not be retrieved because it does not exist anymore. Along with that, the response will in turn give you the <b>referenceId</b> of the child lead/merged lead as part of the <b>mergedChildId</b> tag, which you can then use to retrieve the information of the merged lead. <br> When you retrieve a child lead/merged lead, the API response will show-case all the parent lead Ids that were involved in the merging process, as part of the <b>mergedParentIds</b> tag in case of xml-type response.</p></p></p><a name=\"Pagination\"></a><p><strong>Note:</strong> In order to retrieve data from any tab/sub-module other than “Primary Info”, it is mandatory to specify the parameter(s) in your filterXML, based on which the results would be filtered. You can also perform a Query operation to retrieve the names of the fields that you would want to use as parameters in the filterXML. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/Sales_Lead_Retrieve.png\"><p><a name=\"Pagination\"></a><strong>Retrieve Values using Pagination</strong></p><p>Pagination is a process that is used to divide the potential result into records and retrieve the required records, one by one on demand. All retrieve operations using the FranConnect API support pagination, with the help of limit and offset parameters appended in the request URL.</p><p>An offset is simply the number of records that are skipped after which the response data is retrieved. For the FranConnect API, offset can have any positive value. By default, 0 is considered as the offset value. </p><p>Limit is the total number of records that are to be retrieved in one response. For the FranConnect API, limit can have a maximum value of 100. </p><p>To get a paginated response for your retrieve request, you must define how many records you want to retrieve, using the <strong>limit </strong>parameter, and from where would the records be starting from, using the <strong>offset </strong>parameter. For example, if your response dataset contains more than 100 records, you must use pagination as \"offset=0&limit=100\". For the next iteration, you must use pagination as \"offset=100&limit=100\". Note that the response data also contains a flag <strong> \"hasMoreRecords=true\"</strong> which indicates that there are more records remaining to be paginated.</p><p>Following is an example of the limit and offset parameters used for a Retrieve operation using the Sales sub-module. In a similar manner, these parameters can be applied to retrieve fields that are available during the Retrieve operation for the Admin, Info Manager and CRM sub-modules.</p></p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/retrieve?module=fs&subModule=lead&responseType=xml&includeLimit=on&limit=50&offset=0&filterXML=filteredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><img src=\"images/Retrieve_Limit_Offset_example.png\">",
                "operationId": "Sales_Retrieve_Lead",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FSRetrieveLeadResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FSRetrieveLeadArray"
                }
            }
        },
        "/update?module=fs&subModule=lead": {
            "post": {
                "tags": [
                    "Sales Lead"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the Update operation performed for updating a Sales lead. In a similar manner, the Update operation can be performed to modify other details for the lead. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/update?module=fs&subModule=lead&xmlString=requiredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform an Update operation for updating a lead using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Update operation is being performed. In this case, the module to be used is “fs”</u>.</p> </li> <li> <p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “lead”.</p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to update a lead. In this case,<strong> \"referenceId\"</strong> has been used to update the details of an existing lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><h1>Case: Update Parent Lead</h1><p> When leads are merged together, they result in a singular lead that is referred to as either a child lead or a merged lead. The leads that come together during the merging process are called the parent leads. Once such a merge occurs in the system, the parent leads are archived and can not be accessed anymore. <br><br> If you try to update information corresponding to any of the parent leads through their <b>referenceId</b>, the API response will throw a soft error, expressing that the parent lead can not be updated because it does not exist anymore. Along with that, the response will in turn give you the <b>referenceId</b> of the child lead/merged lead as part of the <b>mergedChildId</b> tag, which you can then use to update the information of the merged lead. <br></p><p><strong>Note:</strong> In order to update data in any tab/sub-module other than “Primary Info”, it is mandatory to specify the lead for which this data is to be updated. The best way to uniquely specify a lead is through its <u><a href=\"#operation/Sales_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to update data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/Sales_Lead_Update.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FSUpdateLeadResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FSUpdateLeadArray"
                }
            }
        },
        "/delete?module=fs&subModule=lead": {
            "post": {
                "tags": [
                    "Sales Lead"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\">This section contains an example of the Delete operation performed for deleting a Sales lead. In a similar manner, the Delete operation can be performed to delete other details for the lead. </p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/delete?module=fs&subModule=lead&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Delete operation</h4><p class=\"western\">To perform a Delete operation for deleting a lead using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The sub-module for which the Delete operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “lead”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to delete a lead. In this case,<strong> \"referenceId\"</strong> has been used to delete an existing lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to delete data in any tab/sub-module other than “Primary Info”, it is mandatory to specify the lead for which this data is to be deleted. The best way to uniquely specify a lead is through its <u><a href=\"#operation/Sales_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to delete data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/Sales_Lead_Delete.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FSDeleteLeadResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FSDeleteLeadArray"
                }
            }
        },
        "/retrieveFieldData?module=fs&subModule=lead": {
            "post": {
                "tags": [
                    "Sales Lead"
                ],
                "summary": "Retrieve Field Values",
                "description": "<p class=\"western\">This section details the Retrieve operation performed to retrieve the values of different fields under the “Primary Info” tab/sub-module for a Sales lead. Using the <strong>retrieveFieldData </strong>endpoint, you can retrieve the values of following fields for a Sales lead: stateID, countyID, country, leadOwnerID, leadRatingID, leadStatusID, leadSource3ID, leadSource2ID, leadRatingID, and serviceID.</p><p>The fields whose values can be retrieved can be of the following two types: dependent and independent fields. For example, stateID and the leadSource3ID are dependent fields. To retrieve the value of a dependent field, you must provide the dependent field name and value as parameters in the request URL. To retrieve the value of an independent field, you must pass the field name as a path parameter in the request URL.</p><p>This section contains an example of the Retrieve operation performed to retrieve the values of the field <strong>county ID </strong>which is dependent on the field <strong>country</strong>.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieveFieldData?module=fs&subModule=lead&responseType=XML&fieldName=fieldInternalName&dependentFieldName=dependentFieldInternalName&dependentFieldValue=dependentFieldInternalValue</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Retrieve operation using the retrieveFieldData endpoint</h4><p class=\"western\">To perform a Retrieve operation for the above mentioned fields using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “lead”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><p><li>Name of the field whose value is to be retrieved using this endpoint. In this case, the name of the field is “countyID”.</p></li><p><li>The independent or dependent (if any) field values that would be used to retrieve the values of the desired field. In this case, the dependent field name to be used is “country” and dependent field value to be used is “USA”.</li></ol></p><img src=\"images/RetrieveFieldData_Sales_Lead.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/retrieveFieldDataResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/retrieveFieldDataArray"
                }
            }
        },
        "/create?module=fim&subModule=franchisee": {
            "post": {
                "tags": [
                    "Franchisee"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section contains an example of the Create operation performed for adding a franchisee location through the Info Manager module. In a similar manner, the Create operation can be performed to add the different Info Manager entities.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"15%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/create?key=generatedAccessToken&module=fim&subModule=franchisee&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform a Create operation for adding a franchisee location using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above.The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “fim”</u>.</p></li><li><p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “franchisee”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add a franchisee location. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p class=\"western\">Performing the above mentioned steps would create a new  franchisee location. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for that franchisee location and can be used for the Update, Retrieve and the Delete operations.</p><p><strong>Note:</strong> In order to create data in any tab/sub-module other than “Center Info”, it is mandatory to specify the franchisee for which this data is to be created. The best way to uniquely specify a franchisee is through its <u><a href=\"#operation/FIM_Retrieve_Loc\">Reference ID</a></u>. For a franchisee location, the reference ID refers to its Franchisee number. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/InfoMgr_CreateFranchise.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FimCreateFranchiseeResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FimCreateFranchiseeArray"
                }
            }
        },
        "/retrieve?module=fim&subModule=franchisee": {
            "post": {
                "tags": [
                    "Franchisee"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving a franchisee location through the Info Manager module. In a similar manner, the Retrieve operation can be performed to Retrieve the different Info Manager entities.</p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=fim&subModule=franchisee&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform a Retrieve operation for retrieving a franchisee location using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “fim”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “franchisee”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a franchisee location. In this case,<strong> \"referenceId\"</strong> has been used to retrieve the details of an existing franchisee location. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to retrieve data from any tab/sub-module other than “Center Info”, it is mandatory to specify the parameter(s) in your filterXML, based on which the results would be filtered. You can also perform a Query operation to retrieve the names of the fields that you would want to use as parameters in the filterXML. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/InfoMgr_RetrieveFranchise.png\">",
                "operationId": "FIM_Retrieve_Loc",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FimRetrieveFranchiseeResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FimRetrieveFranchiseeArray"
                }
            }
        },
        "/update?module=fim&subModule=franchisee": {
            "post": {
                "tags": [
                    "Franchisee"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the Update operation performed for updating a franchisee location through the Info Manager module. In a similar manner, the Update operation can be performed to update the different Info Manager entities.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/update?module=fim&subModule=franchisee&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform an Update operation for updating a franchisee location using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above.  The following items must be used in the  header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Update operation is being performed. In this case, the module to be used is “fim”</u>.</p></li><li><p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “franchisee”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to update a franchisee location. In this case,<strong> \"referenceId\"</strong> has been used to update the details of an existing franchisee location. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to update data in any tab/sub-module other than “Center Info”, it is mandatory to specify the franchisee for which this data is to be updated. The best way to uniquely specify a franchisee is through its <u><a href=\"#operation/FIM_Retrieve_Loc\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/InfoMgr_UpdateFranchise.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FimUpdateFranchiseeResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FimUpdateFranchiseeArray"
                }
            }
        },
        "/delete?module=fim&subModule=franchisee": {
            "post": {
                "tags": [
                    "Franchisee"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\">This section contains an example of the Delete operation to delete a franchisee location through the Info Manager module. Note that the FranConnect API does not support the deletion of a franchisee location. However, the Delete operation can be performed to delete the other Info Manager entities.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/delete?module=fim&subModule=franchisee&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform a Delete operation for deleting a sub module under the Info Manager module using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “fim”</u>.</p></li><li><p>The sub-module for which the Delete operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “franchisee”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to delete a sub module. In this case,<strong> \"referenceId\"</strong> has been used to delete an existing franchisee location. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to delete data in any tab/sub-module other than “Center Info”, it is mandatory to specify the franchisee for which this data is to be deleted. The best way to uniquely specify a franchisee is through its <u><a href=\"#operation/FIM_Retrieve_Loc\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to delete data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/InfoMgr_DeleteAgreement.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FimDeleteFranchiseeResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FimDeleteFranchiseeArray"
                }
            }
        },
        "/manage-unit/v1/units/{franchiseId}": {
            "get": {
                "tags": [
                    "Franchisee"
                ],
                "summary": "Retrieve Franchise By Id",
                "description": "<p class=\"western\">Make a GET request to the specified endpoint to retrieve the Center Info details of a franchise. The endpoint requires <b>franchiseId</b> as a path parameter.</p><p> <b>Note:</b> Along with retrieving the primary information of a franchise (also referred to as a Unit), this endpoint retrieves information corresponding to custom fields created in the Center Info section, and can be found inside the object <b>customFields</b>.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>GET</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-unit/v1/units/{franchiseId}</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-unit/v1/units/{franchiseId}</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Franchise_By_Id.png\"></ol>",
                "operationId": "Retrieve_Franchise_By_Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "franchiseId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveFranchiseByIdResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/create?module=regional&subModule=areaInfo": {
            "post": {
                "tags": [
                    "Area Info"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section contains an example of the Create operation performed for adding Area-Info through the Regional module. In a similar manner, the Create operation can be performed to add different Regional entities.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"15%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/create?key=generatedAccessToken&module=regional&subModule=areaInfo&xmlString=requiredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform a Create operation for adding Area-Info using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above.The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Create operation is being performed. In this case, the module to be used is “regional”</u>. </p> </li> <li> <p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “areaInfo”. </p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add an Area-Info. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><p class=\"western\">Performing the above mentioned steps would create an Area-Info for the chosen Area-region. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for the added Area-Info and can be used for the Update, Retrieve and the Delete operations.</p><p><strong>Note:</strong> In order to create data for any of the tabs/sub-modules (for instance Area-Info, that has been taken as an example on the right-hand side panel), it is mandatory to specify the Area-region for which this data is to be created. The referenceId of an Area-region can be acquired through this <u><a href=\"#operation/Retrieve_Area_Region\">request</a></u>, which then has to be passed as \"parentReferenceId\" in the payload. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/Create_Area_Region_Tab.png\">",
                "operationId": "Create_Area_Region_Tab",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateAreaRegionTabResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "examples": {
                                "createAreaRegion": {
                                    "summary": "Create New Area/Region",
                                    "value": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcRequest>\n<regionalAreaInfo>\n<parentReferenceId>130544557</parentReferenceId>\n<licenseType>New License</licenseType>\n<agreementType>Area Franchisee</agreementType>\n<effectiveDate>2022-03-01</effectiveDate>\n<expirationDate>2023-03-01</expirationDate>\n<address>41C, Clinton Street</address>\n<city>Iowa City</city>\n<country>USA</country>\n<state>Iowa</state>\n<email>test@gmail.com</email>\n</regionalAreaInfo>\n</fcRequest>\n",
                                    
                                },
                                "createNewEntityInRegional": {
                                    "summary": "Create New Entity for an Area/Region",
                                    "value": "<fcRequest>\n <regionalEntityDetails>\n <parentReferenceId>130544557</parentReferenceId>\n <entityType>New</entityType>\n <fimTtEntityName>New Company LLC Sample</fimTtEntityName>\n <fimDdDateOfFormation>2023-01-11</fimDdDateOfFormation>\n <fimCbEntityType>Limited Liability Company</fimCbEntityType>\n <clientEntityID>SampleLLC01</clientEntityID>\n </regionalEntityDetails>\n</fcRequest>\n"
                                }
                            },
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdminSubModule"
                                },
                                "xml": {
                                    "name": "fcRequest",
                                    "wrapped": true
                                }
                            }
                        }
                    },
                    "description": "Create Area-region tab object",
                    "required": true
                }
            }
        },
        "/retrieve?module=regional&subModule=areaInfo": {
            "post": {
                "tags": [
                    "Area Info"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving Area-Info through the Regional module. In a similar manner, the Retrieve operation can be performed to Retrieve different Regional entities.</p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/retrieve?module=regional&subModule=areaInfo&filterXML=filteredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform a Retrieve operation for retrieving Area-Info using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “regional”</u>. </p> </li> <li> <p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “areaInfo”.</p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve Area-Info of an Area-region. In the example on the right panel <strong> \"referenceId\"</strong> has been used to retrieve the Area-Info details of an Area-region. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><p><strong>Note:</strong> In order to retrieve data for any of the tabs/sub-modules (for instance Area-Info, that has been taken as an example on the right-hand side panel), it is mandatory to specify the parameter(s) in your filterXML, based on which the results would be filtered. You can also perform a Query operation to retrieve the names of the fields that you would want to use as parameters in the filterXML. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/Retrieve_Area_Region_Tab.png\">",
                "operationId": "Retrieve_Area_Region_Tab",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveAreaRegionTabResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcRequest>\n<filter>\n<areaInfo>\n<referenceId>1375193751</referenceId>\n</areaInfo>\n</filter>\n</fcRequest>\n",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdminSubModule"
                                },
                                "xml": {
                                    "name": "fcRequest",
                                    "wrapped": true
                                }
                            }
                        }
                    },
                    "description": "Retrieve Area-region tab object",
                    "required": true
                }
            }
        },
        "/update?module=regional&subModule=areaInfo": {
            "post": {
                "tags": [
                    "Area Info"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the Update operation performed for updating Area-Info through the Regional module. In a similar manner, the Update operation can be performed to update different Regional entities.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/update?module=regional&subModule=areaInfo&xmlString=requiredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform an Update operation for updating Area-Info using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be used in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Update operation is being performed. In this case, the module to be used is “regional”</u>. </p> </li> <li> <p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “areaInfo”.</p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to update the Area-Info. In this case,<strong> \"referenceId\"</strong> has been used to update Area-Info details of an Area-region. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><p><strong>Note:</strong> In order to update data for any of the tabs/sub-modules (for instance Area-Info, that has been taken as an example on the right-hand side panel), it is mandatory to specify the sub-module for which this data is to be updated. The referenceId of a tab/sub-module can be acquired through this <u><a href=\"#operation/Retrieve_Area_Region_Tab\">request</a></u> and has to be passed in the payload. You can also perform a Query operation to retrieve the schema that would be used to update data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/Update_Area_Region_Tab.png\">",
                "operationId": "Update_Area_Region_Tab",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UpdateAreaRegionTabResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcRequest>\n<regionalAreaInfo>\n<referenceId>130544557</referenceId>\n<initialFee>15000</initialFee>\n<email>testUpdated@gmail.com</email>\n<initialFeePercentage>50</initialFeePercentage>\n<notes>Updated Notes</notes>\n</regionalAreaInfo>\n</fcRequest>\n",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdminSubModule"
                                },
                                "xml": {
                                    "name": "fcRequest",
                                    "wrapped": true
                                }
                            }
                        }
                    },
                    "description": "Update Area-region tab object",
                    "required": true
                }
            }
        },
        "/delete?module=regional&subModule=areaInfo": {
            "post": {
                "tags": [
                    "Area Info"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\">This section contains an example of the Delete operation to delete Area-Info through the Regional module. The Delete operation can be performed to delete the other Regional entities as well.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"20%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>API Endpoint</strong></td> <td>:</td> <td> <context-path> /rest/dataservices/delete?module=regional&subModule=areaInfo&xmlString=requiredxmlString&responseType=XML </td> </tr> <tr> <td></td> </tr></table><p class=\"western\">To perform a Delete operation for deleting a sub module under the Regional module using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p> </li></ol><p>The following items must be used as path parameters:</p><ol> <li> <p>The module for which the Delete operation is being performed. In this case, the module to be used is “regional”</u>. </p> </li> <li> <p>The sub-module for which the Delete operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “areaInfo”. </p> </li> <li> <p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p> </li> <li> <p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to delete a sub module. In this case,<strong> \"referenceId\"</strong> has been used to delete the Area-Info of an Area-region. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u> </li></ol></p><p><strong>Note:</strong> In order to delete data for any of the tabs/sub-modules (for instance Area-Info, that has been taken as an example on the right-hand side panel), it is mandatory to specify the sub-module for which this data is to be deleted. The referenceId of a tab/sub-module can be acquired through this <u><a href=\"#operation/Retrieve_Area_Region_Tab\">request</a></u> and has to be passed in the payload. You can also perform a Query operation to retrieve the schema that would be used to delete data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p></p><img src=\"images/Delete_Area_Region_Tab.png\">",
                "operationId": "Delete_Area_Region_Tab",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DeleteAreaRegionTabResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcRequest>\n<regionalAreaInfo>\n<referenceId>1771612170</referenceId><regionalAreaInfo>\n</fcRequest>\n",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdminSubModule"
                                },
                                "xml": {
                                    "name": "fcRequest",
                                    "wrapped": true
                                }
                            }
                        }
                    },
                    "description": "Delete Area-region tab object",
                    "required": true
                }
            }
        },
        "/create?module=cm&subModule=lead": {
            "post": {
                "tags": [
                    "CRM Lead"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section contains an example of the Create operation to add a CRM lead through the CRM > Leads module. Similarly, you can use the Create operation to add data to any of the tabs/ sub-modules in CRM > Leads.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/create?module=cm&subModule=lead&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform a Create operation for adding a CRM lead using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “lead”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add a CRM lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p class=\"western\">Performing the above mentioned steps would create a new CRM lead. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for that CRM lead and can be used for the Update, Retrieve and the Delete operations.</p><p><strong>Note:</strong> In order to create data in any tab/sub-module other than “Lead Info”, it is mandatory to specify the lead for which this data is to be created. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_CreateLead.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMCreateLeadResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateCRMLeadArray"
                }
            }
        },
        "/retrieve?module=cm&subModule=lead": {
            "post": {
                "tags": [
                    "CRM Lead"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation to retrieve a CRM lead through the CRM > Leads module. Similarly, you can use the Retrieve operation to retrieve data from any of the tabs/ sub-modules in CRM > Leads.</p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=cm&subModule=lead&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for retrieving a CRM lead using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “lead”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a CRM lead. In this case,<strong> \"referenceId\"</strong> has been used to retrieve the details of an existing CRM lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to retrieve data from any tab/sub-module other than “Lead Info”, it is mandatory to specify the parameter(s) in your filterXML, based on which the results would be filtered. You can also perform a Query operation to retrieve the names of the fields that you would want to use as parameters in the filterXML. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_RetrieveLead.png\">",
                "operationId": "CM_Retrieve_Lead",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMRetrieveLeadResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RetrieveCRMLeadArray"
                }
            }
        },
        "/update?module=cm&subModule=lead": {
            "post": {
                "tags": [
                    "CRM Lead"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the Update operation to update a CRM lead through the CRM > Leads module. Similarly, you can use the Update operation to updata data from any of the tabs/ sub-modules in CRM > Leads.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/update?module=cm&subModule=lead&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform an Update operation</h4><p class=\"western\">To perform an Update operation for updating a CRM lead using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Update operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “lead”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to update a CRM lead. In this case,<strong> \"referenceId\"</strong> has been used to update the details of an existing CRM lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to update data in any tab/sub-module other than “Lead Info”, it is mandatory to specify the lead for which this data is to be updated. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to update data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_UpdateLead.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMUpdateLeadResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateCRMLeadArray"
                }
            }
        },
        "/delete?module=cm&subModule=lead": {
            "post": {
                "tags": [
                    "CRM Lead"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\">This section contains an example of the Delete operation to delete a CRM lead through the CRM > Leads module. Similarly, you can use the Delete operation to delete data from any of the tabs/ sub-modules in CRM > Leads.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/delete?module=cm&subModule=lead&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Delete operation</h4><p class=\"western\">To perform a Delete operation for deleting a CRM lead using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p></p></li><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Delete operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “lead”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to delete a CRM lead. In this case,<strong> \"referenceId\"</strong> has been used to delete an existing CRM lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to delete data in any tab/sub-module other than “Lead Info”, it is mandatory to specify the lead for which this data is to be deleted. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to delete data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_DeleteLead.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMDeleteLeadResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeleteCRMLeadArray"
                }
            }
        },
        "/create?module=cm&subModule=contact": {
            "post": {
                "tags": [
                    "Contact"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section contains an example of the Create operation to add a CRM contact through the CRM > Contacts module. Similarly, you can use the Create operation to add data to any of the tabs/ sub-modules in CRM > Contacts.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/create?module=cm&subModule=contact&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform a Create operation for adding a CRM contact using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “contact”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add a CRM contact. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p class=\"western\">Performing the above mentioned steps would create a new CRM contact. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for that CRM contact and can be used for the Update, Retrieve and the Delete operations.</p> <p><strong>Note:</strong> In order to create data in any tab/sub-module other than “Primary Info”, it is mandatory to specify the lead for which this data is to be created. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_CreateContact.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMCreateContactResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateCRMContactArray"
                }
            }
        },
        "/retrieve?module=cm&subModule=contact": {
            "post": {
                "tags": [
                    "Contact"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation to retrieve a CRM contact through the CRM > Contacts module. Similarly, you can use the Retrieve operation to retrieve data from any of the tabs/ sub-modules in CRM > Contacts.</p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=cm&subModule=contact&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform a Retrieve operation for retrieving a CRM contact using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above.The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “contact”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a CRM contact. In this case,<strong> \"referenceId\"</strong> has been used to retrieve the details of an existing contact.  In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to retrieve data from any tab/sub-module other than “Primary Info”, it is mandatory to specify the parameter(s) in your filterXML, based on which the results would be filtered. You can also perform a Query operation to retrieve the names of the fields that you would want to use as parameters in the filterXML. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_RetrieveContact.png\">",
                "operationId": "CRM_Retrieve_Contact",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMRetrieveContactResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RetrieveCRMContactArray"
                }
            }
        },
        "/update?module=cm&subModule=contact": {
            "post": {
                "tags": [
                    "Contact"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the Update operation to update a CRM contact through the CRM > Contacts module. Similarly, you can use the Update operation to update data from any of the tabs/ sub-modules in CRM > Contacts.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/update?module=cm&subModule=contact&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform an Update operation for updating a CRM contact using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Update operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “contact”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to update a CRM contact. In this case,<strong> \"referenceId\"</strong> has been used to update the details of an existing CRM contact. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to update data in any tab/sub-module other than “Primary Info”, it is mandatory to specify the lead for which this data is to be updated. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to update data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_UpdateContact.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMUpdateContactResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateCRMContactArray"
                }
            }
        },
        "/delete?module=cm&subModule=contact": {
            "post": {
                "tags": [
                    "Contact"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\">This section contains an example of the Delete operation to delete a CRM contact through the CRM > Contacts module. Similarly, you can use the Delete operation to delete data from any of the tabs/ sub-modules in CRM > Contacts.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/delete?module=cm&subModule=contact&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><p class=\"western\">To perform a Delete operation for deleting a CRM contact using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Delete operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “contact”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to delete a CRM contact. In this case,<strong> \"referenceId\"</strong> has been used to delete an existing CRM contact. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to delete data in any tab/sub-module other than “Primary Info”, it is mandatory to specify the lead for which this data is to be deleted. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to delete data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_DeleteContact.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMDeleteContactResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeleteCRMContactArray"
                }
            }
        },
        "/create?module=cm&subModule=account": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section contains an example of the Create operation to add a CRM account through the CRM > Accounts module. Similarly, you can use the Create operation to add data to any of the tabs/ sub-modules in CRM > Accounts.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/create?module=cm&subModule=account&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Create operation</h4><p class=\"western\">To perform a Create operation for adding a CRM account using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “account”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add a CRM account. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p class=\"western\">Performing the above mentioned steps would create a new CRM account. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for that CRM account and can be used for the Update, Retrieve and the Delete operations.</p> <p><strong>Note:</strong> In order to create data in any tab/sub-module other than “Account Info”, it is mandatory to specify the lead for which this data is to be created. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_CreateAccount.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMCreateAccountResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateCRMAccountArray"
                }
            }
        },
        "/retrieve?module=cm&subModule=account": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation to retrieve a CRM account through the CRM > Accounts module. Similarly, you can use the Retrieve operation to retrieve data from any of the tabs/ sub-modules in CRM > Accounts.</p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=cm&subModule=account&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for adding a CRM account using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “account”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a CRM account. In this case,<strong> \"referenceId\"</strong> has been used to retrieve the details of an existing account. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to retrieve data from any tab/sub-module other than “Account Info”, it is mandatory to specify the parameter(s) in your filterXML, based on which the results would be filtered. You can also perform a Query operation to retrieve the names of the fields that you would want to use as parameters in the filterXML. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_RetrieveAccount.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMRetrieveAccountResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RetrieveCRMAccountArray"
                }
            }
        },
        "/update?module=cm&subModule=account": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the Update operation to update a CRM account through the CRM > Accounts module. Similarly, you can use the Update operation to update data from any of the tabs/ sub-modules in CRM > Accounts.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/update?module=cm&subModule=account&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform an Update operation</h4><p class=\"western\">To perform an Update operation for adding a CRM account using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Update operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “account”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to update a CRM account. In this case,<strong> \"referenceId\"</strong> has been used to update the details of an existing account. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to update data in any tab/sub-module other than “Account Info”, it is mandatory to specify the lead for which this data is to be updated. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to update data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_UpdateAccount.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMUpdateAccountResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateCRMAccountArray"
                }
            }
        },
        "/delete?module=cm&subModule=account": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\">This section contains an example of the Delete operation to delete a CRM account through the CRM > Accounts module. Similarly, you can use the Delete operation to delete data from any of the tabs/ sub-modules in CRM > Accounts.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/delete?module=cm&subModule=account&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Delete operation</h4><p class=\"western\">To perform a Delete operation for deleting a CRM account using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Delete operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “account”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to delete a CRM account. In this case,<strong> \"referenceId\"</strong> has been used to delete an existing CRM account. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to delete data in any tab/sub-module other than “Account Info”, it is mandatory to specify the lead for which this data is to be deleted. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to delete data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_Delete_Account.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMDeleteAccountResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeleteCRMAccountArray"
                }
            }
        },
        "/create?module=cm&subModule=transaction": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section contains an example of the Create operation to add a CRM transaction through the CRM > Transactions module. Similarly, you can use the Create operation to add data to any of the tabs/ sub-modules in CRM > Transactions.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/create?module=cm&subModule=transaction&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Create operation</h4><p class=\"western\">To perform a Create operation for adding a transaction using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “transaction”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add a CRM transaction. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p class=\"western\">Performing the above mentioned steps would create a new CRM transaction. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for that CRM transaction and can be used for the Update, Retrieve and the Delete operations.</p><img src=\"images/CRM_CreateTransaction.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMCreateTransactionResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateCRMTransactionArray"
                }
            }
        },
        "/retrieve?module=cm&subModule=transaction": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation to retrieve a CRM transaction through the CRM > Transactions module.</p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=cm&subModule=transaction&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for retrieving a transaction using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be used in the body of the request:</p><ol><li><p>An access token as a key. Steps on how an access token is generated are documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “transaction”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a CRM transaction. In this case,<strong> \"referenceId\"</strong> has been used to retrieve the details of an existing transaction. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><img src=\"images/CRM_RetrieveTransaction.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMRetrieveTransactionResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RetrieveCRMTransactionArray"
                }
            }
        },
        "/update?module=cm&subModule=transaction": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the Update operation performed for updating a CRM transaction through the CRM module.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/update?module=cm&subModule=transaction&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform an Update operation</h4><p class=\"western\">To perform an Update operation for updating a transaction using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above.The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Update operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “transaction”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to update a CRM transaction. In this case,<strong> \"referenceId\"</strong> has been used to update the details of an existing transaction. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><img src=\"images/CRM_UpdateTransaction.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMUpdateTransactionResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateCRMTransactionArray"
                }
            }
        },
        "/delete?module=cm&subModule=transaction": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\">This section contains an example of the Delete operation performed for deleting a CRM transaction through the CRM module.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/delete?module=cm&subModule=transaction&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Delete operation</h4><p class=\"western\">To perform a Delete operation for deleting a transaction using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be used in the the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Delete operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “transaction”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to delete a CRM transaction. In this case,<strong> \"referenceId\"</strong> has been used to delete an existing CRM transaction. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><img src=\"images/CRM_DeleteTransaction.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMDeleteTransactionResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeleteCRMTransactionArray"
                }
            }
        },
        "/create?module=cm&subModule=opportunity": {
            "post": {
                "tags": [
                    "Opportunity"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section contains an example of the Create operation performed for adding a CRM Opportunity through the CRM module. Similarly, you can perform the Create operation to add data in the Transactions sub-module in CRM > Opportunities and the following CRM Opportunity entities: Opportunity Call, Opportunity Remark, and Opportunity Task.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/create?module=cm&subModule=opportunity&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Create operation</h4><p class=\"western\">To perform a Create operation for adding an opportunity using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “opportunity”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add a CRM opportunity. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to create data in any tab/sub-module other than “Opportunity Info”, it is mandatory to specify the lead for which this data is to be created. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><p class=\"western\">Performing the above mentioned steps would create a new CRM opportunity. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for that CRM opportunity and can be used for the Update, Retrieve and the Delete operations.</p><img src=\"images/CRM_CreateOpportunity.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMCreateOpportunityResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateCRMOpportunityArray"
                }
            }
        },
        "/retrieve?module=cm&subModule=opportunity": {
            "post": {
                "tags": [
                    "Opportunity"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving a CRM Opportunity through the CRM module. Similarly, you can perform the Retrieve operation to retrieve data from the Transactions sub-module in CRM > Opportunities and the following CRM Opportunity entities: Opportunity Call, Opportunity Remark, and Opportunity Task. </p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=cm&subModule=opportunity&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for retrieving an opportunity using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “opportunity”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a CRM opportunity. In this case,<strong> \"referenceId\"</strong> has been used to retrieve the details of an existing opportunity. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to retrieve data from any tab/sub-module other than “Opportunity Info”, it is mandatory to specify the parameter(s) in your filterXML, based on which the results would be filtered. You can also perform a Query operation to retrieve the names of the fields that you would want to use as parameters in the filterXML. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_RetrieveOpportunity.png\">",
                "operationId": "CRM_Retrieve_Opportunity",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMRetrieveOpportunityResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/RetrieveCRMOpportunityArray"
                }
            }
        },
        "/update?module=cm&subModule=opportunity": {
            "post": {
                "tags": [
                    "Opportunity"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the Update operation performed for updating a CRM Opportunity through the CRM module. Similarly, you can perform the Update operation to update data in the Transactions sub-module in CRM > Opportunities and the following CRM Opportunity entities: Opportunity Call, Opportunity Remark, and Opportunity Task.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/update?module=cm&subModule=opportunity&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform an Update operation</h4><p class=\"western\">To perform an Update operation for updating an opportunity using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Update operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “opportunity”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to update a CRM opportunity. In this case,<strong> \"referenceId\"</strong> has been used to update the details of an existing opportunity. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to update data in any tab/sub-module other than “Opportunity Info”, it is mandatory to specify the lead for which this data is to be updated. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to update data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_UpdateOpportunity.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMUpdateOpportunityResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateCRMOpportunityArray"
                }
            }
        },
        "/delete?module=cm&subModule=opportunity": {
            "post": {
                "tags": [
                    "Opportunity"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\">This section contains an example of the Delete operation performed for deleting a CRM Opportunity through the CRM module. Similarly, you can perform the Delete operation to delete data from the Transactions sub-module in CRM > Opportunities and the following CRM Opportunity entities: Opportunity Call, Opportunity Remark, and Opportunity Task.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/delete?module=cm&subModule=opportunity&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Delete operation</h4><p class=\"western\">To perform a Delete operation for deleting an opportunity using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be used in header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Delete operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “opportunity”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to delete a CRM opportunity. In this case,<strong> \"referenceId\"</strong> has been used to delete an existing CRM opportunity. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> In order to delete data in any tab/sub-module other than “Opportunity Info”, it is mandatory to specify the lead for which this data is to be deleted. The best way to uniquely specify a lead is through its <u><a href=\"#operation/CM_Retrieve_Lead\">Reference ID</a></u>. You can also perform a Query operation to retrieve the schema that would be used to delete data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_DeleteOpportunity.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMDeleteOpportunityResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeleteCRMOpportunityArray"
                }
            }
        },
        "/create?module=fs&subModule=task": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section contains an example of the Create operation performed for adding a Task for a contact through the Sales module. In a similar manner, the Create operation can be performed to add tasks through the CRM and the Info Manager modules.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/create?module=fs&subModule=task&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Create operation</h4><p class=\"western\">To perform a Create operation for adding a task using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “cmTask”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add a CRM task. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p class=\"western\">Performing the above mentioned steps would create a new task for a contact in the Sales module. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for that task and can be used for the Update, Retrieve and the Delete operations.</p> <p><strong>Note:</strong> Since a task can be created for Sales Lead, CRM Lead, CRM Contact, CRM Opportunity, and/or Info Manager Location, you are required to mention the reference ID of the corresponding object to uniquely identify the record for which the task is to be created. You can get the reference ID by performing a Retrieve operation on the <u><a href=\"#operation/Sales_Retrieve_Lead\">Sales Lead</a></u>, <u><a href=\"#operation/CM_Retrieve_Lead\">CRM Lead</a></u>, <u><a href=\"#operation/CRM_Retrieve_Contact\">CRM Contact</a></u>, <u><a href=\"#operation/CRM_Retrieve_Opportunity\">CRM Opportunity</a></u>, and/or <u><a href=\"#operation/FIM_Retrieve_Loc\">Info Manager Location</a></u>.</p><img src=\"images/FS_CreateTask.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FSCreateTaskResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FSCreateTaskArray"
                }
            }
        },
        "/retrieve?module=fs&subModule=task": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving a Task for a contact through the Sales module. In a similar manner, the Retrieve operation can be performed to retrieve tasks through the CRM and the Info Manager modules. </p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=fs&subModule=task&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for retrieving a task using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be used in the body of the request:</p><ol><li><p>An access token as a key. Steps on how an access token is generated are documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “cmTask”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a CRM task. In this case,<strong> \"referenceId\"</strong> has been used to retrieve the details of an existing task. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> Since a task can be retrieved for Sales Lead, CRM Lead, CRM Contact, CRM Opportunity, and/or Info Manager Location, you are required to mention the reference ID of the corresponding object to uniquely identify the record for which the task is to be retrieved. You can get the reference ID by performing a Retrieve operation on the <u><a href=\"#operation/Sales_Retrieve_Lead\">Sales Lead</a></u>, <u><a href=\"#operation/CM_Retrieve_Lead\">CRM Lead</a></u>, <u><a href=\"#operation/CRM_Retrieve_Contact\">CRM Contact</a></u>, <u><a href=\"#operation/CRM_Retrieve_Opportunity\">CRM Opportunity</a></u>, and/or <u><a href=\"#operation/FIM_Retrieve_Loc\">Info Manager Location</a></u>.</p><img src=\"images/FS_RetrieveTask.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FSRetrieveTaskResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FSRetrieveTaskArray"
                }
            }
        },
        "/update?module=fs&subModule=task": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Update",
                "description": "<p class=\"western\">This section contains an example of the Update operation performed for updating a Task for a contact through the Sales module. In a similar manner, the Update operation can be performed to update tasks through the CRM and the Info Manager modules.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/update?module=fs&subModule=task&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform an Update operation</h4><p class=\"western\">To perform an Update operation for updating a task using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Update operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Update operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “cmTask”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to update a CRM task. In this case,<strong> \"referenceId\"</strong> has been used to update the details of an existing task. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> Since a task can be updated for Sales Lead, CRM Lead, CRM Contact, CRM Opportunity, and/or Info Manager Location, you are required to mention the reference ID of the corresponding object to uniquely identify the record for which the task is to be updated. You can get the reference ID by performing a Retrieve operation on the <u><a href=\"#operation/Sales_Retrieve_Lead\">Sales Lead</a></u>, <u><a href=\"#operation/CM_Retrieve_Lead\">CRM Lead</a></u>, <u><a href=\"#operation/CRM_Retrieve_Contact\">CRM Contact</a></u>, <u><a href=\"#operation/CRM_Retrieve_Opportunity\">CRM Opportunity</a></u>, and/or <u><a href=\"#operation/FIM_Retrieve_Loc\">Info Manager Location</a></u>.</p><img src=\"images/FS_UpdateTask.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FSUpdateTaskResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FSUpdateTaskArray"
                }
            }
        },
        "/delete?module=fs&subModule=task": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\">This section contains an example of the Delete operation performed for deleting a task for a contact through the Sales module. In a similar manner, the Create operation can be performed to delete tasks through the CRM and the Info Manager modules. </p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/delete?module=fs&subModule=task&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Delete operation</h4><p class=\"western\">To perform a Delete operation for deleting a task using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Delete operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “cmTask”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to delete a CRM task. In this case,<strong> \"referenceId\"</strong> has been used to delete an existing CRM task. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p><strong>Note:</strong> Since a task can be deleted for Sales Lead, CRM Lead, CRM Contact, CRM Opportunity, and/or Info Manager Location, you are required to mention the reference ID of the corresponding object to uniquely identify the record for which the task is to be deleted. You can get the reference ID by performing a Retrieve operation on the <u><a href=\"#operation/Sales_Retrieve_Lead\">Sales Lead</a></u>, <u><a href=\"#operation/CM_Retrieve_Lead\">CRM Lead</a></u>, <u><a href=\"#operation/CRM_Retrieve_Contact\">CRM Contact</a></u>, <u><a href=\"#operation/CRM_Retrieve_Opportunity\">CRM Opportunity</a></u>, and/or <u><a href=\"#operation/FIM_Retrieve_Loc\">Info Manager Location</a></u>.</p><img src=\"images/FS_DeleteTask.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FSDeleteTaskResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/FSDeleteTaskArray"
                }
            }
        },
        "/create?module=cm&subModule=mail": {
            "post": {
                "tags": [
                    "Email Messages"
                ],
                "summary": "Create",
                "description": "<p class=\"western\">This section contains an example of the Create operation performed for adding an email for a contact through the CRM module. In a similar manner, the Create operation can be performed to add emails through the Sales and the Info Manager modules.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/create?module=cm&subModule=mail&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Create operation</h4><p class=\"western\">To perform a Create operation for adding an email using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p> The module for which the Create operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Create operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “mail”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to add a CRM email. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p class=\"western\">Performing the above mentioned steps would create a new CRM email. The response received from the API contains <strong>“referenceId”</strong> which represents the unique reference ID for that email and can be used for the Retrieve and the Delete operations.</p><strong>Note:</strong> Since the Create operation is not being done on the main tab/sub-module, you are required to mention the <u><a href=\"#operation/Sales_Retrieve_Lead\">Reference ID</a></u> of the lead/contact/location for whom you will perform the API operation. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_CreateMail.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMCreateMailResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CMCreateMailArray"
                }
            }
        },
        "/retrieve?module=cm&subModule=mail": {
            "post": {
                "tags": [
                    "Email Messages"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\"><p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving an email for a contact through the CRM module. In a similar manner, the Retrieve operation can be performed to retrieve emails through the Sales and the Info Manager modules.</p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=cm&subModule=mail&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for retrieving an email using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “mail”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a CRM email. In this case,<strong> \"referenceId\"</strong> has been used to retrieve the details of an existing CRM email. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><strong>Note:</strong> Since the Retrieve operation is not being done on the main tab/sub-module, you are required to mention the <u><a href=\"#operation/Sales_Retrieve_Lead\">Reference ID</a></u> of the lead/contact/location for whom you will perform the API operation. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_RetrieveMail.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMRetrieveMailResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CMRetrieveMailArray"
                }
            }
        },
        "/delete?module=cm&subModule=mail": {
            "post": {
                "tags": [
                    "Email Messages"
                ],
                "summary": "Delete",
                "description": "<p class=\"western\"><p class=\"western\">This section contains an example of the Delete operation performed for deleting an email for a contact through the CRM module. In a similar manner, the Delete operation can be performed to delete emails through the Sales and the Info Manager modules.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/delete?module=cm&subModule=mail&xmlString=requiredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Delete operation</h4><p class=\"western\">To perform a Delete operation for deleting an email using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Delete operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “mail”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">xmlString that would contain the attribute names and their values in the request that is to be used to delete an email. In this case,<strong> \"referenceId\"</strong> has been used to delete an existing CRM email. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><strong>Note:</strong> Since the Delete operation is not being done on the main tab/sub-module, you are required to mention the <u><a href=\"#operation/Sales_Retrieve_Lead\">Reference ID</a></u> of the lead/contact/location for whom you will perform the API operation. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_DeleteMail.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMDeleteMailResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CMDeleteMailArray"
                }
            }
        },
        "/retrieve?module=cm&subModule=campaignEmail": {
            "post": {
                "tags": [
                    "Email Campaigns"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving a Campaign email for a contact through the CRM module. In a similar manner, the Retrieve operation can be performed to retrieve Campaign emails through the Sales module.</p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=cm&subModule=CampaignEmail&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for retrieving a Campaign email using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. <p>The following items must be used in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “CampaignEmail”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a Campaign email. In this case,<strong> \"referenceId\"</strong> has been used to retrieve the details of an existing Campaign email. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><strong>Note:</strong> Since the Retrieve operation is not being done on the main tab/sub-module, you are required to mention the <u><a href=\"#operation/Sales_Retrieve_Lead\">Reference ID</a></u> of the lead/contact/location for whom you will perform the API operation. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_RetrieveCampaignEmail.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMRetrieveCampaignEmailResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CMRetrieveCampaignEmailArray"
                }
            }
        },
        "/retrieve?module=cm&subModule=contactSMS": {
            "post": {
                "tags": [
                    "SMS Messages"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\"><p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving an SMS for a contact through the CRM module. In a similar manner, the Retrieve operation can be performed to retrieve SMS through the Sales module.</p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=cm&subModule=ContactSMS&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for retrieving an SMS using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “ContactSMS”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve SMS. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><strong>Note:</strong> Since the Retrieve operation is not being done on the main tab/sub-module, you are required to mention the <u><a href=\"#operation/Sales_Retrieve_Lead\">Reference ID</a></u> of the lead/contact/location for whom you will perform the API operation. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_RetrieveSMS.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMRetrieveSMSResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CMRetrieveSMSArray"
                }
            }
        },
        "/retrieve SMS Campaigns": {
            "post": {
                "tags": [
                    "SMS Campaigns"
                ],
                "summary": "Retrieve",
                "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving a Campaign SMS for a contact through the CRM module. In a similar manner, the Retrieve operation can be performed to retrieve Campaign SMS through the Sales module.</p>For the Retrieve operation, you can also use pagination to chain through the records using the limit and offset parameters appended in the URL. Click <a href=\"#Pagination\">here</a> for more details.<table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"20%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>API Endpoint</strong></td><td>:</td><td><context-path>/rest/dataservices/retrieve?module=cm&subModule=SMSCampaign&filterXML=filteredxmlString&responseType=XML</td></tr><tr><td></td></tr></table><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for retrieving a Campaign SMS using the FranConnect API, you must make a POST request on the request URL. The request URL comprises of the context path followed by the API endpoint mentioned above. The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/x-www-form-urlencoded“.</p></li></ol><p>The following items must be used as path parameters:</p><ol><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “cm”</u>.</p></li><li><p>The sub-module for which the Retrieve operation is being performed. A list of all sub-modules can be retrieved from the “subModule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the subModule to be used is “SMSCampaign”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired. If this parameter is not provided, the default response type is XML.</p></li><li><p class=\"western\">filterXML that would contain the attribute names and their values in the request that is to be used to retrieve a Campaign SMS. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and sub-module names and the operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><strong>Note:</strong> Since the Retrieve operation is not being done on the main tab/sub-module, you are required to mention the <u><a href=\"#operation/Sales_Retrieve_Lead\">Reference ID</a></u> of the lead/contact/location for whom you will perform the API operation. You can also perform a Query operation to retrieve the schema that would be used to create data for that module-subModule combination. Click <u><a href=\"#tag/List-of-Field-Names\">here</a></u> for more details.</p><img src=\"images/CRM_RetrieveSMSCampaign.png\">",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CMRetrieveCampaignSMSResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/CMRetrieveCampaignSMSArray"
                }
            }
        },
        "/sales/periods/franchiseeNo/{id}": {
            "get": {
                "tags": [
                    "Sales Reports"
                ],
                "summary": "Retrieve Sales Report Periods",
                "description": "<p class=\"western\">The report period in Finance > Sales refers to that time duration for which sales is to be reported by the franchisees. The report period for each location is defined in the financial agreement that is associated with that location.</p><p class=\"western\">You must make a GET request to the request URL, along with other required details, to retrieve the report periods. This would provide a list of all the report periods for which sales is to be reported by the franchisees.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/sales/periods/franchiseeNo/{id}</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td> https://skyapi.franconnectuat.net/manage-finance/sales/periods/franchiseeNo/{id}</td></tr></table>To retrieve the report periods for which sales data has not been entered for a particular franchisee location, you must make a GET request on the request URL. <p>The following items must be included in the header of the request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/json”.</p></li><li><p>“X-TenantId” as the key and its value based on your FranConnect system’s URL. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on identifying the “X-TenantId”.</p></li></ol><p>The following items must be used as path parameters:</p><li>Franchisee number as the internal unique reference number of the location. Click <u><a href=\"#tag/Retrieve-Franchisee-Number\">here</a></u> for details on retrieving the franchisee number.</li><p class=\"western\">Performing the above mentioned steps would return all the report periods for which sales has not been reported by that location.</p><img src=\"images/Retrieve_Sales_Reports_Period.png\">",
                "operationId": "Retrieve_Sales_Reports_Periods",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "franchiseeNo",
                        "in": "path",
                        "description": "Integer",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            "Integer"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SalesReportPeriodResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/sales/categories/finance-categories/franchiseeNo/{id}/reportPeriod/{reportPeriod}": {
            "get": {
                "tags": [
                    "Sales Reports"
                ],
                "summary": "Retrieve Finance Categories",
                "description": "<p class=\"western\">Finance categories are an important part of the sales report. These represent the categories that are used to report Sales data. To retrieve all the finance categories, you must use the report period as input parameter for the GET request. Click <u><a href=\"#tag/Sales-Reports\">here</a></u> for details on retrieving these report periods.</p><p>Then, use this report period, and perform a GET request to retrieve a list of financial categories that are available to report the sales for the given report period. </p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/sales/categories/finance-categories/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/sales/categories/finance-categories/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</td></tr></table><p>The following items must be included in the header of the GET request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/json”.</p></li><li><p>“X-TenantId” as the key and its value based on your FranConnect system’s URL. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on identifying the “X-TenantId”.</p></li></ol><p><img src=\"images/Retrieve_Finance_Categories.png\">",
                "operationId": "Retrieve_Finance_Categories",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "franchiseeNo",
                        "in": "path",
                        "description": "Integer",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            "Integer"
                        ]
                    },
                    {
                        "name": "reportPeriod",
                        "in": "path",
                        "description": "String",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "String"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveFinanceCategoriesResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/sales/categories/kpi-categories/franchiseeNo/{id}/reportPeriod/{reportPeriod}": {
            "get": {
                "tags": [
                    "Sales Reports"
                ],
                "summary": "Retrieve Non Finance Categories",
                "description": "<p class=\"western\">Non-Finance categories represent the categories that are not financial in nature but are still tracked as a part of sales reports (such as customer count and loyalty program enrollments). Every sales report has at least one non-finance category in it. To retrieve all the non-finance/Key Performance Indicator (KPI) categories that are used in sales report, you must use a report period and its corresponding finance categories as input parameters for the GET request. Click <u><a href=\"#tag/Sales-Reports\">Report Periods</a></u> for details on retrieving these report periods and click <u><a href=\"#tag/Sales-Reports\">Finance Categories</a></u> for details on retrieving these finance categories.</p><p>Then, using these parameters, perform a GET request to retrieve a list of non finance categories that are available to report the sales for the given report period.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/sales/categories/kpi-categories/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/sales/categories/kpi-categories/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</td></tr></table>The following items must be included in the header of the GET request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/json”.</p></li><li><p>“X-TenantId” as the key and its value based on your FranConnect system’s URL. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on identifying the “X-TenantId”.</p></li></ol><p><p><strong>Note:</strong> Sometimes, you may not have non-finance categories set up in your sales report. If this is the case, you need not retrieve the non-finance categories.</p><img src=\"images/Retrieve_Non_Finance_Categories.png\">",
                "operationId": "Retrieve_Non-Finance_Categories",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "franchiseeNo",
                        "in": "path",
                        "description": "Integer",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            "Integer"
                        ]
                    },
                    {
                        "name": "reportPeriod",
                        "in": "path",
                        "description": "String",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "String"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveNonFinanceCategoriesResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/sales/categories/addtional-line-items/franchiseeNo/{id}/reportPeriod/{reportPeriod}": {
            "get": {
                "tags": [
                    "Sales Reports"
                ],
                "summary": "Retrieve Additional Invoice Items",
                "description": "<p class=\"western\">There are some additional invoice items that can be included in the sales report apart from the finance and non-finance categories. To retrieve these additional invoice items, you must use a report period as input parameter for the GET request. Click <u><a href=\"#tag/Sales-Reports\">Report Periods</a></u> for details on retrieving these report periods.</p><p>Then, use this report period, and perform a GET operation to retrieve a list of additional invoice items that are available to report the sales for the given report period.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/sales/categories/addtional-line-items/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/sales/categories/addtional-line-items/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</td></tr></table><p>The following items must be included in the header of the GET request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/json”.</p></li><li><p>“X-TenantId” as the key and its value based on your FranConnect system’s URL. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on identifying the “X-TenantId”.</p></li></ol><p><strong>Note:</strong> Configuring the additional invoice items is optional. In case you have not configured these as part of your sales report and still if you try retrieving them using the above mentioned endpoint, an empty data set is retrieved.</p><img src=\"images/Retrieve_Additional_Invoice_Items.png\">",
                "operationId": "Retrieve_Additional_Invoice_Items",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "franchiseeNo",
                        "in": "path",
                        "description": "Integer",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            "Integer"
                        ]
                    },
                    {
                        "name": "reportPeriod",
                        "in": "path",
                        "description": "String",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "String"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveAddInvoiceItemsResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/sales/status": {
            "get": {
                "tags": [
                    "Sales Reports"
                ],
                "summary": "Retrieve Sales Report Status",
                "description": "<p class=\"western\">&nbsp;</p><p class=\"western\">You must make a GET request to the API endpoint, along with other required details, to retrieve the report status and their corresponding keys.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/sales/status</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/sales/status</td></tr></table>The following items must be included in the header of the GET request:</p><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Content-Type as the key and its value in the format “application/json”.</p></li><li><p>“X-TenantId” as the key and its value based on your FranConnect system’s URL. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on identifying the “X-TenantId”.</p></li></ol><p><p class=\"western\">Following table lists the various status that can be attributed to sales reports and can therefore be used as a search constraint in retrieve operations.<center><table width=\"762\" cellspacing=\"0\" cellpadding=\"6\"><colgroup><col width=\"144\"/> <col width=\"592\"/> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #5b9bd5;\" bgcolor=\"#5b9bd5\" width=\"144\"><p class=\"western\"><strong>Key</strong></p></td><td style=\"background: #5b9bd5;\" bgcolor=\"#5b9bd5\" width=\"592\"><p class=\"western\"><strong>Name</strong></p></td></tr><tr valign=\"top\"><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"144\"><p class=\"western\"><strong>P</strong></p></td><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"592\"><p class=\"western\">Waiting for approval</p></td></tr><tr valign=\"top\"><td style=\"background: #ffffff;\" bgcolor=\"#ffffff\" width=\"144\"><p class=\"western\"><strong>A</strong></p></td><td style=\"background: #ffffff;\" bgcolor=\"#ffffff\" width=\"592\"><p class=\"western\">Approved</p></td></tr><tr valign=\"top\"><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"144\"><p class=\"western\"><strong>R</strong></p></td><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"592\"><p class=\"western\">Rejected</p></td></tr><tr valign=\"top\"><td style=\"background: #ffffff;\" bgcolor=\"#ffffff\" width=\"144\"><p class=\"western\"><strong>I</strong></p></td><td style=\"background: #ffffff;\" bgcolor=\"#ffffff\" width=\"592\"><p class=\"western\">Invoiced</p></td></tr><tr valign=\"top\"><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"144\"><p class=\"western\"><strong>K</strong></p></td><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"592\"><p class=\"western\">Waiting for Acknowledgement</p></td></tr></tbody></table></center><p><strong>Note:</strong> Configuring the additional invoice items is optional. In case you have not configured these as part of your sales report and still if you try retrieving them using the above mentioned endpoint, an empty data set is retrieved.</p><img src=\"images/Retrieve_Sales_Report.png\">",
                "operationId": "Retrieve_Sales_Report_Status",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveSalesReportStatusResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/sales": {
            "post": {
                "tags": [
                    "Sales Reports"
                ],
                "summary": "Create New Sales Report",
                "description": "<p class=\"western\">Sales reports allow locations to declare their proceeds during that report period. These are comprised of finance and non-finance categories. Sometimes, the sales report may contain additional invoice items. A sales report can be created for a location for that time duration for which sales is to be reported by the franchisees. In order to do so, a POST type request is to be made to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/sales</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/sales</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p><u><a href=\"#operation/Finance_Categories\">Finance Categories</a></u>, <u><a href=\"#operation/Non_Finance_Categories\">Non Finance Categories</a></u> and <u><a href=\"#operation/Retrieve_Additional_Invoice_Items\">Additional Line Items</a></u> must be included in the body of the request. </p><p class=\"western\">Performing the above mentioned steps would create a new sales report. The response received from the API contains the “reportNo” and “salesReportID”. While the “reportNo” represents the \"Report ID\" of the report and can be seen in Finance > Sales > Sales Summary, the “salesReportID” represents the unique reference ID for that sales report.</p><img src=\"images/Create_New_Sales_Report.png\">",
                "operationId": "Create_New_Sales_Report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "datalist",
                        "description": "ParameterType:ArrayList<Entity>",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "franchiseeNo": {
                                        "type": "string"
                                    },
                                    "reportPeriod": {
                                        "type": "string"
                                    }
                                },
                                "example": [
                                    {
                                        "data": [
                                            {
                                                "franchiseeNo": "403968414",
                                                "reportPeriod": "Jan - 2019",
                                                "dateReceived": "2019-06-26",
                                                "acknowledgeSalesReport": "yes",
                                                "financialItems": [
                                                    {
                                                        "1": {
                                                            "name": "Service",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "500",
                                                                    "quantity": "50"
                                                                }
                                                            ]
                                                        },
                                                        "24340465": {
                                                            "name": "Total Sales Category (+)",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "200",
                                                                    "quantity": "2"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "nonFinancialItems": [
                                                    {
                                                        "100": {
                                                            "name": "Non Financial Category",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "200"
                                                                }
                                                            ]
                                                        },
                                                        "450294864": {
                                                            "name": "Non-Fin Category",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "250"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "finAddnlItems": [
                                                    {
                                                        "450294861": {
                                                            "name": "Additional Invoice Item Categ",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "300"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateNewSalesReportResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/sales/filter": {
            "post": {
                "tags": [
                    "Sales Reports"
                ],
                "summary": "Retrieve Sales Report",
                "description": "<p class=\"western\">You can retrieve an existing sales report by making a POST type request to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/sales/filter</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/sales/filter</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p class=\"western\">The constraints that would be used to filter out the sales report must be included in the body of the request. In the example that is included, the “salesreportID” has been used as a ‘constraints’ criterion. Other acceptable values of constraints, that can be used to filter and retrieve sales reports, are explained in the following table:</p><p><strong>Note: </strong>The response includes the promissory note payment details only if the corresponding option is selected through the Admin module.</p><center><table width=\"623\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"157\"/> <col width=\"135\"/> <col width=\"223\"/> <col width=\"51\"/> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"157\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Field</span></strong></p><p class=\"western\" align=\"center\">&nbsp;</p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"135\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Field Description</span></strong></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"223\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Applied Clause</span></strong></p><p class=\"western\" align=\"center\">&nbsp;</p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"51\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Format</span></strong></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>reportNo</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Sales Report Number as seen in UI</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td width=\"157\"><p class=\"western\" align=\"center\"><strong>salesReportID</strong></p></td><td width=\"135\"><p class=\"western\" align=\"center\">Internal Unique Reference Number of the Sales Report</p></td><td width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>franchiseeNo</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Internal Unique Reference Number of the location</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td width=\"157\"><p class=\"western\" align=\"center\"><strong>reportPeriodStart/End</strong></p></td><td width=\"135\"><p class=\"western\" align=\"center\">Report Period Start/ End Date in YYYY-MM-DD format</p></td><td width=\"223\"><p class=\"western\" align=\"center\">EQUAL, GREATER_THAN,</p><p class=\"western\" align=\"center\">LESS_THAN, GREATER_THAN_OR_EQUAL,</p><p class=\"western\" align=\"center\">LESS_THAN_OR_EQUAL, BETWEEN</p></td><td width=\"51\"><p class=\"western\" align=\"center\">Date</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>reportSubmitDate</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Report Submit Date in YYYY-MM-DD format</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, GREATER_THAN,</p><p class=\"western\" align=\"center\">LESS_THAN, GREATER_THAN_OR_EQUAL,</p><p class=\"western\" align=\"center\">LESS_THAN_OR_EQUAL, BETWEEN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">Date</p></td></tr><tr valign=\"top\"><td width=\"157\"><p class=\"western\" align=\"center\"><strong>totalSales</strong></p></td><td width=\"135\"><p class=\"western\" align=\"center\">Total Sales</p></td><td width=\"223\"><p class=\"western\" align=\"center\">GREATER_THAN,</p><p class=\"western\" align=\"center\">LESS_THAN</p></td><td width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>reportStatus</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Report Status of the Sales Report</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td width=\"157\"><p class=\"western\" align=\"center\"><strong>reportType</strong></p></td><td width=\"135\"><p class=\"western\" align=\"center\">Report Type of the Sales Report</p></td><td width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"> <p class=\"western\" align=\"center\"><strong>lastModifiedDate</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"> <p class=\"western\" align=\"center\">Last Modified Date in YYYY-MM-DD format</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"> <p class=\"western\" align=\"center\">EQUAL, GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, BETWEEN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"> <p class=\"western\" align=\"center\">Date</p></td></tr></tbody></table></center><p class=\"western\">&nbsp;</p><img src=\"images/Retrieve_Sales_Report.png\">",
                "operationId": "Retrieve_Sales",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "salesFilter",
                        "description": "ParameterType:SalesFilter",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "reportNo": {
                                        "type": "string"
                                    },
                                    "salesReportID": {
                                        "type": "string"
                                    },
                                    "franchiseeNo": {
                                        "type": "string"
                                    },
                                    "reportPeriodStart/End": {
                                        "type": "date"
                                    },
                                    "reportSubmitDate": {
                                        "type": "date"
                                    },
                                    "totalSales": {
                                        "type": "string"
                                    },
                                    "reportStatus": {
                                        "type": "string"
                                    },
                                    "reportType": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "constraints": {
                                        "salesReportID": {
                                            "clause": "EQUAL",
                                            "values": [
                                                "1758848040"
                                            ]
                                        }
                                    },
                                    "page": {
                                        "pageId": "0",
                                        "pageSize": "100"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveSalesReportResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/sales/{id}": {
            "put": {
                "tags": [
                    "Sales Reports"
                ],
                "summary": "Update Existing Sales Report",
                "description": "<p class=\"western\">You can update an existing sales report by making a PUT type request to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>PUT</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/sales/{salesReportID}</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/sales/{salesReportID}</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>The following items must be used as path parameters:</p><p>“salesReportID” which refers to the internal unique ID for the sales report. You can fetch this information by retrieving the sales report details on the basis of report number or any other constraint.</p></li></p><img src=\"images/Update_Existing_Sales_Report.png\">",
                "operationId": "Update_Existing_Sales_Report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "datalist",
                        "description": "ParameterType:ArrayList<Entity>",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    {
                        "name": "salesReportID",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "example": [
                                    {
                                        "data": [
                                            {
                                                "dateReceived": "2019-02-26",
                                                "acknowledgeSalesReport": "Yes",
                                                "financialItems": [
                                                    {
                                                        "1": {
                                                            "name": "Service",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "500",
                                                                    "quantity": "50"
                                                                }
                                                            ]
                                                        },
                                                        "24340465": {
                                                            "name": "Test Sales Category (+)",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "200",
                                                                    "quantity": "2"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "nonFinancialItems": [
                                                    {
                                                        "100": {
                                                            "name": "Non Financial Category",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "200"
                                                                }
                                                            ]
                                                        },
                                                        "450294864": {
                                                            "name": "Non-Fin Category",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "250"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "finAddnlItems": [
                                                    {
                                                        "450294861": {
                                                            "name": "Additional Invoice Item Categ",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "300"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UpdateSalesReportResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/royalties/filter": {
            "post": {
                "tags": [
                    "Royalties"
                ],
                "summary": "Retrieve Royalty Invoices",
                "description": "<p class=\"western\">Once a sales report is approved, the royalty for the same is automatically generated by the FranConnect system. Royalty reports are generated on the basis of sales submitted for the locations. The method for retrieving a Royalty report is similar to that of retrieving a Sales report. To retrieve a royalty report, a POST of request is to be made to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/royalties/filter</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/royalties/filter</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>The constraints that would be used to filter out the royalty invoices must be included in the body of the request. The following table lists all the attributes that can be used as constraints while retrieving royalty reports along with the “clauses” that are supported for each constraint.</p><center><table width=\"735\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"134\"/> <col width=\"253\"/> <col width=\"223\"/> <col width=\"66\"/> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"134\" height=\"30\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"253\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field Display Name</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"223\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Applicable Clauses</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"66\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Format</strong></span></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"><p class=\"western\"><strong>franchiseRoyaltyID</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"><p class=\"western\">Internal Unique Reference Number of the Royalty Invoice</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"><p class=\"western\">String</p></td></tr><tr valign=\"top\"><td width=\"134\" height=\"9\"><p class=\"western\"><strong>invoiceNO</strong></p></td><td width=\"253\"><p class=\"western\">Royalty Invoice Number as seen in UI</p></td><td width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td width=\"66\"><p class=\"western\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"><p class=\"western\"><strong>franchiseeNo</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"><p class=\"western\">Internal Unique Reference Number of the location</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"><p class=\"western\">String</p></td></tr><tr valign=\"top\"><td width=\"134\" height=\"85\"><p class=\"western\"><strong>invoiceDate</strong></p></td><td width=\"253\"><p class=\"western\">Invoice Date</p></td><td width=\"223\"><p class=\"western\">EQUAL, GREATER_THAN,</p><p class=\"western\">LESS_THAN, GREATER_THAN_OR_EQUAL,</p><p class=\"western\">LESS_THAN_OR_EQUAL, BETWEEN</p></td><td width=\"66\"><p class=\"western\">Date</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"><p class=\"western\"><strong>paymentStatus</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"><p class=\"western\">Payment Status</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"><p class=\"western\">String</p></td></tr><tr valign=\"top\"><td width=\"134\"> <p class=\"western\"><strong>lastModifiedDate</strong></p></td><td width=\"253\"> <p class=\"western\">Last Modified Date in YYYY-MM-DD format</p></td><td width=\"223\"> <p class=\"western\">EQUAL, GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, BETWEEN</p></td><td width=\"66\"> <p class=\"western\">Date</p></td></tr></tbody></table></center><p class=\"western\">&nbsp;</p><img src=\"images/Retrieve_Royalty_Invoices.png\">",
                "operationId": "Retrieve_Royalty_Invoices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "salesFilter",
                        "description": "ParameterType:PaymentFilter",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "franchiseRoyaltyID": {
                                        "type": "string"
                                    },
                                    "invoiceNO": {
                                        "type": "string"
                                    },
                                    "franchiseeNo": {
                                        "type": "string"
                                    },
                                    "invoiceDate": {
                                        "type": "date"
                                    },
                                    "paymentStatus": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "constraints": {
                                        "franchiseeNo": {
                                            "clause": "EQUAL",
                                            "values": [
                                                "403968414"
                                            ]
                                        }
                                    },
                                    "page": {
                                        "pageId": "0",
                                        "pageSize": "100"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveRoyaltyInvoicesResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/royalties/{invoiceId}": {
            "get": {
                "tags": [
                    "Royalties"
                ],
                "summary": "Retrieve Invoice By Id",
                "description": " <p class=\"western\">Make a GET request to the specified endpoint to retrieve information corresponding to an Invoice by its franchiseRoyaltyId. franchiseRoyaltyId is the primary key of an invoice and can be retrieved by hitting <u><a href=\"#Finance/Retrieve_Royalty_Invoices\">this</a></u> endpoint.</p> <table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>GET</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-finance/royalties/{franchiseRoyaltyId}</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/royalties/{franchiseRoyaltyId}</td> </tr> </table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p> </li> </ol> <p class=\"western\">The response of this endpoint will give you detailed information corresponding to an invoice. The following data elements will be present in the response (if applicable):</p> <p> <ol> <li><b>invoiceReportDetails</b>: contains basic details of the invoice (for eg. location details, reporting period, etc) </li> <li><b>additionalInvoiceDetails</b>: contains additional bits of information that have been configured to be visible on the invoice</li> <li><b>royaltyItems</b>: contains amounts corresponding to each agreement item in the system (for eg. Royalty, Adv., etc) <ul><b>taxTypes</b>: contains a list of taxes applied on the item</ul> <ul><b>yearlyCap</b>: contains originally yearly cap amount</ul> <ul><b>remainingYearlyCap</b>: contains remaining yearly cap amount</ul> </li> <li><b>additionalItems</b>: contains information corresponding to Additional Invoice Items in the system</li> <li><b>additionalFees</b>: contains information corresponding to Additional Fee in the system. Additional Fee refers to the the total amount contributed by all the Additional Invoice Items in the system</li> <li><b>invoiceAmount</b>: contains information corresponding to the total invoice amount</li> <li><b>paymentDetails</b>: contains information about the payment status of the invoice along with the payment amount (if any was applied)</li> </ol> </p><img src=\"images/Retrieve_Invoice_By_Id.png\">",
                "operationId": "Retrieve_Invoice_By_Id",
                "produces": [
                    "application/json"
                ],
                "responses":  {
                    "200": {
                        "$ref": "#/components/responses/RetrieveInvoiceByIdResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/royalties/status": {
            "get": {
                "tags": [
                    "Royalties"
                ],
                "summary": "Retrieve Royalties Payment Status",
                "description": "<p class=\"western\">You can retrieve the payment status for Royalty reports by making a GET request to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/royalties/status</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/royalties/status</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p class=\"western\">Performing the above mentioned steps would return a list of royalty payment status that are available in the system along with their corresponding keys. The following table lists the different royalty payment status along with their corresponding keys:</p><center><table width=\"762\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"228\"/> <col width=\"505\"/> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"228\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Key</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"505\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Payment Status</strong></span></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"228\"><p class=\"western\"><strong>N</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"505\"><p class=\"western\">Unpaid</p></td></tr><tr valign=\"top\"><td width=\"228\"><p class=\"western\"><strong>P</strong></p></td><td width=\"505\"><p class=\"western\">Partially Paid</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"228\"><p class=\"western\"><strong>C</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"505\"><p class=\"western\">Fully Paid</p></td></tr></tbody></table></center></p><img src=\"images/Retrieve_Royalties_Payment_Status.png\">",
                "operationId": "Get_Royalties_payment_Status",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveRoyaltyPaymentResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/royalties/{franchiseRoyaltyID}/linkedMemos": {
            "post": {
                "tags": [
                    "Royalties"
                ],
                "summary": "Link Debit Memos With Invoice",
                "description": "<p class=\"western\">Make a POST request to the specified endpoint to link debit memo(s) with an invoice. The endpoint must contain a path parameter, called <b>franchiseRoyaltyID</b>. A franchiseRoyaltyID refers to the internal unique reference number of a Royalty Invoice and can be retrieved via <u><a href=\"#operation/Retrieve_Royalty_Invoices\">this</a></u> endpoint.</p><p> Note: One debit memo can only be associated with one invoice at a time, whereas, an invoice can be associated with multiple debit memos. When an already associated debit memo is linked with a different invoice using this endpoint, the debit memo's linkage with the previous invoice will be replaced with the new invoice. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-finance/royalties/{franchiseRoyaltyId}/linkedMemos</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/royalties/{franchiseRoyaltyId}/linkedMemos</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p> </li></ol></p><img src=\"images/Link_Debit_Memos_With_Invoice.png\">",
                "operationId": "Link_Debit_Memos_With_Invoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "franchiseRoyaltyID",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "memoID": {
                                                "type": "array"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "data": {
                                            "memoID": [
                                                "1989720112",
                                                "198973451",
                                                "871720112"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/LinkDebitMemosWithInvoiceResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/payments": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Create Payments",
                "description": "<p class=\"western\">You can create payments for a royalty by making a POST request to the Payments endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/payments</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/payments</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>The franchiseeNo, dateReceived and royaltyType must be included in the body of the request. The collectionMethod field will change according to the opted collection method. Refer to the request body schema down below to understand what additional fields you must pass with different collection methods. If the Create operation is successful, performing the above mentioned steps would return a response containing the paymentNo and paymentID.</p><p>Using the FranConnect API, you can create payments by using the following types of royalties: Royalty,  Advertisement, Promissory Notes, Late Fees, Additional Fees,  Tax, and All. <p class=\"western\">&nbsp;</p><img src=\"images/Create_Payments.png\">",
                "operationId": "Create_Payments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "salesFilter",
                        "description": "ParameterType:PaymentFilter",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "franchiseeNo": {
                                        "type": "string"
                                    },
                                    "dateReceived": {
                                        "type": "date"
                                    },
                                    "royaltyType": {
                                        "type": "string"
                                    },
                                    "franchiseRoyaltyID": {
                                        "type": "array"
                                    },
                                    "debitMemos": {
                                        "type": "array"
                                    },
                                    "creditMemos": {
                                        "type": "array"
                                    },
                                    "collectionMethod": {
                                        "required": true,
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "cheque"
                                                        ]
                                                    },
                                                    "chequeNo": {
                                                        "type": "string",
                                                        "format": "alphanumeric"
                                                    },
                                                    "amount": {
                                                        "type": "double"
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "credit card"
                                                        ]
                                                    },
                                                    "creditCardType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "American Express",
                                                            "Diners",
                                                            "Discover",
                                                            "JCB",
                                                            "Master Card",
                                                            "Visa"
                                                        ]
                                                    },
                                                    "amount": {
                                                        "type": "double"
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "cash"
                                                        ]
                                                    },
                                                    "amount": {
                                                        "type": "double"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "franchiseeNo",
                                    "dateReceived",
                                    "royaltyType",
                                    "franchiseRoyaltyID",
                                    "collectionMethod"
                                ],
                                "example": [
                                    {
                                        "data": [
                                            {
                                                "franchiseeNo": "1812536030",
                                                "dateReceived": "2019-12-31",
                                                "royaltyType": "Promissory Notes",
                                                "franchiseRoyaltyID": [
                                                    "1042268448"
                                                ],
                                                "debitMemos": [],
                                                "collectionMethod": {
                                                    "mode": "cash",
                                                    "amount": "10.2"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreatePaymentResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/adjustments": {
            "post": {
                "tags": [
                    "Adjustments"
                ],
                "summary": "Create Adjustment",
                "description": "<p class=\"western\">You can create adjustments for a sales report by making a POST request to the Adjustments endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/adjustments</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/adjustments</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>SalesReportID, franchiseeNo and dateReceived must be included in the body of the request. </p><p class=\"western\">Performing the above mentioned steps would create a new sales report with Adjustments. The response received from the API contains the “reportNo” and “salesReportID”. While the “reportNo” represents the \"Report ID\" of the report and can be seen in Finance > Sales > Sales Summary, the “salesReportID” represents the unique reference ID for that sales report.</p><img src=\"images/Create_Adjustments.png\">",
                "operationId": "Create_Adjustments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "salesFilter",
                        "description": "ParameterType:PaymentFilter",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "salesReportID": {
                                        "type": "string"
                                    },
                                    "franchiseeNo": {
                                        "type": "string"
                                    },
                                    "dateReceived": {
                                        "type": "date"
                                    }
                                },
                                "example": [
                                    {
                                        "data": [
                                            {
                                                "salesReportID": "1476675187",
                                                "franchiseeNo": "501957516",
                                                "dateReceived": "2020-02-24",
                                                "financialItems": [
                                                    {
                                                        "1": {
                                                            "name": "Service",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "500",
                                                                    "quantity": "10"
                                                                }
                                                            ]
                                                        },
                                                        "162961615": {
                                                            "name": "Testing category",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0",
                                                                    "quantity": "0"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "nonFinancialItems": [
                                                    {
                                                        "100": {
                                                            "name": "Non Financial Category",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0"
                                                                }
                                                            ]
                                                        },
                                                        "2004859949": {
                                                            "name": "Non-Financial 2",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0"
                                                                }
                                                            ]
                                                        },
                                                        "2004859951": {
                                                            "name": "Non-Financial 3",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "finAddnlItems": [
                                                    {
                                                        "818066578": {
                                                            "name": "Test 1900",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0"
                                                                }
                                                            ]
                                                        },
                                                        "1956795379": {
                                                            "name": "Additional  Invoice 5",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateAdjustmentResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/adjustments/{id}": {
            "put": {
                "tags": [
                    "Adjustments"
                ],
                "summary": "Update Adjustment",
                "description": "<p class=\"western\">You can update adjustments for a sales report by making a PUT request to the Adjustments endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>PUT</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/adjustments/{id}</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/adjustments/{id}</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>The following items must be used as path parameters:</p><p>“salesReportID” which refers to the internal unique ID for the sales report. You can fetch this information by retrieving the sales report details on the basis of report number or any other constraint.</p></li></p><img src=\"images/Update_Adjustments.png\">",
                "operationId": "Update_Adjustments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "datalist",
                        "description": "ParameterType:ArrayList<Entity>",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    {
                        "name": "salesReportID",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "example": [
                                    {
                                        "data": [
                                            {
                                                "salesReportID": "1476675187",
                                                "franchiseeNo": "501957516",
                                                "dateReceived": "2020-02-24",
                                                "financialItems": [
                                                    {
                                                        "1": {
                                                            "name": "Service",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "500",
                                                                    "quantity": "10"
                                                                }
                                                            ]
                                                        },
                                                        "162961615": {
                                                            "name": "Testing category",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0",
                                                                    "quantity": "0"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "nonFinancialItems": [
                                                    {
                                                        "100": {
                                                            "name": "Non Financial Category",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0"
                                                                }
                                                            ]
                                                        },
                                                        "2004859949": {
                                                            "name": "Non-Financial 2",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0"
                                                                }
                                                            ]
                                                        },
                                                        "2004859951": {
                                                            "name": "Non-Financial 3",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "finAddnlItems": [
                                                    {
                                                        "818066578": {
                                                            "name": "Test 1900",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0"
                                                                }
                                                            ]
                                                        },
                                                        "1956795379": {
                                                            "name": "Additional  Invoice 5",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "0"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UpdateAdjustmentResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/adjustments/filter": {
            "post": {
                "tags": [
                    "Adjustments"
                ],
                "summary": "Retrieve Adjustments",
                "description": "<p class=\"western\">You can retrieve adjustments for a sales report by making a POST request to the Adjustments endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/adjustments/filter</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/adjustments/filter</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p class=\"western\">The constraints that would be used to filter out the adjustments must be included in the body of the request. In the example that is included, the “franchiseeNo” has been used as a ‘constraints’ criterion. </p><img src=\"images/Retrieve_Adjustments.png\">",
                "operationId": "Retrieve_Adjustments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "salesFilter",
                        "description": "ParameterType:PaymentFilter",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "franchiseRoyaltyID": {
                                        "type": "string"
                                    },
                                    "royaltyType": {
                                        "type": "string"
                                    },
                                    "franchiseeNo": {
                                        "type": "string"
                                    },
                                    "dateReceived": {
                                        "type": "date"
                                    }
                                },
                                "example": {
                                    "constraints": {
                                        "franchiseeNo": {
                                            "clause": "EQUAL",
                                            "values": [
                                                "1951953135"
                                            ]
                                        }
                                    },
                                    "page": {
                                        "pageId": "0",
                                        "pageSize": "100"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveAdjustmentResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/adjustments/type": {
            "get": {
                "tags": [
                    "Adjustments"
                ],
                "summary": "Retrieve Adjustment Types",
                "description": "<p class=\"western\">You can retrieve different adjustment types for a sales report by making a GET request to the Adjustments endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/adjustments/type</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/adjustments/type</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p class=\"western\">Performing the above mentioned steps would return a list of Adjustment Types that are available in the system.</p><img src=\"images/Adjustment_Types.png\">",
                "operationId": "Adjustment_Types",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdjustmentTypesResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/adjustments/status": {
            "get": {
                "tags": [
                    "Adjustments"
                ],
                "summary": "Retrieve Adjustment Status",
                "description": "<p class=\"western\">You can retrieve the adjustment status for a sales report by making a GET request to the Adjustments endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/adjustments/status</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/adjustments/status</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p class=\"western\">Performing the above mentioned steps would return a list of adjustment status that are available in the system along with their corresponding keys. The following table lists the different adjustment status along with their corresponding keys:</p><center><table width=\"762\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"228\"/> <col width=\"505\"/> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"228\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Key</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"505\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Adjustment Status</strong></span></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"228\"><p class=\"western\"><strong>P</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"505\"><p class=\"western\">Waiting for Approval</p></td></tr><tr valign=\"top\"><td width=\"228\"><p class=\"western\"><strong>A</strong></p></td><td width=\"505\"><p class=\"western\">Approved</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"228\"><p class=\"western\"><strong>R</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"505\"><p class=\"western\">Rejected</p><tr valign=\"top\"><td width=\"228\"><p class=\"western\"><strong>I</strong></p></td><td width=\"505\"><p class=\"western\">Invoiced</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"228\"><p class=\"western\"><strong>K</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"505\"><p class=\"western\">Waiting for Acknowledgement</p></tbody></table></center></p><img src=\"images/Adjustment_Status.png\">",
                "operationId": "Adjustment_Status",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdjustmentStatusResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/adjustments/categories/finance-categories/franchisees/{franchiseeID}/sales/{salesReportID}": {
            "get": {
                "tags": [
                    "Adjustments"
                ],
                "summary": "Retrieve Finance Categories",
                "description": "<p class=\"western\">Finance categories are an important part of the sales report. These represent the categories that are used to report Sales data. To retrieve all the finance categories of Sales Report for which adjustment has to be filled, you must use the franchisee ID and the Sales Report ID as input parameters for the GET request. </p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/adjustments/categories/finance-categories/franchisees/{franchiseeID}/sales/{salesReportID}</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/adjustments/categories/finance-categories/franchisees/{franchiseeID}/sales/{salesReportID}</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>Performing the above mentioned steps would return a list of all the finance categories of Sales Report for which adjustment has been filled.</p><img src=\"images/Adj_Finance_Categories.png\">",
                "operationId": "Retrieve_Adj_Finance_Categories",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "franchiseeNo",
                        "in": "path",
                        "description": "Integer",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            "Integer"
                        ]
                    },
                    {
                        "name": "salesReportID",
                        "in": "path",
                        "description": "Integer",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            "Integer"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdjRetrieveFinanceCategoriesResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/adjustments/categories/kpi-categories/franchisees/{franchiseeID}/sales/{salesReportID}": {
            "get": {
                "tags": [
                    "Adjustments"
                ],
                "summary": "Retrieve Non Finance Categories",
                "description": "<p class=\"western\">Non-Finance categories represent the categories that are not financial in nature but are still tracked as a part of sales reports (such as customer count and loyalty program enrollments). Every sales report has at least one non-finance category in it. To retrieve all the non-finance/Key Performance Indicator (KPI) categories that are used in sales report for which adjustment has to be filled, you must use the franchisee ID and the Sales Report ID as input parameters for the GET request. </p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/adjustments/categories/kpi-categories/franchisees/{franchiseeID}/sales/{salesReportID} </td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/adjustments/categories/kpi-categories/franchisees/{franchiseeID}/sales/{salesReportID} </td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>Performing the above mentioned steps would return a list of all the non-finance categories of Sales Report for which adjustment has been filled.</p><img src=\"images/Adj_Kpi_Categories.png\">",
                "operationId": "Retrieve_Adj_NonFinance_Categories",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "franchiseeNo",
                        "in": "path",
                        "description": "Integer",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            "Integer"
                        ]
                    },
                    {
                        "name": "salesReportID",
                        "in": "path",
                        "description": "Integer",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            "Integer"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdjRetrieveKpiCategoriesResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/sales/categories/addtional-line-items/franchisees/{franchiseeID}/sales/{salesReportID}": {
            "get": {
                "tags": [
                    "Adjustments"
                ],
                "summary": "Retrieve Additional Line Items",
                "description": "<p class=\"western\">There are some additional invoice items that can be included in the sales report apart from the finance and non-finance categories. To retrieve all the additional invoice items that are used in sales report for which adjustment has to be filled, you must use the franchisee ID and the Sales Report ID as input parameters for the GET request.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/adjustments/categories/addtional-line-items/franchisees/{franchiseeID}/sales/{salesReportID} </td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/adjustments/categories/addtional-line-items/franchisees/{franchiseeID}/sales/{salesReportID} </td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>Performing the above mentioned steps would return a list of all the Additional Line Items in the Sales Report for which adjustment has been filled.</p><img src=\"images/Adj_Retrieve_Add_Line_Items.png\">",
                "operationId": "Retrieve_Adj_AddLineItems",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "franchiseeNo",
                        "in": "path",
                        "description": "Integer",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            "Integer"
                        ]
                    },
                    {
                        "name": "reportPeriod",
                        "in": "path",
                        "description": "Integer",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            "Integer"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AdjRetrieveLineItemsResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/audits/filter": {
            "post": {
                "tags": [
                    "Audits"
                ],
                "summary": "Retrieve Audits",
                "description": "<p class=\"western\">You can retrieve audits for a sales report by making a POST request to the Audits endpoint.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-finance/audits/filter</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/audits/filter</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p> </li></ol><p class=\"western\">The constraints that would be used to filter out the audits must be included in the body of the request. In the example that is included, the “franchiseeNo” has been used as a ‘constraints’ criterion. The following table lists all the attributes that can be used as constraints while retrieving audit reports along with the “clauses” that are supported for each constraint. </p><center> <table width=\"735\" cellspacing=\"0\" cellpadding=\"7\"> <colgroup> <col width=\"134\" /> <col width=\"253\" /> <col width=\"223\" /> <col width=\"66\" /> </colgroup> <tbody> <tr valign=\"top\"> <td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"134\" height=\"30\"> <p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field</strong></span></p> </td> <td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"253\"> <p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field Display Name</strong></span></p> </td> <td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"223\"> <p class=\"western\"><span style=\"color: #ffffff;\"><strong>Applicable Clauses</strong></span></p> </td> <td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"66\"> <p class=\"western\"><span style=\"color: #ffffff;\"><strong>Format</strong></span></p> </td> </tr> <tr valign=\"top\"> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"> <p class=\"western\"><strong>franchiseRoyaltyID</strong></p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"> <p class=\"western\">Internal Unique Reference Number of the Royalty Invoice</p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"> <p class=\"western\">EQUAL, IN</p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"> <p class=\"western\">String</p> </td> </tr> <tr valign=\"top\"> <td width=\"134\" height=\"9\"> <p class=\"western\"><strong>franchiseeNo</strong></p> </td> <td width=\"253\"> <p class=\"western\">Franchise ID</p> </td> <td width=\"223\"> <p class=\"western\">EQUAL, IN</p> </td> <td width=\"66\"> <p class=\"western\">String</p> </td> </tr> </tbody> </table></center><img src=\"images/Retrieve_Audits.png\">",
                "operationId": "Retrieve_Audits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "constraints": {
                                        "type": "object",
                                        "anyOf": [
                                            {
                                                "properties": {
                                                    "franchiseRoyaltyID": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "EQUAL",
                                                                    "IN"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "franchiseeNo": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "EQUAL",
                                                                    "IN"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "page": {
                                        "type": "object",
                                        "properties": {
                                            "pageId": {
                                                "type": "string"
                                            },
                                            "pageSize": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "constraints": {
                                        "franchiseRoyaltyID": {
                                            "clause": "EQUAL",
                                            "values": [
                                                "1242730254"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveAuditsResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/payments/filter": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Retrieve Payments",
                "description": "<p class=\"western\">You can retrieve the payments that were made against a royalty report by making a POST request to the Payments endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/payments/filter</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/payments/filter</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>The constraints that would be used to filter out the payments must be included in the body of the request. The following table lists all the attributes that can be used as constraints while retrieving payment reports along with the “clauses” that are supported for each constraint.</p><center><table width=\"735\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"134\"/> <col width=\"253\"/> <col width=\"223\"/> <col width=\"66\"/> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"134\" height=\"30\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"253\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field Display Name</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"223\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Applicable Clauses</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"66\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Format</strong></span></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"><p class=\"western\"><strong>franchiseRoyaltyID</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"><p class=\"western\">Internal Unique Reference Number of the Royalty Invoice</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"><p class=\"western\">String</p></td></tr><tr valign=\"top\"><td width=\"134\" height=\"9\"><p class=\"western\"><strong>invoiceNO</strong></p></td><td width=\"253\"><p class=\"western\">Royalty Invoice Number as seen in UI</p></td><td width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td width=\"66\"><p class=\"western\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"><p class=\"western\"><strong>paymentNo</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"><p class=\"western\">Payment Number</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"><p class=\"western\">String</p></td></tr><tr valign=\"top\"><td width=\"134\" height=\"85\"><p class=\"western\"><strong>dateApplied</strong></p></td><td width=\"253\"><p class=\"western\">Date Applied</p></td><td width=\"223\"><p class=\"western\">EQUAL, GREATER_THAN,</p><p class=\"western\">LESS_THAN, GREATER_THAN_OR_EQUAL,</p><p class=\"western\">LESS_THAN_OR_EQUAL, BETWEEN</p></td><td width=\"66\"><p class=\"western\">Date</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"><p class=\"western\"><strong>franchiseeNo</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"><p class=\"western\">Franchise ID</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"><p class=\"western\">String</p></td></tr></tbody></table></center><p class=\"western\">&nbsp;</p><img src=\"images/Retrieve_Payments.png\">",
                "operationId": "Retrieve_Payments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "salesFilter",
                        "description": "ParameterType:PaymentFilter",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "franchiseRoyaltyID": {
                                        "type": "string"
                                    },
                                    "invoiceNO": {
                                        "type": "string"
                                    },
                                    "paymentNo": {
                                        "type": "string"
                                    },
                                    "franchiseeNo": {
                                        "type": "string"
                                    },
                                    "dateApplied": {
                                        "type": "date"
                                    }
                                },
                                "example": {
                                    "constraints": {
                                        "franchiseeNo": {
                                            "clause": "EQUAL",
                                            "values": [
                                                "403968414"
                                            ]
                                        }
                                    },
                                    "page": {
                                        "pageId": "0",
                                        "pageSize": "100"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrievePaymentResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/profit-loss/periods/franchiseeNo/{id}": {
            "get": {
                "tags": [
                    "Profit and Loss Statements"
                ],
                "summary": "Retrieve Profit and Loss Periods",
                "description": "<p class=\"western\">You can retrieve the Profit and Loss report periods for a location for that time duration for which sales is to be reported by the franchisees. In order to do so, a GET request is to be made to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/profit-loss/periods/franchiseeNo/{franchise_number}</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/profit-loss/periods/franchiseeNo/{franchise_number}</td></tr></table>The following items must be included in the body of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>The following  must be used as path parameters:</p><li>Franchisee number as the internal unique reference number of the location. Click <u><a href=\"#tag/Retrieve-Franchisee-Number\">here</a></u> for details on retrieving the franchisee number.</li><p class=\"western\">Performing the above mentioned steps would return a list of all the statement periods for which Profit and Loss statement has not been declared by that location.</p><img src=\"images/Retrieve_Profit_Loss_Periods.png\">",
                "operationId": "Retrieve_ProfitLoss_Statements_Periods",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "franchiseeNo",
                        "in": "path",
                        "description": "Integer",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            "Integer"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveProfitLossPeriodsResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/profit-loss/categories": {
            "get": {
                "tags": [
                    "Profit and Loss Statements"
                ],
                "summary": "Retrieve Profit Loss Categories",
                "description": "<p class=\"western\">You can retrieve the Profit and Loss categories that are present in the Profit and Loss statements for each franchisee against which income and expenses are to be entered. In order to do so, a GET request is to be made to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/profit-loss/categories</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/profit-loss/categories</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p class=\"western\">Performing the above mentioned steps would return a response that contains all the profit and loss categories that are configured in the system and a placeholder where the amount can be entered against that corresponding category. You can use this information to add the profit and loss details while creating and/ or updating profit and loss reports.</p><img src=\"images/Retrieve_Profit_Loss_Categories.png\">",
                "operationId": "Retrieve_ProfitLoss_Categories",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveProfitLossCategoriesResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/profit-loss": {
            "post": {
                "tags": [
                    "Profit and Loss Statements"
                ],
                "summary": "Create New Profit Loss Statements",
                "description": "<p class=\"western\">You can create new Profit and Loss statements in the system by making a POST request to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/profit-loss</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/profit-loss</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>The profit and loss categories must be included in the body of the request. Click <u><a href=\"#operation/Retrieve_ProfitLoss_Categories\">here</a></u> for details on retrieving the Profit and Loss categories.</p><p class=\"western\">If the Create operation is successful, performing the above mentioned steps would return a response containing the \"plrepld\". This represents the internal reference ID for the Profit and Loss statements that was just created and can be used for the update and the retrieve operations.</p><img src=\"images/Create_New_Profit_Loss_Statements.png\">",
                "operationId": "Create_New_ProfitLoss_Statement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "datalist",
                        "description": "ParameterType:ArrayList<Entity>",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "franchiseeNo": {
                                        "type": "string"
                                    },
                                    "statementPeriod": {
                                        "type": "date"
                                    },
                                    "submissionDate": {
                                        "type": "date"
                                    }
                                },
                                "example": [
                                    {
                                        "data": [
                                            {
                                                "franchiseeNo": "403968414",
                                                "statementPeriod": "Jun - 2019",
                                                "submissionDate": "2019-06-26",
                                                "plItems": [
                                                    {
                                                        "1": {
                                                            "name": "Income",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1500"
                                                                }
                                                            ]
                                                        },
                                                        "2": {
                                                            "name": "Expense",
                                                            "calculationType": "(-)",
                                                            "data": [
                                                                {
                                                                    "amount": "500"
                                                                }
                                                            ]
                                                        },
                                                        "3": {
                                                            "name": "Overhead",
                                                            "calculationType": "(-)",
                                                            "data": [
                                                                {
                                                                    "amount": "1500"
                                                                }
                                                            ]
                                                        },
                                                        "4": {
                                                            "name": "P&L Addition Type Categ",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "2500"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateProfitLossStatementResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/profit-loss/filter": {
            "post": {
                "tags": [
                    "Profit and Loss Statements"
                ],
                "summary": "Retrieve Profit Loss Statements",
                "description": "<p class=\"western\">You can retrieve an existing Profit and Loss statement in the system by making a POST request to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>POST</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/profit-loss/filter</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/profit-loss/filter</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>The constraints that would be used to filter out the profit and loss report must be included in the body of the request. The following table details the other values that can be used as constraints along with their clause criteria:</p><center><table width=\"720\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"147\"/> <col width=\"127\"/> <col width=\"306\"/> <col width=\"82\"/> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"147\" height=\"8\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"127\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field Display Name</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"306\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Applied Clause</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"82\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Format</strong></span></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"147\"><p class=\"western\"><strong><span lang=\"en\">plrepId</span></strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"127\"><p class=\"western\"><span lang=\"en\">Internal Unique Reference Number of the P&amp;L Report</span></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"306\"><p class=\"western\"><span lang=\"en\">EQUAL, IN</span></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"82\"><p class=\"western\"><span lang=\"en\">String</span></p></td></tr><tr valign=\"top\"><td width=\"147\"><p class=\"western\"><strong><span lang=\"en\">franchiseeNo</span></strong></p></td><td width=\"127\"><p class=\"western\">Internal Unique Reference Number of the location</p></td><td width=\"306\"><p class=\"western\"><span lang=\"en\">EQUAL, IN</span></p></td><td width=\"82\"><p class=\"western\"><span lang=\"en\">String</span></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"147\" height=\"73\"><p class=\"western\"><strong><span lang=\"en\">statementPeriod</span></strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"127\"><p class=\"western\"><span lang=\"en\">Statement Period</span></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"306\"><p class=\"western\"><span lang=\"en\">EQUAL, GREATER_THAN,</span></p><p class=\"western\"><span lang=\"en\">LESS_THAN, GREATER_THAN_OR_EQUAL,</span></p><p class=\"western\"><span lang=\"en\">LESS_THAN_OR_EQUAL, BETWEEN</span></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"82\"><p class=\"western\"><span lang=\"en\">Date</span></p></td></tr><tr valign=\"top\"><td width=\"147\" height=\"77\"><p class=\"western\"><strong><span lang=\"en\">submissionDate</span></strong></p></td><td width=\"127\"><p class=\"western\"><span lang=\"en\">Submission Date</span></p></td><td width=\"306\"><p class=\"western\"><span lang=\"en\">EQUAL, GREATER_THAN,</span></p><p class=\"western\"><span lang=\"en\">LESS_THAN, GREATER_THAN_OR_EQUAL,</span></p><p class=\"western\"><span lang=\"en\">LESS_THAN_OR_EQUAL, BETWEEN</span></p></td><td width=\"82\"><p class=\"western\"><span lang=\"en\">Date</span></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"147\" height=\"77\"> <p class=\"western\"><strong> <span lang=\"en\">lastModifiedDate</span></strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"127\"> <p class=\"western\"> <span lang=\"en\">Last Modified </span></p><p class=\"western\"> <span lang=\"en\">Date in YYYY-</span></p><p class=\"western\"> <span lang=\"en\">MM-DD format</span></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"306\"> <p class=\"western\"> <span lang=\"en\">EQUAL, GREATER_THAN,</span></p> <p class=\"western\"> <span lang=\"en\">LESS_THAN, GREATER_THAN_OR_EQUAL,</span></p> <p class=\"western\"> <span lang=\"en\">LESS_THAN_OR_EQUAL, BETWEEN</span></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"82\"> <p class=\"western\"> <span lang=\"en\">Date</span></p></td></tr></tbody></table></center><p class=\"western\">&nbsp;</p><p class=\"western\"><strong>Note</strong>: Multiple constraints can be used in the filter to retrieve data.</p><p class=\"western\">&nbsp;</p><img src=\"images/Retrieve_Profit_Loss_Statements.png\">",
                "operationId": "Retrieve_ProfitLoss_Statements",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "profitLossFilter",
                        "description": "ParameterType:ProfitLossFilter",
                        "required": false,
                        "schema": {}
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "franchiseeNo": {
                                        "type": "string"
                                    },
                                    "plrepld": {
                                        "type": "string"
                                    },
                                    "statementPeriod": {
                                        "type": "date"
                                    },
                                    "submissionDate": {
                                        "type": "date"
                                    }
                                },
                                "example": {
                                    "constraints": {
                                        "franchiseeNo": {
                                            "clause": "EQUAL",
                                            "values": [
                                                "403968414"
                                            ]
                                        }
                                    },
                                    "page": {
                                        "pageId": "0",
                                        "pageSize": "100"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveProfitLossStatementResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/profit-loss/{id}": {
            "put": {
                "tags": [
                    "Profit and Loss Statements"
                ],
                "summary": "Update Existing Profit/Loss Statement",
                "description": "<p class=\"western\">You can update an existing profit and loss report by making a PUT request to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>PUT</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-finance/profit-loss/{plrepId}</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/profit-loss/{plrepId}</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p>The profit and loss categories must be included in the body of the request. Click <u><a href=\"#operation/Retrieve_ProfitLoss_Categories\">here</a></u> for details on retrieving the profit and loss categories.</p></p><img src=\"images/Update_Existing_ProfitLoss_Statement.png\">",
                "operationId": "Update_Existing_ProfitLoss_Statement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "datalist",
                        "description": "ParameterType:ArrayList<Entity>",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "plrepld": {
                                        "type": "string"
                                    },
                                    "submissionDate": {
                                        "type": "date"
                                    }
                                },
                                "example": [
                                    {
                                        "data": [
                                            {
                                                "submissionDate": "2019-06-26",
                                                "plItems": [
                                                    {
                                                        "1": {
                                                            "name": "Income",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "100"
                                                                }
                                                            ]
                                                        },
                                                        "2": {
                                                            "name": "Expense",
                                                            "calculationType": "(-)",
                                                            "data": [
                                                                {
                                                                    "amount": "200"
                                                                }
                                                            ]
                                                        },
                                                        "3": {
                                                            "name": "Overhead",
                                                            "calculationType": "(-)",
                                                            "data": [
                                                                {
                                                                    "amount": "300"
                                                                }
                                                            ]
                                                        },
                                                        "4": {
                                                            "name": "P&L Addition Type Categ",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "400"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateProfitLossStatementResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/memos/filter": {
            "post": {
                "tags": [
                    "Memos"
                ],
                "summary": "Retrieve Memos",
                "description": "<p class=\"western\">You can retrieve an existing memo by making a POST request to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-finance/memos/filter</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/memos/filter</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p> </li></ol><p> Our system now allows a user to link debit memos with invoices. Therefore, you will now be able to specifically retrieve memos on the basis of <b>franchiseRoyaltyID</b>. Please refer to the contraints table below to understand what clauses you can use with franchiseRoyaltyID.</p><p class=\"western\">The constraints that would be used to filter out the memos must be included in the body of the request. In the example that is included, the “franchiseeNo” has been used as a ‘constraints’ criterion. Other acceptable values of constraints, that can be used to filter and retrieve memos, are explained in the following table:</p><center> <table width=\"735\" cellspacing=\"0\" cellpadding=\"7\"> <colgroup> <col width=\"134\" /> <col width=\"253\" /> <col width=\"223\" /> <col width=\"66\" /> </colgroup> <tbody> <tr valign=\"top\"> <td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"134\" height=\"30\"> <p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field</strong></span></p> </td> <td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"253\"> <p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field Display Name</strong></span></p> </td> <td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"223\"> <p class=\"western\"><span style=\"color: #ffffff;\"><strong>Applicable Clauses</strong></span></p> </td> <td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"66\"> <p class=\"western\"><span style=\"color: #ffffff;\"><strong>Format</strong></span></p> </td> </tr> <tr valign=\"top\"> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"> <p class=\"western\"><strong>memoID</strong></p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"> <p class=\"western\">Internal Unique Reference Number of the Memo</p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"> <p class=\"western\">EQUAL, IN</p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"> <p class=\"western\">String</p> </td> </tr> <tr valign=\"top\"> <td width=\"134\" height=\"9\"> <p class=\"western\"><strong>franchiseeNo</strong></p> </td> <td width=\"253\"> <p class=\"western\">Internal Unique Reference Number of the location</p> </td> <td width=\"223\"> <p class=\"western\">EQUAL, IN</p> </td> <td width=\"66\"> <p class=\"western\">String</p> </td> </tr> <tr valign=\"top\"> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"> <p class=\"western\"><strong>memoType</strong></p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"> <p class=\"western\">Type of memo. Can either be Credit or Debit</p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"> <p class=\"western\">EQUAL, IN</p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"> <p class=\"western\">String</p> </td> </tr> <tr valign=\"top\"> <td width=\"134\" height=\"85\"> <p class=\"western\"><strong>memoDate</strong></p> </td> <td width=\"253\"> <p class=\"western\">Memo Date in YYYY-MM-DD format</p> </td> <td width=\"223\"> <p class=\"western\">EQUAL, GREATER_THAN,</p> <p class=\"western\">LESS_THAN, GREATER_THAN_OR_EQUAL,</p> <p class=\"western\">LESS_THAN_OR_EQUAL, BETWEEN</p> </td> <td width=\"66\"> <p class=\"western\">Date</p> </td> </tr> <tr valign=\"top\"> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"> <p class=\"western\"><strong>openBalance</strong></p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"> <p class=\"western\">Open Balance Amount of memo as seen in UI</p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"> <p class=\"western\">EQUAL, GREATER_THAN</p> <p class=\"western\">LESS_THAN, GREATER_THAN_OR_EQUAL,</p> <p class=\"western\">LESS_THAN_OR_EQUAL, BETWEEN</p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"> <p class=\"western\">Double</p> </td> </tr> <tr valign=\"top\"> <td width=\"134\"> <p class=\"western\"><strong>lastModifiedDate</strong></p> </td> <td width=\"253\"> <p class=\"western\">Last Modified </p> <p class=\"western\">Date in YYYY-</p> <p class=\"western\">MM-DD format</p> </td> <td width=\"223\"> <p class=\"western\">EQUAL, GREATER_THAN</p> <p class=\"western\">LESS_THAN, GREATER_THAN_OR_EQUAL,</p> <p class=\"western\">LESS_THAN_OR_EQUAL, BETWEEN</p> </td> <td width=\"66\"> <p class=\"western\">Date</p> </td> </tr> <tr valign=\"top\"> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"> <p class=\"western\"><strong>franchiseRoyaltyID</strong></p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"> <p class=\"western\">Internal Unique Reference Number of the Royalty Invoice</p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"> <p class=\"western\">EQUAL, IN</p> </td> <td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"> <p class=\"western\">String</p> </td> </tr> </tbody> </table></center><p class=\"western\">&nbsp;</p><img src=\"images/Retrieve_Memos.PNG\">",
                "operationId": "Retrieve_Memos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "memoID": {
                                        "type": "string"
                                    },
                                    "franchiseeNo": {
                                        "type": "string"
                                    },
                                    "memoType": {
                                        "type": "string",
                                        "enum": [
                                            "Credit",
                                            "Debit"
                                        ]
                                    },
                                    "memoDate": {
                                        "type": "date"
                                    },
                                    "openBalance": {
                                        "type": "double"
                                    },
                                    "lastModifiedDate": {
                                        "type": "date"
                                    },
                                    "franchiseRoyaltyID": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "constraints": {
                                        "franchiseeNo": {
                                            "clause": "EQUAL",
                                            "values": [
                                                "2019500882"
                                            ]
                                        }
                                    },
                                    "page": {
                                        "pageId": "0",
                                        "pageSize": "100"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveMemosResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-finance/memos": {
            "post": {
                "tags": [
                    "Memos"
                ],
                "summary": "Create Memo",
                "description": "<p class=\"western\">You can create a new memo by making a post request to the specified endpoint.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-finance/memos</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-finance/memos</td> </tr></table>The following items must be included in the body of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p> </li></ol><p class=\"western\">A memo can be of two types, either Credit or Debit. Use the memoType field to specify what kind of memo you want to create. All the fields in the request body are mandatory including the memoDate as well.</p><img src=\"images/Create_Memo.PNG\">",
                "operationId": "Create_Memo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "franchiseeNo": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "double"
                                    },
                                    "memoType": {
                                        "type": "string",
                                        "enum": [
                                            "Credit",
                                            "Debit"
                                        ]
                                    },
                                    "memoDate": {
                                        "type": "date"
                                    }
                                },
                                "example": [
                                    {
                                        "data": [
                                            {
                                                "franchiseeNo": "1241371345",
                                                "amount": "5000",
                                                "memoType": "Credit",
                                                "memoDate": "2017-09-30"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateMemoResp"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v2/categories?associationType={units/segments}": {
            "get": {
                "tags": [
                    "Segment Categories"
                ],
                "summary": "Retrieve Type-Specific Categories",
                "description": "<p class=\"western\">Make a GET request to the specified endpoint to retrieve type-specific segment categories from your system. Leaf-node categories (i.e. the categories at the lowest level of your category hierarchy) are associated with segments that are made up of units, whereas, non-leaf-node categories are associated with segments that are made up of child segments. Therefore, to retrieve leaf-node categories from your system, you must pass \"units\" as value into the query parameter <b>associationType</b> whereas to retrieve non-leaf-node categories from your system, you must pass \"segments\" as value into associationType. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>GET</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v2/categories?associationType=segments</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v2/categories?associationType=segments</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Type-Specific_Categories.png\"> <p class=\"western\"></ol></p>",
                "operationId": "Retrieve_Type-Specific_Categories",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "associationType",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "units",
                                "segments"
                            ]
                        },
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveTypeSpecificCategoriesResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-segment/v2/custom-fields": {
            "post": {
                "tags": [
                    "Custom Segment Fields"
                ],
                "summary": "Create Custom Segment Field",
                "description": "<p class=\"western\"> Make a POST request to the specified endpoint to create a custom segment field.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v2/custom-fields</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v2/custom-fields</td> </tr></table><p>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p> </li></ol></p><p><img src=\"images/Create_Custom_Segment_Field.png\"></p><p class=\"western\"> A custom segment field is created in reference to a segment category and that is the reason why all the segments bearing a particular category will have the same set of custom fields. </p><p>A custom field has the following 4 primary input fields:-</p><ol> <li> Make Field Mandatory - A boolean value that renders a field mandatory in nature </li> <li> Category - Category refers to the segment category </li> <li> Field Name - The name of the field </li> <li> Field Type - our API supports the following field types, and the payload structure changes with each of them. Read through the entire section to understand how to formulate payload structures corresponding to each field type <ol> <li> <p>Text</p> </li> <li> <p>Text Area</p> </li> <li> Drop-down : while you can create your own custom drop-down values, our system provides the following out-of-box drop-down configurations that you can choose from. The payload structure will change according to the drop-down options you choose from and the details can be found down in the section <ol> <li> Country </li> <li> Country-state </li> </ol> </li> <li> Multi-select drop-down </li> <li> Document </li> </ol> </li></ol><p class=\"western\">Please note that, along with each field type that you configure in the system, you will be able to specify various validation checks on these fields. For eg. you might want to restrict the character limit on your text type field. Details on how to capture validation details in payload can be found down in the section.</p><h2>Payload for creating a Text type field</h2><p>You will need the following keys in your payload to create a text type custom field in the system</p><ol> <li> <p>fieldName : string type field. Enter the name of your custom field name here.<br />for eg.<code> “fieldName&quot;: &quot;Color Code&quot;</code></p> </li> <li> <p>parent : object type field. This is where you can mention a list of categories for which this custom field will be applicable. <br />The <code>parent</code> object accepts the following two keys:</p> <ol> <li> <p><code>apiKey</code> which is where you must mention the entity for which this custom field will be applicable for. Currently, the only entity that we support is a segment category. So, the value for <code>apiKey</code> will be <code>category</code>. If you’ve followed the above steps correctly, your parent object should look something like this:- </p><br> <pre> <code> &quot;parent&quot;: { &quot;apiKey&quot;: &quot;category&quot; } </code> </pre> </li> <li> <p><code>fields</code> is an object type field that accepts an array of multiple categoryId for which this custom field will be applicable. Including the <code>fields</code> key, your <code>parent</code> object should look similar to the following example:<br /><br />Please note that each categoryId is passed inside curly brackets in the array and are comma-separated </p> <br> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot;, <br> &quot;fields&quot;: [ <br> {id: &quot;694796924724709570&quot;}, <br> {id: &quot;679282403834857612&quot;} <br> ] <br> } <br> </code> </pre> </li> </ol> </li> <li> <p><code>fieldType</code> : is a string type field that tells the system what type of field it is. In our case, this is a text type field:</p> <br> <pre> <code> &quot;fieldType&quot; : &quot;text&quot; </code> </pre> </li> <li> <p><code>validations</code> : is an array type field that accepts validations on both the custom field itself and the field type. For a text-type field, the following two validations can be used:-</p> <ol> <li> <p>The first validation is called <code>isMandatory</code> and this is common across all field types' payloads because this validation tells the system whether to consider the custom segment field as a mandatory field or not. Including this validation in the payload is not mandatory. Should you wish to not send this validation explicitly, the system will by-default make this custom field “non-mandatory” in nature. </p> </li> <li> <p>The second validation is called <code>textLengthMax</code> and this tells the system about the maximum length that this field can have. The length is measured in characters and our system supports a maximum length of <strong>255 </strong>characters. Please note that if you require a text type field that can hold more than 255 characters, please use the Text Area field type instead. (<strong>please note that this is a mandatory field for a textArea type field</strong>) <br> If you’ve followed the above instructions on validations, your <code>validation</code> object should look similar to the following:</p> <pre> <code> &quot;validations&quot;: { <br> &nbsp;&nbsp;&nbsp; &quot;isMandatory&quot;: false <br> &nbsp;&nbsp;&nbsp; &quot;textLengthMax&quot;: &quot;255&quot;, <br> } </code> </pre> </li> </ol> </li></ol><p>Refer to the complete payload example on the right panel to create your own payload structure</p><h2>Payload for creating a Text Area type field</h2><p>You will need the following keys in your payload to create a Text Area type custom field in the system</p><ol> <li> <p>fieldName : string type field. Enter the name of your custom field name here.<br>for eg.<code> “fieldName&quot;: &quot;Color Code&quot;</code></p> </li> <li> <p><code>parent</code> : object type field. This is where you can mention a list of categories for which this custom field will be applicable. <br />The <code>parent</code> object accepts the following two keys:</p> <ol> <li> <p><code>apiKey</code> which is where you must mention the entity for which this custom field will be applicable for. Currently, the only entity that we support is a segment category. So, the value for <code>apiKey</code> will be <code>category</code>. If you’ve followed the above steps correctly, your parent object should look something like this:- </p> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot; <br> } <br> </code> </pre> </li> <li> <p><code>fields</code> is an object type field that accepts an array of multiple categoryId for which this custom field will be applicable. Including the <code>fields</code> key, your <code>parent</code> object should look similar to the following example: </p> <p>Please note that each categoryId is passed inside curly brackets in the array and are comma-separated </p> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot;, <br> &quot;fields&quot;: [ <br> {id: &quot;694796924724709570&quot;},<br> {id: &quot;679282403834857612&quot;} <br> ] <br> } <br> </code> </pre> </li> </ol> </li> <li> <p><code>fieldType</code> : is a string-type field that tells the system what type of field it is. In our case, this is a textArea type field:<br /></p> <pre><code>&quot;fieldType&quot; : &quot;textArea&quot;</code></pre> </li> <li> <p><code>fieldAttributes</code> : is an object type field that lists down the attributes of your field type. <br />(<strong>This is empty in case of text-area.</strong></p> </li> <li> <p><code>validations</code> : is an array type field that accepts validations on both the custom field itself and the field type. For a textArea type field, the following validation can be used:-</p> <ol> <li> <p>The first validation is called <code>isMandatory</code> and this is common across all field types' payloads because this validation tells the system whether to consider the custom segment field as a mandatory field or not. Including this validation in the payload is not mandatory. Should you wish to not send this validation explicitly, the system will by-default make this custom field “non-mandatory” in nature.</p> <p>If you’ve followed the above instructions on validations, your <code>validation</code> object should look similar to the following:</p> <pre> <code> &quot;validations&quot;: { <br> &quot;isMandatory&quot;: false <br> &quot;textLengthMax&quot;: &quot;255&quot;, <br> } <br> </code> </pre> </li> </ol> </li></ol><p>Refer to the complete payload example on the right panel to create your own payload structure</p><h2>Payload for creating a Date type field</h2><p>You will need the following keys in your payload to create a Date type custom field in the system</p><ol> <li> <p>fieldName : string type field. Enter the name of your custom field name here.<br />for eg.<code> “fieldName&quot;: &quot;Creation Date&quot;</code></p> </li> <li> <p><code>parent</code> : object type field. This is where you can mention a list of categories for which this custom field will be applicable. <br />The <code>parent</code> object accepts the following two keys:</p> <ol> <li> <p><code>apiKey</code> which is where you must mention the entity for which this custom field will be applicable for. Currently, the only entity that we support is a segment category. So, the value for <code>apiKey</code> will be <code>category</code>. If you’ve followed the above steps correctly, your parent object should look something like this:- </p> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot; <br> } <br> </code> </pre> </li> <li> <p><code>fields</code> is an object type field that accepts an array of multiple categoryId for which this custom field will be applicable. Including the <code>fields</code> key, your <code>parent</code> object should look similar to the following example: </p> <p>Please note that each categoryId is passed inside curly brackets in the array and are comma-separated</p> <br> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot;, <br> &quot;fields&quot;: [ <br> {id: &quot;694796924724709570&quot;}, <br> {id: &quot;679282403834857612&quot;} <br> ] <br> } <br> </code> </pre> </li> </ol> </li> <li> <p><code>fieldType</code> : is a string-type field that tells the system what type of field it is. In our case, this is a date type field:<br /></p> <pre> <code> &quot;fieldType&quot; : &quot;date&quot; </code> </pre> </li> <li> <p><code>fieldattibutes (empty) (test)</code> : </p> </li> <li> <p><code>validations</code> : is an array type field that accepts validations on both the custom field itself and the field type. For a Date type field, the following validation can be used:-</p> <ol> <li> <p>The first validation is called <code>isMandatory</code> and this is common across all field types' payloads because this validation tells the system whether to consider the custom segment field as a mandatory field or not. Including this validation in the payload is not mandatory. Should you wish to not send this validation explicitly, the system will by-default make this custom field “non-mandatory” in nature.<br /><br />If you’ve followed the above instructions on validations, your <code>validation</code> object should look similar to the following: </p> <pre> <code> &quot;validations&quot;: { <br> &quot;isMandatory&quot;: false <br> &quot;textLengthMax&quot;: &quot;255&quot;, <br> } <br> </code> </pre> </li> </ol> </li></ol><p>Refer to the complete payload example on the right panel to create your own payload structure</p><h2>Payload for creating a Drop-Down type field</h2><p>You can create 3 kinds of drop-down type fields:-</p><ol> <li> <p>New : A drop-down with custom options. </p> </li> <li> <p>Country : A country type drop-down that will automatically pull all configured countries in your system </p> </li> <li> <p>Country&amp;State : A country-state drop-down that will automatically pull all configured country-state options in your system</p> </li></ol><p>Follow through this section to understand how to formulate your payload to create the above drop-down type fields in your system</p><h3>#1 New </h3><p>You will need the following keys in your payload to create a New Drop-Down type custom field in the system</p><ol> <li> <p>fieldName : string type field. Enter the name of your custom field name here.<br />for eg.<code> “fieldName&quot;: &quot;Entity Type Drop-Down&quot;</code></p> </li> <li> <p><code>parent</code> : object type field. This is where you can mention a list of categories for which this custom field will be applicable. <br />The <code>parent</code> object accepts the following two keys:</p> <ol> <li> <p><code>apiKey</code> which is where you must mention the entity for which this custom field will be applicable for. Currently, the only entity that we support is a segment category. So, the value for <code>apiKey</code> will be <code>category</code>. If you’ve followed the above steps correctly, your parent object should look something like this:- </p> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot; <br> } <br> </code> </pre> </li> <li> <p><code>fields</code> is an object type field that accepts an array of multiple categoryId for which this custom field will be applicable. Including the <code>fields</code> key, your <code>parent</code> object should look similar to the following example: </p> <p>Please note that each categoryId is passed inside curly brackets in the array and are comma-separated.</p> <br> <pre><code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot;, <br> &quot;fields&quot;: [ <br> {id: &quot;694796924724709570&quot;}, <br> {id: &quot;679282403834857612&quot;} <br> ] <br> } <br> </code></pre> </li> </ol> </li> <li> <p><code>fieldType</code> : is a string-type field that tells the system what type of field it is. In our case, this is a <code>dropdown</code> type field:</p> <pre>&quot;fieldType&quot; : &quot;dropdown&quot;</pre> </li> <li> <p><code>fieldAttributes</code> : is an object-type field that lists down the attributes of your field type. All of your custom options will go inside this object. The <code>fieldAttributes</code> objects accepts an array of objects called <code>options</code>. </p> <ol> <li> <p><code>options</code> : options is an array of objects and each object contains the drop-down options you want to create as part of your drop-down field, and they go with the key <code>values</code>. Refer to the following example of how the <code>fieldAttributes</code> will look like:- </p><br> <pre><code> &quot;fieldTypeAttributes&quot;: { <br> &quot;options&quot;: [ <br> { <br> &quot;value&quot;: &quot;Others&quot;, <br> &quot;id&quot;: 1662366051389 <br> }, <br> { <br> &quot;value&quot;: &quot;LLC&quot;, <br> &quot;id&quot;: 1662366045289 <br> }, <br> { <br> &quot;value&quot;: &quot;Limited Partnership&quot;, <br> &quot;id&quot;: 1662366038824 <br> }, <br> { <br> &quot;value&quot;: &quot;Individual&quot;, <br> &quot;id&quot;: 1662366028672 <br> } <br> ] <br> } <br> </code></pre> </li> </ol> </li> <li> <p><code>validations</code> : is an array type field that accepts validations on both the custom field itself and the field type. For a New Drop-Down type field, the following validation can be used:-</p> <ol> <li> <p>The first validation is called <code>isMandatory</code> and this is common across all field types' payloads because this validation tells the system whether to consider the custom segment field as a mandatory field or not. Including this validation in the payload is not mandatory. Should you wish to not send this validation explicitly, the system will by-default make this custom field “non-mandatory” in nature.</p> <p>If you’ve followed the above instructions on validations, your <code>validation</code> object should look similar to the following:</p> <br> <pre> <code> &quot;validations&quot;: { <br> &quot;isMandatory&quot;: false <br> } <br> </code> </pre> </li> </ol> </li></ol><h3>#2 Country</h3><p>You will need the following keys in your payload to create a Country Drop-Down type custom field in the system</p><ol> <li> <p>fieldName : string type field. Enter the name of your custom field name here.<br />for eg.<code> “fieldName&quot;: &quot;Country Type Drop-Down&quot;</code></p> </li> <li> <p>parent : object type field. This is where you can mention a list of categories for which this custom field will be applicable. <br />The <code>parent</code> object accepts the following two keys:</p> <ol> <li> <p><code>apiKey</code> which is where you must mention the entity for which this custom field will be applicable for. Currently, the only entity that we support is a segment category. So, the value for <code>apiKey</code> will be <code>category</code>. If you’ve followed the above steps correctly, your parent object should look something like this:- </p><br> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot; <br> } <br> </code> </pre> </li> <li> <p><code>fields</code> is an object type field that accepts an array of multiple categoryId for which this custom field will be applicable. Including the <code>fields</code> key, your <code>parent</code> object should look similar to the following example: </p> <p>Please note that each categoryId is passed inside curly brackets in the array and are comma-separated</p><br> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot;, <br> &quot;fields&quot;: [ <br> {id: &quot;694796924724709570&quot;}, <br> {id: &quot;679282403834857612&quot;} <br> ] <br> } <br> </code> </pre> </li> </ol> </li> <li> <p><code>fieldType</code> : is a string-type field that tells the system what type of field it is. In our case, this is a <code>country</code> type field:</p><br> <pre> <code> &quot;fieldType&quot; : &quot;country&quot; <br>/*Please note that although a country type drop-down is a &quot;dropdown&quot; fieldType, but <br>to distinguish between a &quot;new&quot; drop-down and a &quot;country&quot; drop-down, we have <br>kept the fieldType values distinct*/ <br> </code> </pre> </li> <li> <p>Validations</p> </li> <li> <p>fieldAttribute</p> </li></ol><h3 id=>#3 Country&amp;State</h3><p>A country&amp;State drop-down renders two drop-downs in the UI, one that populates country values and the other is a state drop-down that brings in states depending upon the country that is selected. The payload for this kind of drop-down is slightly different from the rest. Since we are essentially creating two drop-downs, we have to create two fieldType objects and send it in an array.</p><p>The first object you would create will be a country type drop-down:-<br />Please note that the fieldType for a country drop-down must be <strong>country</strong></p><br> <pre> <code> { <br> &quot;fieldName&quot;: &quot;Select Country from system&quot;, <br> &quot;fieldType&quot;: &quot;country&quot;, <br> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot;, <br> &quot;fields&quot;: [ <br> { <br> &quot;id&quot;: &quot;694796924724709570&quot; <br> } <br> ] <br> }, <br> &quot;validations&quot;: { <br> &quot;isMandatory&quot;: false <br> }, <br> &quot;fieldTypeAttributes&quot;: {} <br> } <br> </code> </pre> <p> The second object you would create will be a state type drop-down:-<br />Please note that the fieldType for a country drop-down must be <strong>state</strong></p> <pre> <code> { <br> &quot;fieldName&quot;: &quot;State of selected country&quot;, <br> &quot;fieldType&quot;: &quot;state&quot;, <br> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot;, <br> &quot;fields&quot;: [ <br> { <br> &quot;id&quot;: &quot;694796924724709570&quot; <br> } <br> ] <br> }, <br> &quot;validations&quot;: { <br> &quot;isMandatory&quot;: false <br> }, <br> &quot;fieldTypeAttributes&quot;: {} <br> } <br> </code> </pre><p>Send both of these objects in an array as part of your payload. Refer to the example on the right to create your own payload structure.</p><h2>Payload for creating a Multi-Select Drop-Down type field</h2><p>You will need the following keys in your payload to create a Multi-Select Drop-Down type custom field in the system</p><ol> <li> <p>fieldName : string type field. Enter the name of your custom field name here.<br />for eg.<code> “fieldName&quot;: &quot;Service Areas&quot;</code></p> </li> <li> <p><code>parent</code> : object type field. This is where you can mention a list of categories for which this custom field will be applicable. <br />The <code>parent</code> object accepts the following two keys:</p> <ol> <li> <p><code>apiKey</code> which is where you must mention the entity for which this custom field will be applicable for. Currently, the only entity that we support is a segment category. So, the value for <code>apiKey</code> will be <code>category</code>. If you’ve followed the above steps correctly, your parent object should look something like this:- </p><br> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot; <br> } <br> </code> </pre> </li> <li> <p><code>fields</code> is an object type field that accepts an array of multiple categoryId for which this custom field will be applicable. Including the <code>fields</code> key, your <code>parent</code> object should look similar to the following example: </p> <p>Please note that each categoryId is passed inside curly brackets in the array and are comma-separated </p><br> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot;, <br> &quot;fields&quot;: [ <br> {id: &quot;694796924724709570&quot;}, <br> {id: &quot;679282403834857612&quot;} <br> ] <br> } <br> </code> </pre> </li> </ol> </li> <li> <p><code>fieldType</code> : is a string-type field that tells the system what type of field it is. In our case, this is a multiselect-dropdown type field:</p> <pre><code>&quot;fieldType&quot; : &quot;multiselect-dropdown&quot;</code></pre> </li> <li> <p><code>fieldAttributes</code> : is an object-type field that lists down the attributes of your field type. All of your custom options will go inside this object. The <code>fieldAttributes</code> objects accepts an array of objects called <code>options</code>. </p> <ol> <li> <p><code>options</code> : options is an array of objects and each object contains the drop-down options you want to create as part of your drop-down field, and they go with the key <code>values</code>. Refer to the following example of how the <code>fieldAttributes</code> will look like:- </p><br> <pre> <code> &quot;fieldTypeAttributes&quot;: { <br> &quot;options&quot;: [ <br> { <br> &quot;value&quot;: &quot;Herndon&quot;, <br> &quot;id&quot;: 1662374319794 <br> }, <br> { <br> &quot;value&quot;: &quot;Iowa&quot;, <br> &quot;id&quot;: 1662374309711 <br> }, <br> { <br> &quot;value&quot;: &quot;Reston&quot;, <br> &quot;id&quot;: 1662374305527 <br> }, <br> { <br> &quot;value&quot;: &quot;Houston&quot;, <br> &quot;id&quot;: 1662374301860 <br> } <br> ] <br> } <br> </code> </pre> </li> </ol> </li> <li> <p><code>validations</code> : is an array type field that accepts validations on both the custom field itself and the field type. For a New Drop-Down type field, the following validation can be used:-</p> <ol> <li> <p>The first validation is called <code>isMandatory</code> and this is common across all field types' payloads because this validation tells the system whether to consider the custom segment field as a mandatory field or not. Including this validation in the payload is not mandatory. Should you wish to not send this validation explicitly, the system will by-default make this custom field “non-mandatory” in nature.</p> <p>If you’ve followed the above instructions on validations, your <code>validation</code> object should look similar to the following:</p> <br> <pre> <code> &quot;validations&quot;: { <br> &quot;isMandatory&quot;: false <br> } <br> </code> </pre> </li> </ol> </li></ol><p>Refer to the complete payload example on the right panel to create your own payload structure</p><h2>Payload for creating a Document type field</h2><p>You will need the following keys in your payload to create a Document type custom field in the system</p><ol> <li> <p><code>fieldName</code> : string type field. Enter the name of your custom field name here.<br />for eg.<code> “fieldName&quot;: &quot;Audit Template Doc&quot;</code></p> </li> <li> <p><code>parent</code> : object type field. This is where you can mention a list of categories for which this custom field will be applicable. <br />The <code>parent</code> object accepts the following two keys:</p> <ol> <li> <p><code>apiKey</code> which is where you must mention the entity for which this custom field will be applicable for. Currently, the only entity that we support is a segment category. So, the value for <code>apiKey</code> will be <code>category</code>. If you’ve followed the above steps correctly, your parent object should look something like this:- </p><br> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot; <br> } <br> </code> </pre> </li> <li> <p><code>fields</code> is an object type field that accepts an array of multiple categoryId for which this custom field will be applicable. Including the <code>fields</code> key, your <code>parent</code> object should look similar to the following example: </p> <p>Please note that each categoryId is passed inside curly brackets in the array and are comma-separated </p><br> <pre> <code> &quot;parent&quot;: { <br> &quot;apiKey&quot;: &quot;category&quot;, <br> &quot;fields&quot;: [ <br> {id: &quot;694796924724709570&quot;}, <br> {id: &quot;679282403834857612&quot;} <br> ] <br> } <br> </code> </pre> </li> </ol> </li> <li> <p><code>fieldType</code> : is a string-type field that tells the system what type of field it is. In our case, this is a file type field:</p> <pre><code>&quot;fieldType&quot; : &quot;file&quot;</code></pre> </li> <li> <p><code>fieldattibutes (empty) (test)</code> :</p> </li> <li> <p><code>validations</code> : is an array type field that accepts validations on both the custom field itself and the field type. For a Date type field, the following validation can be used:-</p> <ol> <li> <p>The first validation is called <code>isMandatory</code> and this is common across all field types' payloads because this validation tells the system whether to consider the custom segment field as a mandatory field or not. Including this validation in the payload is not mandatory. Should you wish to not send this validation explicitly, the system will by-default make this custom field “non-mandatory” in nature.</p> <p>If you’ve followed the above instructions on validations, your <code>validation</code> object should look similar to the following:</p><br> <pre> <code> &quot;validations&quot;: { <br> &quot;isMandatory&quot;: false <br> } <br> </code> </pre> </li> </ol> </li></ol><p>Refer to the complete payload example on the right panel to create your own payload structure</p>",
                "operationId": "Create_Custom_Segment_Field",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "fieldName": {
                                            "type": "string"
                                        },
                                        "parent": {
                                            "type": "object",
                                            "properties": {
                                                "apiKey": {
                                                    "type": "string",
                                                    "enum": [
                                                        "category"
                                                    ]
                                                },
                                                "fields": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "fieldType": {
                                            "type": "string",
                                            "enum": [
                                                "text",
                                                "textArea",
                                                "date",
                                                "dropdown",
                                                "country",
                                                "state",
                                                "multiselect-dropdown",
                                                "file"
                                            ]
                                        },
                                        "fieldAttributes": {
                                            "type": "object"
                                        },
                                        "validations": {
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "TEXT": {
                                    "summary": "Text Type Custom Field",
                                    "value": [
                                        {
                                            "fieldName": "Taxpayer Code",
                                            "fieldType": "text",
                                            "parent": {
                                                "apiKey": "category",
                                                "fields": [
                                                    {
                                                        "id": "695507570382608298",
                                                    }
                                                ]
                                            },
                                            "validations": {
                                                "textLengthMax": "255",
                                                "isMandatory": false
                                            },
                                        }
                                    ]
                                },
                                "TEXT_AREA": {
                                    "summary": "Text Area Custom Field",
                                    "value": [
                                        {
                                            "fieldName": "Additional Notes",
                                            "fieldType": "textArea",
                                            "parent": {
                                                "apiKey": "category",
                                                "fields": [
                                                    {
                                                        "id": "696609394510530068",
                                                    }
                                                ]
                                            },
                                            "validations": {
                                                "isMandatory": false
                                            }
                                        }
                                    ]
                                },
                                "DATE": {
                                    "summary": "Date Custom Field",
                                    "value": [
                                        {
                                            "fieldName": "Creation Date",
                                            "fieldType": "date",
                                            "parent": {
                                                "apiKey": "category",
                                                "fields": [
                                                    {
                                                        "id": "695507570382608298",
                                                    }
                                                ]
                                            },
                                            "validations": {
                                                "isMandatory": false
                                            }
                                        }
                                    ]
                                },
                                "DROP_DOWN": {
                                    "summary": "New Drop-Down Custom Field",
                                    "value": [
                                        {
                                            "fieldName": "Entity Type",
                                            "fieldType": "dropdown",
                                            "parent": {
                                                "apiKey": "category",
                                                "fields": [
                                                    {
                                                        "id": "695507570382608298",
                                                    }
                                                ]
                                            },
                                            "validations": {
                                                "isMandatory": false
                                            },
                                            "fieldTypeAttributes": {
                                                "options": [
                                                    {
                                                        "value": "Other"
                                                    },
                                                    {
                                                        "value": "Limited Partnership"
                                                    },
                                                    {
                                                        "value": "LLC"
                                                    },
                                                    {
                                                        "value": "Individual"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "COUNTRY_DROP_DOWN": {
                                    "summary": "Country Drop-Down Custom Field",
                                    "value": [
                                        {
                                            "fieldName": "Country Type Field",
                                            "fieldType": "country",
                                            "parent": {
                                                "apiKey": "category",
                                                "fields": [
                                                    {
                                                        "id": "695507570382608298",
                                                    }
                                                ]
                                            },
                                            "validations": {
                                                "isMandatory": false
                                            }
                                        }
                                    ]
                                },
                                "STATE_DROP_DOWN": {
                                    "summary": "State Drop-Down Custom Field",
                                    "value": [
                                        {
                                            "fieldName": "Country Type Field",
                                            "fieldType": "state",
                                            "parent": {
                                                "apiKey": "category",
                                                "fields": [
                                                    {
                                                        "id": "695507570382608298",
                                                    }
                                                ]
                                            },
                                            "validations": {
                                                "isMandatory": false
                                            }
                                        }
                                    ]
                                },
                                "MULTI_SELECT_DROP_DOWN": {
                                    "summary": "Multi-select Drop-Down Custom Field",
                                    "value": [
                                        {
                                            "fieldName": "Service Areas",
                                            "fieldType": "multiselect-dropdown",
                                            "parent": {
                                                "apiKey": "category",
                                                "fields": [
                                                    {
                                                        "id": "695507570382608298",
                                                    }
                                                ]
                                            },
                                            "validations": {
                                                "isMandatory": false
                                            },
                                            "fieldTypeAttributes": {
                                                "options": [
                                                    {
                                                        "value": "Tully"
                                                    },
                                                    {
                                                        "value": "Reston"
                                                    },
                                                    {
                                                        "value": "Iowa"
                                                    },
                                                    {
                                                        "value": "Herndon"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "DOCUMENT": {
                                    "summary": "Document Type Custom Field",
                                    "value": [
                                        {
                                            "fieldName": "Audit Template",
                                            "fieldType": "file",
                                            "parent": {
                                                "apiKey": "category",
                                                "fields": [
                                                    {
                                                        "id": "695507570382608298",
                                                    }
                                                ]
                                            },
                                            "validations": {
                                                "isMandatory": false
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateCustomSegmentFieldResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-segment/v2/categories/{categoryId}/custom-fields": {
            "get": {
                "tags": [
                    "Custom Segment Fields"
                ],
                "summary": "Retrieve Custom Segment Fields",
                "description": "<p class=\"western\">Make a GET request to the specified endpoint to retrieve a list of custom segment fields associated with a segment category, through <b>categoryId</b>. You can find all the existing categories inside the response body when you retrieve type-specific segment categories using this <u><a href=\"#operation/Retrieve_Type-Specific_Categories\">request.</a></u></p> <table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>GET</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v2/categories/{categoryId}/custom-fields</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v2/categories/{categoryId}/custom-fields</td> </tr> </table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Custom_Segment_Fields.png\"> <p class=\"western\"> </p>",
                "operationId": "Retrieve_Custom_Segment_Fields",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveCustomSegmentFieldsResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-segment/v1/configurations/countries": {
            "get": {
                "tags": [
                    "Custom Segment Fields"
                ],
                "summary": "Retrieve Countries",
                "description": "<p class=\"western\">Make a GET request to the specified endpoint to retrieve a list of countries configured in your system. While a list of countries can be used in many use cases, this particular endpoint has been exposed so that country values can be populated in the country type drop-down available as part of custom segment fields, while creating segments.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>GET</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v1/configurations/countries</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v1/configurations/countries </td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Countries.png\"> <p class=\"western\"> </p>",
                "operationId": "Retrieve_Countries",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveCountriesResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-segment/v1/configurations/countries/{countryId}/states": {
            "get": {
                "tags": [
                    "Custom Segment Fields"
                ],
                "summary": "Retrieve States of a Country",
                "description": "<p class=\"western\">Make a GET request to the specified endpoint to retrieve a list of states for a given country, by passing countryId as a path parameter. A list of countryId can be retrieved by using <u><a href=\"#operation/Retrieve_Countries\">this</a></u> request. Please note that while a list of states can be used in many use cases, this particular endpoint has been exposed so that state values can be populated in the country&state type drop-down available as part of custom segment fields, while creating segments.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>GET</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v1/configurations/countries/{countryId}/states</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v1/configurations/countries/{countryId}/states </td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_States_Of_A_Country.png\"> <p class=\"western\"> </p>",
                "operationId": "Retrieve_States_Of_A_Country",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "countryId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveStatesOfACountryResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "company-management/v1/companies/{companyId}": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Retrieve Company By Id",
                "description": "<p class=\"western\">Make a GET request to the specified endpoint to retrieve the details of a company. The endpoint requires <b>companyId</b> as a path parameter.</p><p> <b>Note:</b> Along with retrieving the primary information of a company (also referred to as an Entity), this endpoint retrieves information corresponding to custom fields created under Entity Details section, and can be found inside the object <b>customFields</b>.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>GET</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/company-management/v1/companies/{companyId}</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/company-management/v1/companies/{companyId}</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Company_By_Id.png\"></ol>",
                "operationId": "Retrieve_Company_By_Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "companyId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveCompanyByIdResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/company-management/v1/companies?view=drop-down": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Retrieve Companies",
                "description": "<p class=\"western\">Make a GET request to the specified endpoint to retrieve a list of companies present in your system. Note that a Company is known as an Entity in Info Manager.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>GET</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/company-management/v1/companies?view=drop-down</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/company-management/v1/companies?view=drop-down</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Companies.png\"></ol>",
                "operationId": "Retrieve_Companies",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "view",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "drop-down"
                            ]
                        },
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveCompaniesResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-segment/v2/segments/filter": {
            "post": {
                "tags": [
                    "Segments"
                ],
                "summary": "Retrieve Segments",
                "description": "<p class=\"western\">Make a POST request to the specified endpoint to retrieve segments according to your custom filter criteria. Refer to the request body below to understand what data you need to send in the body to perform this request. You can customize your filter by adding more fields to the <i>constraints</i> field. Moreover, any configured custom segment fields for specific segment categories in the system will also be retrieved for a segment(s) in the response body. </p> <table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v2/segments/filter</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v2/segments/filter</td> </tr> </table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Segments.png\"> <p class=\"western\"> </ol>When defining contraints, you have the option of selecting from multiple clauses for a specific field. Following is a list of clauses, as how they look in the UI vs how they should be worded in your request body.<ul> <li>is = IEQUAL</li> <li>is not = INOT_EQUAL</li> <li>contains = ILIKE</li> <li>does not contain = NOT_ILIKE</li> <li>in = IN</li> <li>not in = NOT_IN</li> <li>on = ON</li> <li>before = BEFORE</li> <li>after = AFTER</li> <li>is between = IS_BETWEEN</li> <li>in last year = LAST_YEAR</li> <li>in current year = CURRENT_YEAR</li> <li>in last month = LAST_MONTH</li> <li>in this month = THIS_MONTH</li> </ul> <p><b>Note:</b> You can enable <b>topParents</b> field to retrieve only top parent segments from your system. Once enabled, the filters from your constraints field will apply only on the top parent segments available in your system.</p> </p>",
                "operationId": "Retrieve_Segments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "page": {
                                        "type": "object",
                                        "properties": {
                                            "pageSize": {
                                                "type": "integer"
                                            },
                                            "pageId": {
                                                "type": "integer"
                                            },
                                            "viewAll": {
                                                "type": "boolean"
                                            },
                                            "sort": {
                                                "type": "object",
                                                "properties": {
                                                    "direction": {
                                                        "type": "string"
                                                    },
                                                    "columns": {
                                                        "type": "array"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "topParents": {
                                        "type": "boolean"
                                    },
                                    "constraints": {
                                        "type": "object",
                                        "anyOf": [
                                            {
                                                "properties": {
                                                    "customSegmentId": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "IEQUAL",
                                                                    "INOT_EQUAL",
                                                                    "ILIKE",
                                                                    "NOT_ILIKE"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "name": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "IEQUAL",
                                                                    "INOT_EQUAL",
                                                                    "ILIKE",
                                                                    "NOT_ILIKE"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "categoryId": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "IN",
                                                                    "NOT_IN"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "characterCode": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "IEQUAL",
                                                                    "INOT_EQUAL",
                                                                    "ILIKE",
                                                                    "NOT_ILIKE"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "createdBy": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "IN",
                                                                    "NOT_IN"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "createdOn": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ON",
                                                                    "BEFORE",
                                                                    "AFTER",
                                                                    "IN_BETWEEN",
                                                                    "LAST_YEAR",
                                                                    "CURRENT_YEAR",
                                                                    "LAST_MONTH",
                                                                    "THIS_MONTH"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "updatedOn": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ON",
                                                                    "BEFORE",
                                                                    "AFTER",
                                                                    "IN_BETWEEN",
                                                                    "LAST_YEAR",
                                                                    "CURRENT_YEAR",
                                                                    "LAST_MONTH",
                                                                    "THIS_MONTH"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "assignTo": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "IN",
                                                                    "NOT_IN"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "example": {
                                    "page": {
                                        "pageSize": 20,
                                        "pageId": 0,
                                        "viewAll": false,
                                        "sort": {
                                            "direction": "DESC",
                                            "columns": [
                                                "created_on"
                                            ]
                                        }
                                    },
                                    "topParents": true,
                                    "constraints": {
                                        "createdOn": {
                                            "clause": "ON",
                                            "values": [
                                                "2021-10-04"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveSegmentsResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-segment/v2/segments/{segmentId}": {
            "get": {
                "tags": [
                    "Segments"
                ],
                "summary": "Retrieve Segment By Segment Id",
                "description": "<p class=\"western\">Make a GET request to the specified endpoint to retrieve a specific segment enlisted in your system, by its segmentId. You can find the <b>segmentId</b> of a segment inside the response body when you retrieve segment(s) through custom filters using this <u><a href=\"#operation/Retrieve_Segments\">request</a></u>.</p> <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>GET</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v2/segments/{segmentId}</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v2/segments/{segmentId}</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Segment_By_Segment_Id.png\"></ol>",
                "operationId": "Retrieve_Segment_By_Segment_Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveSegmentBySegmentIdResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Edit Segments"
                ],
                "summary": "Edit Segment",
                "description": "<p class=\"western\">Make a PATCH request to the specified endpoint to edit a segment. Using this request, you will be able to edit a segment's name, categoryId, accessibility, characterCode and description. Refer to the request body below and the payload example on the right-hand side panel to understand what data you require to successfully make this request.</p> <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>PATCH</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v2/segments/{segmentId}</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v2/segments/{segmentId}</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Edit_Segment.png\"></ol>",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "Edit_Segment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "categoryId": {
                                        "type": "string"
                                    },
                                    "accessibility": {
                                        "type": "string",
                                        "enum": [
                                            "Public",
                                            "Private"
                                        ]
                                    },
                                    "characterCode": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            },
                            "example": {
                                "name": "Segment name updated",
                                "customSegmentId": "Custom-880",
                                "accessibility": "Public",
                                "characterCode": "UTF-8",
                                "description": "The description of this segment is updated"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EditSegmentResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-segment/v2/segments?associationType={units/segments}": {
            "post": {
                "tags": [
                    "Segments"
                ],
                "summary": "Create Segment",
                "description": "<p class=\"western\">Make a POST request to the specified endpoint to create a segment.</p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>Production API Endpoint (segment of units)</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v2/segments?associationType=units</td> </tr> <tr> <td><strong>Production API Endpoint (segment of segments)</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v2/segments?associationType=segments</td> </tr> <tr> <td><strong>UAT API Endpoint (segment of units)</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v2/segments?associationType=units</td> </tr> <tr> <td><strong>UAT API Endpoint (segment of segments)</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v2/segments?associationType=segments</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p> <p><img src=\"images/Create_Segment.png\"></p></ol><p class=\"western\"> You can create two kinds of segments in your system. One is made up of \"units\" (also known as franchise locations) while the other one is made up of child \"segments\". If the categoryId of your segment belongs to the lowest level of category hierarchy, your segment will only accept valid \"units\". If your categoryId does not belong to the lowest level of category hierarchy, your segment will accept valid child \"segments\". The type of segment will depend on the value passed into the \"associationType\" query parameter.</p><p class=\"western\"> The following steps describe the process of obtaining data associated with different fields to create a segment of units:<ul> <li> A valid categoryId can be obtained from <u><a href=\"#operation/Retrieve_Type-Specific_Categories\">this</a></u> request by setting query parameter \"associationType\" as units in your hierarchy of categories. </li> <li> A valid companyId can be obtained from <u><a href=\"#operation/Retrieve_Companies\">this</a></u> request.</li> <li> Units are uniquely identified by franchisee_no, which can be obtained for specific locations using <u><a href=\"#operation/Retrieve_Franchise_Number_Specific\">this</a></u> request. </li> <li>Owners are uniquely identified by userNo, which can be obtained by using <u><a href=\"#operation/Retrieve_People\">this</a></u> request. </li> <li>A list of custom segment fields for a specific segment category can be retrieved using <u><a href=\"#operation/Retrieve_Custom_Segment_Fields\">this</a></u> request. All custom segment fields have to be passed into the <b>additionalFields</b> key. Refer to the additionalFields key section to understand how to create payloads corresponding to different types of custom segment fields. </li></ul></p><p class=\"western\"> The following steps describe the process of obtaining data associated with different fields to create a segment of child segments:<ul> <li> A valid categoryId can be obtained from <u><a href=\"#operation/Retrieve_Type-Specific_Categories\">this</a></u> request by setting query parameter \"associationType\" as segments in your hierarchy of categories. </li> <li> A valid companyId can be obtained from <u><a href=\"#operation/Retrieve_Companies\">this</a></u> request.</li> <li> Segments are uniquely identified by segmentId. To retrieve a list of valid segments that belong to a particular child category, you have to use <u><a href=\"#operation/Retrieve_Segment_By_Category_Id\">this</a></u> request. Moreover, if you're creating a parent segment using a valid companyId, you can retrieve a list of child segments based on that companyId using <u><a href=\"#operation/Retrieve_Child_Segments_Based_On_Company\">this</a></u> request. </li> <li>Owners are uniquely identified by userNo, which can be obtained by using <u><a href=\"#operation/Retrieve_People\">this</a></u> request. </li> <li>A list of custom segment fields for a specific segment category can be retrieved using <u><a href=\"#operation/Retrieve_Custom_Segment_Fields\">this</a></u> request. All custom segment fields have to be passed into the <b>additionalFields</b> key. Refer to the additionalFields key section to understand how to create payloads corresponding to different types of custom segment fields.</li></ul></p><p class=\"western\"> The panel on the right displays request body and response body samples associated with segment creation using both units and segments. Refer to these examples to better understand how to successfully make these requests.</p><h2>additional Fields</h2><p>Before you begin formulating your payload structure for additionalFields object, retrieve the required custom fields for your segment category using <u><a href=\"#operation/Retrieve_Custom_Segment_Fields\">this</a></u> request. All custom segment fields have to be passed into the <strong>additionalFields</strong> key.</p><p><code>additionalFields object</code></p><p>The additionalFields object contains data that needs to be filled out corresponding to different segment fields configured for a categoryId. Please note that for a segment category, multiple custom segment fields can be configured and all of them have to be passed into the additionalFields object as comma-separated objects. </p><p>To retrieve a list of custom segment fields associated with a category, you will require to call this endpoint through a valid categoryId as a path parameter</p><p>Here is how you need to incorporate different kinds of field types into your additionalFields objects</p><ol> <li> <p>Text type: as a plain key-value pair. The key here refers to the name of the field and the value refers to the actual text.</p>for eg. <code>&quot;textTypeField&quot; : &quot;This is a test description&quot;</code> </p> </li> <li> <p>Text Area type: as a plain key-value pair. The key here refers to the name of the field and the value refers to the actual text.</p>for eg. <code>&quot;textAreaTypeField1777669434&quot;: &quot;This is a test description&quot;</code></p> </li> <li> <p>Date type : as a plain key-value pair. The key here refers to the name of the field and the value refers to the date in YYYY-MM-DD format.</p>for eg. <code>&quot;dateField&quot;: &quot;2022-09-14&quot;</code></p> </li> <li> <p>New Drop-Down type : as an array of id values of options. You will find the ids of options available for a drop-down when you retrieve a list of custom segment fields associated with a category as mentioned above. Please note that a new Drop-Down type is a single select type drop-down, so you can only send one option in the array.<br />for eg. </p> <pre> <code> &quot;singleDRopdown111&quot;: [ <br> &quot;1661927934271&quot;, <br> &quot;9991927123474&quot; <br> ] </code> </pre> </li> <li> <p>Country Drop-Down type : as an object that contains the id of a country. The ids of countries configured in your system can be retrieved using <u><a href=\"#operation/Retrieve_Countries\">this</a></u> request. </p> for eg. <pre> <code> &quot;countryField&quot; : { <br> &quot;countryId&quot; : &quot;39&quot; <br> } <br> </code> </pre> </li> <li> <p>Country&amp;State Drop-Down type: as two separate objects, one for country and the other for state. The ids of countries configured in your system can be retrieved using this endpoint. The ids of states can be retrieved using <u><a href=\"#operation/Retrieve_States_Of_A_Country\">this</a></u> request, through passing countryId as a path parameter.</p>for eg. <pre> <code> &quot;countryField&quot; : { <br> &quot;countryId&quot; : &quot;39&quot; <br> }, <br> &quot;stateField&quot; : { <br> &quot;stateId&quot; : &quot;592&quot; <br> } <br> </code> </pre> </li> <li> <p>Multi-Select Drop-Down type : as an array of id values of options. You will find the ids of options available for a drop-down when you retrieve a list of custom segment fields associated with a category as mentioned above.</p><br>for eg. <pre> <code> &quot;serviceAreas477918464&quot;: [ <br> &quot;1662374319794&quot;, <br> &quot;1662374309711&quot;, <br> &quot;1662374305527&quot; <br> ] <br> </code> </pre> </li> <li> <p> Document/File type : API support to be available soon.</p> </li></ol><p>Refer to the example on the right, namely “Request body sample for segment creation using custom segment fields“ to understand how to create your own payload structure</p><h2>Case: Create Segments When A Unit Can Only Be Associated With A Single Segment</h2><p>If your system has opted for such a functionality that prevents a unit from being part of multiple segments, the payload changes a bit. Here is a walkthrough of the steps you need to take in order to create segments that only host units that can be part of only one segment. <br><br>If you use the typical payload that is used to create a segment of units (payload example can be found in the right panel), the request body expects an array called <b>units</b> with a list of unique unitReferenceIds. Since some of those units could already be part of other segments, the API throws out a cautionary response that displays the following message:-</p><p> <i> &emsp;Following units listed below are already associated with another segment. Are you sure you want to reassociate the listed units to the static segment \"Detroit-Zone-Segment\" ? <br> &emsp;1001, 1002, 5021, 8921, 1090 </i></p><p> The above message tells you that you’re trying to group units that are already part of other segments. The next step would be to choose which units out of this list would you like to &emsp;re-associate with your current segment. Re-association here means that a particular unit will be removed from the previous segment it was part of, and will be added to the new segment. <br><br> All such units (that need to be re-associated) will have to be passed as part of a new array called <b>unitsToBeRemoved</b> in the payload. The original <b>units</b> array will stay the same. Please note that any such units that exist in the <b>units</b> array but were not included in the <b>unitsToBeRemoved</b> array will be dropped and won’t be considered for re-association with the new segment. <br><br> Refer to the payload in the right panel, namely “Case: Create Segments When A Unit Can Only Be Associated With A Single Segment“ to understand how to formulate the correct payload.</p>",
                "operationId": "Create_Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "associationType",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "units",
                                "segments"
                            ]
                        },
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "categoryId": {
                                        "type": "string"
                                    },
                                    "companyId": {
                                        "type": "string"
                                    },
                                    "accessibility": {
                                        "type": "string",
                                        "enum": [
                                            "Public",
                                            "Private"
                                        ]
                                    },
                                    "characterCode": {
                                        "type": "string"
                                    },
                                    "additionalFields": {
                                        "type": "object"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "owners": {
                                        "type": "array"
                                    },
                                    "units": {
                                        "type": "array"
                                    },
                                    "segments": {
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "name",
                                    "accessibility"
                                ]
                            },
                            "examples": {
                                "UNITS": {
                                    "summary": "Request body sample for segment creation using UNITS",
                                    "value": {
                                        "name": "Segment of units",
                                        "categoryId": "7887788887878",
                                        "accessibility": "Public",
                                        "description": "This segment contains units",
                                        "owners": [
                                            "1"
                                        ],
                                        "units": [
                                            "1455354069",
                                            "1933677728",
                                            "489668018"
                                        ],
                                        "segments": []
                                    }
                                },
                                "SEGMENTS": {
                                    "summary": "Request body sample for segment creation using child SEGMENTS",
                                    "value": {
                                        "name": "JJ Inc. USA Franchises",
                                        "categoryId": "600258032793812995",
                                        "accessibility": "Public",
                                        "description": "This segment contains child segments that were retrieved on the basis of company",
                                        "companyId": "623797605",
                                        "owners": [
                                            "1571679912"
                                        ],
                                        "units": [],
                                        "segments": [
                                            "1148740406"
                                        ]
                                    }
                                },
                                "ADDITIONAL_FIELDS": {
                                    "summary": "Request body sample for segment creation using custom segment fields",
                                    "value": {
                                        "categories": {
                                            "categoryId": "694796924724709570"
                                        },
                                        "name": "Filling custom segment fields",
                                        "accessibility": "Public",
                                        "units": [
                                            "127113502",
                                            "174751085",
                                            "192265767"
                                        ],
                                        "additionalFields": {
                                            "test111": "A test description (text type field)",
                                            "textArea111": "This is a test description for text area type field",
                                            "creationDate637838117": "2022-09-14",
                                            "singleDRopdown111": [
                                                "1661927934271"
                                            ],
                                            "countryOnlyField": {
                                                "countryId": "95"
                                            },
                                            "countryWithState": {
                                                "countryId": "39"
                                            },
                                            "stateWithCountry": {
                                                "stateId": "592"
                                            },
                                            "textAreaTypeField1777669434": "Mandatory text area field",
                                            "entityTypeDrop-down558186133": null,
                                            "countryTypeDrop-Down348944204": null,
                                            "serviceAreas477918464": [
                                                "1662374319794",
                                                "1662374309711",
                                                "1662374305527"
                                            ]
                                        },
                                        "segment_type": "UNITS"
                                    }
                                },
                                "CASE_1": {
                                    "summary": "Case: Create Segments When A Unit Can Only Be Associated With A Single Segment",
                                    "value": {
                                        "name": "Detroit-Zone-Segment",
                                        "categoryId": "7887788887878",
                                        "accessibility": "Public",
                                        "description": "This segment contains units that can only be part of one segment",
                                        "owners": [
                                            "1"
                                        ],
                                        "units": [
                                            "1455354069",
                                            "1933677728",
                                            "489668018",
                                            "999668018",
                                            "3012668018"
                                        ],
                                        "unitsToBeRemoved": [
                                            "1455354069",
                                            "1933677728",
                                            "489668018"
                                        ],
                                        "segments": []
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/CreateSegmentResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-segment/v2/segments/{segmentId}/units": {
            "get": {
                "tags": [
                    "Segments"
                ],
                "summary": "Retrieve Units Of A Segment",
                "description": "<p class=\"western\">Make a GET request to the specified endpoint to retrieve all the units associated with a segment through its segmentId. You can find the <b>segmentId</b> of a segment inside the response body when you retrieve segment(s) through custom filters using this <u><a href=\"#operation/Retrieve_Segments\">request</a></u>.<p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41/units?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>GET</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v2/segments/{segmentId}/units</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v2/segments/{segmentId}/units</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Units_Of_A_Segment.png\"></ol>",
                "operationId": "Retrieve_Units_Of_A_Segment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveUnitsOfASegmentResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-segment/v2/categories/{categoryId}/segments": {
            "get": {
                "tags": [
                    "Segments"
                ],
                "summary": "Retrieve Segments By Category Id",
                "description": "<p class=\"western\">Make a GET request to the specified endpoint to retrieve all the segments associated with the child category of the passed <b>categoryId</b>. You can find all the existing categories inside the response body when you retrieve type-specific segment categories using this <u><a href=\"#operation/Retrieve_Type-Specific_Categories\">request</a></u>.</p><table width=\"100%\" class=\"endpoint-table\"><tr><td width=\"25%\"><strong>Operation Name</strong></td><td width=\"1%\" >:</td><td>GET</td></tr><tr><td><strong>Production API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v2/categories/{categoryId}/segments</td></tr><tr><td><strong>UAT API Endpoint</strong></td><td>:</td><td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v2/categories/{categoryId}/segments</td></tr></table>The following items must be included in the header of the request:<ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Segment_By_Categort_Id.png\"></ol>",
                "operationId": "Retrieve_Segment_By_Categort_Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveSegmentByCategoryIdResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-segment/v2/segments/{segmentId}/hierarchies": {
            "get": {
                "tags": [
                    "Segments"
                ],
                "summary": "Retrieve Child Segments",
                "description": "<p class=\"western\">Make a GET request to the specified endpoint to retrieve all child segments associated with a parent segment. You must provide a valid <b>segmentId</b> to make a successful request. You can find the <b>segmentId</b> of a segment inside the response body when you retrieve segment(s) through custom filters using this <u><a href=\"#operation/Retrieve_Segments\">request</a></u>. Please note that this endpoint retrieves the whole hierarchy that is associated with a parent segment.</p> <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41/hierarchies?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>GET</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-segment/v2/segments/{segmentId}/hierarchies</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-segment/v2/segments/{segmentId}/hierarchies</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Child_Segments.png\"></ol>",
                "operationId": "Retrieve_Child_Segments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveChildSegmentsResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/manage-segment/v1/segments/{categoryId}/child-segments?companyId={companyId}": {
            "post": {
                "tags": [
                    "Segments"
                ],
                "summary": "Retrieve Child Segments Based On Company",
                "description": "<p class=\"western\">Make a POST request to the specified endpoint to retrieve child segments based on a company. This request requires a combination of a valid categoryId and companyId. You can retrieve a categoryId using this <u><a href=\"#operation/Retrieve_Type-Specific_Categories\">request</a></u>, whereas a companyId can be retrieved using this <u><a href=\"#operation/Retrieve_Companies\">request</a></u>. Moreover, instead of retrieving a complete list of child segments, you can filter out specific child segments using the contraints field in the request body. Refer to the request body schema below to understand what fields you can pass into constraints. Please note that if you want to retrieve a complete list of child segments, you will need to send an empty request body to make a successful request.</p> <p> <b>Note: If the child segments retrieved in the response of this endpoint are associated with other parent companies, then the response will include details of those companies as part of the <b>companyDetails</b> object. The <b>companyDetails</b> object will contain a separate endpoint (as part of the <b>link</b> object) that you can use to further retrieve additional information about the company. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/v1/segments/{categoryId}/child-segments?companyId={companyId} </td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\"> https://skyapi.franconnectuat.net/v1/segments/{categoryId}/child-segments?companyId={companyId}</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Retrieve_Child_Segments_Based_On_Company.png\"></ol>",
                "operationId": "Retrieve_Child_Segments_Based_On_Company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": "true"
                    },
                    {
                        "in": "query",
                        "name": "companyId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "constraints": {
                                        "type": "object",
                                        "anyOf": [
                                            {
                                                "properties": {
                                                    "customSegmentId": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "IN",
                                                                    "NOT_IN"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "name": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "IEQUAL",
                                                                    "INOT_EQUAL",
                                                                    "ILIKE",
                                                                    "NOT_ILIKE"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "categoryId": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "IN",
                                                                    "NOT_IN"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "properties": {
                                                    "characterCode": {
                                                        "type": "object",
                                                        "properties": {
                                                            "clause": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "IEQUAL",
                                                                    "INOT_EQUAL",
                                                                    "ILIKE",
                                                                    "NOT_ILIKE"
                                                                ]
                                                            },
                                                            "values": {
                                                                "type": "array"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "example": {
                                    "constraints": {
                                        "name": {
                                            "clause": "ILIKE",
                                            "values": [
                                                "J"
                                            ],
                                            "tabName": "segment",
                                            "type": "text"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RetrieveChildSegmentsBasedOnCompanyResp"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "manage-segment/v2/segments/{segmentId}/segments": {
            "patch": {
                "tags": [
                    "Edit Segments"
                ],
                "summary": "Add Segments To Segment",
                "description": "<p class=\"western\">Make a PATCH request to the specified endpoint to add a list of segments to a segment. Segments are uniquely identified by segmentId. To retrieve a list of valid segments that belong to a particular child category, you have to use <u><a href=\"#operation/Retrieve_Segment_By_Categort_Id\">this</a></u> request. Refer to the request body below and the payload example on the right panel to understand what data you require to successfully make this request.</p> <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41/segments?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>PATCH</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.netmanage-segment/v2/segments/{segmentId}/segments</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.netmanage-segment/v2/segments/{segmentId}/segments</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Add_Segments_In_Segment.png\"></ol>",
                "operationId": "Add_Segments_In_Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "segments": {
                                        "type": "array"
                                    }
                                }
                            },
                            "example": {
                                "segments": [
                                    "1763539575"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "tenantContext": {
                                        "tenantId": "developers.franconnectdemo.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "segmentId": "1942870192",
                                            "message": "Provided segment list is successfully added in segment.",
                                            "segments": [
                                                "1763539575"
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/1942870192"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Edit Segments"
                ],
                "summary": "Delete Segments From Segment",
                "description": "<p class=\"western\">Make a DELETE request to the specified endpoint to delete a list of segments from a segment. Segments are uniquely identified by segmentId. To retrieve a list of valid segments that belong to a particular child category, you have to use <u><a href=\"#operation/Retrieve_Segment_By_Categort_Id\">this</a></u> request. Refer to the request body below and the payload example on the right panel to understand what data you require to successfully make this request.</p> <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41/segments?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>DELETE</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.netmanage-segment/v2/segments/{segmentId}/segments</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.netmanage-segment/v2/segments/{segmentId}/segments</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Delete_Segments_In_Segment.png\"></ol>",
                "operationId": "Delete_Segments_In_Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "segments": {
                                        "type": "array"
                                    }
                                }
                            },
                            "example": {
                                "segments": [
                                    "1763539575"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "tenantContext": {
                                        "tenantId": "developers.franconnectdemo.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "segmentId": "1942870192",
                                            "message": "Provided segment list is successfully deleted from segment.",
                                            "segments": [
                                                "1763539575"
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/1942870192"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Edit Segments"
                ],
                "summary": "Replace Segments In Segment",
                "description": "<p class=\"western\">Make a PUT request to the specified endpoint to replace existing segments from a segment with a new list of segments. Segments are uniquely identified by segmentId. To retrieve a list of valid segments that belong to a particular child category, you have to use <u><a href=\"#operation/Retrieve_Segment_By_Categort_Id\">this</a></u> request. Refer to the request body below and the payload example on the right panel to understand what data you require to successfully make this request.</p> <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41/segments?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>PUT</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.netmanage-segment/v2/segments/{segmentId}/segments</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.netmanage-segment/v2/segments/{segmentId}/segments</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Replace_Segments_In_Segment.png\"></ol>",
                "operationId": "Replace_Segments_In_Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "segments": {
                                        "type": "array"
                                    }
                                }
                            },
                            "example": {
                                "segments": [
                                    "1763539575"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "tenantContext": {
                                        "tenantId": "developers.franconnectdemo.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "segmentId": "1942870192",
                                            "message": "Provided segment list is successfully updated in segment.",
                                            "segments": [
                                                "1763539575"
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/1942870192"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "manage-segment/v2/segments/{segmentId}/units": {
            "patch": {
                "tags": [
                    "Edit Segments"
                ],
                "summary": "Add Units To Segment",
                "description": "<p class=\"western\">Make a PATCH request to the specified endpoint to add a list of units to a segment. Units are uniquely identified by franchisee_no, which can be obtained for specific locations using <u><a href=\"#operation/Retrieve_Franchise_Number_Specific\">this</a></u> request. Refer to the request body below and the payload example on the right panel to understand what data you require to successfully make this request. <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41/units?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p></p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>PATCH</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.netmanage-segment/v2/segments/{segmentId}/units</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.netmanage-segment/v2/segments/{segmentId}/units</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Add_Units_In_Segment.png\"></ol>",
                "operationId": "Add_Units_In_Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "units": {
                                        "type": "array"
                                    }
                                }
                            },
                            "example": {
                                "units": [
                                    "1",
                                    "2"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "tenantContext": {
                                        "tenantId": "localhost",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "message": "Provided unit list is successfully added in segment.",
                                            "segmentId": "1890324151",
                                            "units": [
                                                "1",
                                                "2"
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "Temp Link"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Edit Segments"
                ],
                "summary": "Delete Units from Segment",
                "description": "<p class=\"western\">Make a DELETE request to the specified endpoint to delete a list of units from a segment. Units are uniquely identified by franchisee_no, which can be obtained for specific locations using <u><a href=\"#operation/Retrieve_Franchise_Number_Specific\">this</a></u> request. Refer to the request body below and the payload example on the right panel to understand what data you require to successfully make this request. <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41/units?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p></p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>DELETE</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.netmanage-segment/v2/segments/{segmentId}/units</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.netmanage-segment/v2/segments/{segmentId}/units</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Delete_Units_In_Segment.png\"></ol>",
                "operationId": "Delete_Units_In_Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "units": {
                                        "type": "array"
                                    }
                                }
                            },
                            "example": {
                                "units": [
                                    "15050101"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "tenantContext": {
                                        "tenantId": "developers.franconnectdemo.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "segmentId": "618220048",
                                            "message": "Provided unit list is successfully deleted from segment.",
                                            "units": [
                                                "15050101"
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "Temp Link"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Edit Segments"
                ],
                "summary": "Replace Units in Segment",
                "description": "<p class=\"western\">Make a PUT request to the specified endpoint to replace existing units from a segment with a new list of units. Units are uniquely identified by franchisee_no, which can be obtained for specific locations using <u><a href=\"#operation/Retrieve_Franchise_Number_Specific\">this</a></u> request. Refer to the request body below and the payload example on the right panel to understand what data you require to successfully make this request. <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41/units?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p></p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>PUT</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.netmanage-segment/v2/segments/{segmentId}/units</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.netmanage-segment/v2/segments/{segmentId}/units</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Replace_Units_In_Segment.png\"></ol>",
                "operationId": "Replace_Units_In_Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "units": {
                                        "type": "array"
                                    }
                                }
                            },
                            "example": {
                                "units": [
                                    "1"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "tenantContext": {
                                        "tenantId": "developers.franconnectdemo.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "segmentId": "618220048",
                                            "message": "Provided unit list is successfully updated in segment.",
                                            "units": [
                                                "2"
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "Temp Link"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "manage-segment/v2/segments/{segmentId}/owners": {
            "patch": {
                "tags": [
                    "Edit Segments"
                ],
                "summary": "Add Owners To Segment",
                "description": "<p class=\"western\">Make a PATCH request to the specified endpoint to add a list of owners to a segment. To retrieve a list of valid owners, you have to use <u><a href=\"#operation/Retrieve_People\">this</a></u> request. Refer to the request body below and the payload example on the right panel to understand what data you require to successfully make this request.</p> <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41/owners?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>PATCH</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.netmanage-segment/v2/segments/{segmentId}/owners</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.netmanage-segment/v2/segments/{segmentId}/owners</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Add_Owners_In_Segment.png\"></ol>",
                "operationId": "Add_Owners_In_Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "owners": {
                                        "type": "array"
                                    }
                                }
                            },
                            "example": {
                                "owners": [
                                    "1448558113",
                                    "450307910"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "tenantContext": {
                                        "tenantId": "developers.franconnectdemo.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "segmentId": "618220048",
                                            "message": "Provided owner list is successfully added in segment.",
                                            "owners": [
                                                "1448558113",
                                                "450307910"
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/618220048"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Edit Segments"
                ],
                "summary": "Delete Owners from Segment",
                "description": "<p class=\"western\">Make a DELETE request to the specified endpoint to delete a list of owners from a segment. To retrieve a list of valid owners, you have to use <u><a href=\"#operation/Retrieve_People\">this</a></u> request. Refer to the request body below and the payload example on the right panel to understand what data you require to successfully make this request.</p> <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41/owners?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>DELETE</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.netmanage-segment/v2/segments/{segmentId}/owners</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.netmanage-segment/v2/segments/{segmentId}/owners</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Delete_Owners_In_Segment.png\"></ol>",
                "operationId": "Delete_Owners_In_Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "owners": {
                                        "type": "array"
                                    }
                                }
                            },
                            "example": {
                                "owners": [
                                    "450307910"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "tenantContext": {
                                        "tenantId": "developers.franconnectdemo.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "segmentId": "618220048",
                                            "message": "Provided owner list is successfully deleted from segment.",
                                            "owners": [
                                                "450307910"
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/618220048"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Edit Segments"
                ],
                "summary": "Replace Owners in Segment",
                "description": "<p class=\"western\">Make a PUT request to the specified endpoint to replace existing owners from a segment with a new list of owners. To retrieve a list of valid owners, you have to use <u><a href=\"#operation/Retrieve_People\">this</a></u> request. Refer to the request body below and the payload example on the right panel to understand what data you require to successfully make this request.</p> <p> <b>Note:</b> This endpoint primarily accepts a segmentId which is the primary key of a segment that FranConnect stores in its database. However, the <b>customSegmentId</b> can also be leveraged to make this endpoint work. A customSegmentId is the Id of a segment that is shown in the UI. In order to use the customSegmentId inplace of a segmentId, you need to the use the query parameter, namely <b>isCustomId</b> and it set to true, next to the customSegmentId value. <br> For eg: https://skyapi.franconnect.net/manage-segment/v2/segments/41/owners?isCustomId=true <br> Here value 41 is the customSegmentId of a segment. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>PUT</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.netmanage-segment/v2/segments/{segmentId}/owners</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.netmanage-segment/v2/segments/{segmentId}/owners</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;. <p><img src=\"images/Replace_Owners_In_Segment.png\"></ol>",
                "operationId": "Replace_Owners_In_Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "segmentId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "isCustomId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "owners": {
                                        "type": "array"
                                    }
                                }
                            },
                            "example": {
                                "owners": [
                                    "450307550"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "tenantContext": {
                                        "tenantId": "developers.franconnectdemo.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "segmentId": "618220048",
                                            "message": "Provided owner list is successfully updated in segment.",
                                            "owners": [
                                                "450307910"
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/618220048"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "data": [
                            {
                                "segmentId": "618220048",
                                "message": "Provided owner list is successfully updated in segment.",
                                "owners": [
                                    "450307910"
                                ],
                                "links": [
                                    {
                                        "rel": "self",
                                        "action": "get",
                                        "href": "https://api.franconnectqa.net/manage-segment/v2/segments/618220048"
                                    }
                                ]
                            }
                        ]
                    },
                    "description": "Successful"
                },
                "401": {
                    "description": "Unauthorized"
                },
                "403": {
                    "description": "Forbidden"
                },
                "404": {
                    "description": "Not Found"
                }
            }
        },
        "/manage-teams/v1/people/users": {
            "post": {
                "tags": [
                    "People"
                ],
                "summary": "Retrieve People",
                "description": "<p class=\"western\">Make a POST request to the specified endpoint to retrieve a list of users (People) from your system. </p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnect.net/manage-teams/v1/people/users</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://skyapi.franconnectuat.net/manage-teams/v1/people/users</td> </tr></table>The following items must be included in the header of the request:<ol> <li> <p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p> </li> <li> <p>&ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p> </li> <li> <p>&ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p> </li></ol><p class=\"western\">Filter attributes have to be passed as value into the <b>fieldId</b> key. The following list shows the filter attributes and their corresponding clauses along with how a clause is worded in the UI (given inside parentheses). <ul> <li><b>user_first_name</b>: acceptable clauses: \"IEQUAL\" (is), \"INOT_EQUAL\" (is not), \"ILIKE\" (contains), \"NOT_ILIKE\" (does not contain)</li> <li><b>user_last_name</b>: acceptable clauses: \"IEQUAL\" (is), \"INOT_EQUAL\" (is not), \"ILIKE\" (contains), \"NOT_ILIKE\" (does not contain)</li> <li><b>user_level</b>: acceptable clauses: \"IN\" (in), \"NOT_IN\" (not in)</li> </ul></p><p class=\"western\">&nbsp;</p><img src=\"images/Retrieve_People.png\">",
                "operationId": "Retrieve_People",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "fieldId": {
                                            "type": "string",
                                            "enum": [
                                                "user_first_name",
                                                "user_last_name",
                                                "user_level"
                                            ]
                                        },
                                        "clause": {
                                            "type": "string"
                                        },
                                        "values": {
                                            "type": "array"
                                        }
                                    }
                                }
                            },
                            "example": [
                                {
                                    "fieldId": "user_first_name",
                                    "clause": "ILIKE",
                                    "values": [
                                        "nitin"
                                    ]
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "tenantContext": {
                                        "tenantId": "developers.franconnectdemo.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "peopleId": "880555040",
                                            "userNo": "880555040",
                                            "name": "\"Nitin\" U",
                                            "userName": "\"Nitin\" U",
                                            "level": "0",
                                            "hierarchyLabel": "Corporate Users",
                                            "links": []
                                        },
                                        {
                                            "peopleId": "933235740",
                                            "userNo": "933235740",
                                            "name": "Nitin U",
                                            "userName": "Nitin U",
                                            "level": "1",
                                            "hierarchyLabel": "Franchise Users",
                                            "links": []
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/{customer_SalesWebhook URL}": {
            "post": {
                "tags": [
                    "Sales Webhook"
                ],
                "summary": "LEAD",
                "description": "<p>To enable the Webhook feature, you can send an email to helpdesk@franconnect.com and share the webhook URL where the updates can be pushed in the JSON format. Once the feature is enabled, the Webhook URL must be configured for receiving Webhook notifications. Please read the following steps to configure your Webhook URL:<ol><li>Enter Workflow Name and select Workflow Type in the Sales > Workflows.</li><li>Select when to Trigger the Workflow accordingly.</li><li>Choose Workflow condition “Which Leads do you want to execute this workflow on?” – All Leads or Leads matching required condition(s). If selecting “All Leads”, then as the name suggests, the Workflow condition would apply to all the Leads. But, if selecting “Leads matching required condition(s)”, then select Fields to filter Leads from the drop-down list.</li><li>Choose Action from the drop-down list, and select “Configure Webhook URL”.<p><img src=\"images/Create_Workflow.png\"></li><li>A pop-up “Configure Webhook URL” would display. Enter the valid Webhook URL, and click “Associate & Save”.</li><p><img src=\"images/Configure_Webhook_URL.png\"></ol></p><br><p><b>Receiving Webhook Notifications</b></p><p>FranConnect Sky System would send Webhook notifications via HTTP POST requests in the JSON Format to the URL endpoints that you defined to Retrieve Primary Info of a Lead in the Sales Module along with the Tenant ID. Tenant ID would be the name of the Tenant. An example of the dataset format is given on the right panel.</p>",
                "operationId": "LEAD",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "fcResponse": {
                                        "responseData": {
                                            "fsLead": {
                                                "locationId1b": "",
                                                "country": "USA",
                                                "leadKilledReasonComment": "",
                                                "dateOfOpen": "",
                                                "investTimeframe": "",
                                                "stateID": "Pennsylvania",
                                                "companyName": "",
                                                "bestTimeToContact": "",
                                                "marketingCodeId": "",
                                                "_bestContactTime344129770": "",
                                                "preferredCity2": "",
                                                "preferredCity1": "",
                                                "primaryPhoneToCall": "",
                                                "statusChangeDate": "",
                                                "division": "",
                                                "unsubscribe": "Opted-In",
                                                "sourceOfFunding": "",
                                                "fax": "",
                                                "zip": "17254",
                                                "forecastClosureDate": "",
                                                "leadOwnerID": "Gragg Salzano",
                                                "leadOwnerReferenceId": "4344056308",
                                                "lastAttended": "2019-12-03T09:56Z",
                                                "bounceEmailStatus": "No",
                                                "leadStatusID": "Contacted",
                                                "probability": "0",
                                                "coApplicantRelationshipID": "",
                                                "homePhone": "",
                                                "webSiteLead": "No",
                                                "ipAddress": "",
                                                "liquidCapitalMax": "More Than $100,000",
                                                "liquidCapitalMin": "",
                                                "firstName": "Cristian",
                                                "phone": "(717) 917-1111",
                                                "forecastRating": "",
                                                "countyID": "",
                                                "background": "",
                                                "lastUpdate": "2021-07-16T12:52Z",
                                                "nextCallDate": "",
                                                "salutation": "Mr.",
                                                "smartSchedulerAppointmentDate": "",
                                                "leadSource2ID": "Internet",
                                                "preferredStateId2": "",
                                                "preferredStateId1": "",
                                                "preferredCountry1": "",
                                                "lastName": "Hernandez",
                                                "preferredCountry2": "",
                                                "city": "SCOTLAND",
                                                "spamEmailStatus": "No",
                                                "referenceId": "319496793",
                                                "browserType": "",
                                                "noOfFieldSold": "",
                                                "franchiseAwarded": "",
                                                "otherLeadSourceDetail": "You Have a New Lead from VeteransOpportunities.com",
                                                "requestDate": "2019-12-03T08:56Z",
                                                "tenantID": "developers",
                                                "bounceReason": "",
                                                "phoneExt": "",
                                                "address": "#43, Palmum Street",
                                                "comments": "",
                                                "address2": "",
                                                "_nickname743760937": "",
                                                "mobile": "",
                                                "unsubscribeReason": "",
                                                "locationId2": "",
                                                "emailID": "sample@domain.com",
                                                "locationId1": "",
                                                "_iAgreeToReceiveTheFranchiseBrochureAndF886597519": "Yes",
                                                "leadKilledReason": "",
                                                "leadRatingID": "",
                                                "homePhoneExt": "",
                                                "noOfUnitReq": "",
                                                "forecastRevenue": "",
                                                "unsubscribeReasonDetail": "",
                                                "divisionReferenceId": "",
                                                "serviceID": "Product/Service Update,Newsletters,Announcements,Webinars and Events,Offers,Others,Email Communications",
                                                "leadSource3ID": "Others"
                                            }
                                        },
                                        "responseStatus": "Success",
                                        "responseId": "717320366"
                                    }
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/{Customer_IMWebhook_URL}": {
            "post": {
                "tags": [
                    "INFO MANAGER WEBHOOK"
                ],
                "summary": "FRANCHISE",
                "description": "<p>To enable this feature, you can send an email to helpdesk@franconnect.com and share the webhook URL(an endpoint that can receive the array of events as JSON objects) where the updates can be pushed in the JSON format. Once the feature is enabled, the following events are captured:-<ul> <li>Addition</li> <li>Modification</li> <li>Transfer</li> <li>Termination</li> <li>Deactivation</li> <li>Addition, update or deletion in any of the tabs (System and Custom)</li></ul> <br> In just 5 minutes the information is pushed to the endpoint provided by you.</p><p>Furthermore, if multiple modifications are made within the given 5 minutes period across the franchise(s), you will receive an array of JSON objects. For example, a Guarantor is added, an Employee is deleted in an ABC franchise and a new XYZ franchise is added in the system. Along with that, a PQR franchise is deactivated from the admin in the same 5 minutes session. Then, all of these events will get captured. The format that you will receive the data in for this example is given on the right-hand side.<p>",
                "operationId": "FRANCHISE",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "tabName": "Guarantors",
                                        "subModule": "fimGuarantor",
                                        "changeEvent": "add",
                                        "referenceId": "1201817558",
                                        "eventDateTime": "2021-07-09T02:52:28.398456Z",
                                        "franchiseeName": "ABC",
                                        "parentReferenceId": "1831705924"
                                    },
                                    {
                                        "tabName": "Employees",
                                        "subModule": "fimEmployeesMapping",
                                        "changeEvent": "delete",
                                        "referenceId": "1194156640",
                                        "eventDateTime": "2021-07-09T02:51:44.151463Z",
                                        "franchiseeName": "ABC",
                                        "parentReferenceId": "1831705924"
                                    },
                                    {
                                        "tabName": "Center Info",
                                        "subModule": "franchisees",
                                        "changeEvent": "add",
                                        "referenceId": "1631650236",
                                        "eventDateTime": "2021-07-09T02:52:10.067197Z",
                                        "franchiseeName": "XYZ",
                                        "parentReferenceId": "1631650236"
                                    },
                                    {
                                        "tabName": "Center Info",
                                        "subModule": "franchisees",
                                        "changeEvent": "update",
                                        "referenceId": "1973910563",
                                        "eventDateTime": "2021-07-09T02:53:20.067197Z",
                                        "franchiseeName": "PQR",
                                        "parentReferenceId": "1973910563"
                                    }
                                ]
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/{Customer_IMWebhook_URL_Segment}": {
            "post": {
                "tags": [
                    "Segments Webhook"
                ],
                "summary": "Segment",
                "description": "To enable this feature, you can send an email to helpdesk@franconnect.com and share the webhook URL(an endpoint that canreceive arrays of events as JSON objects) where the updates can be pushed in the JSON format. Once this feature isenabled, the following events are captured corresponding to segments:-<ul> <li>Create</li> <li>Update</li> <li>Delete</li></ul> <p> The captured events will be sent in real-time to the specified webhook URL in JSON format. The reference to all the events mentioned above can be found under Response Samples.</p>",
                "operationId": "Segment_Webhook",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "create": {
                                        "summary": "Create",
                                        "value": {
                                            "entityType": "segment",
                                            "eventType": "create",
                                            "entityId": "1569275889",
                                            "entityName": "Pre Transfer SB",
                                            "entityState": "active",
                                            "eventDateTime": "2023-03-29T07:41:54Z",
                                            "userNo": "1",
                                            "additionalAttributes": {
                                              "customSegmentId": "398"
                                            }
                                          }
                                    },
                                    "update": {
                                        "summary": "Update",
                                        "value": {
                                            "entityType": "segment",
                                            "eventType": "update",
                                            "entityId": "1569275889",
                                            "entityName": "Pre Transfer SB updated",
                                            "entityState": "active",
                                            "eventDateTime": "2023-03-29T07:42:45Z",
                                            "userNo": "1",
                                            "additionalAttributes": {
                                              "customSegmentId": "398"
                                            }
                                          }
                                    },
                                    "delete": {
                                        "summary": "delete",
                                        "value": {
                                            "entityType": "segment",
                                            "eventType": "delete",
                                            "entityId": "1569275889",
                                            "entityName": "Pre Transfer SB updated",
                                            "entityState": "active",
                                            "eventDateTime": "2023-03-29T07:42:45Z",
                                            "userNo": "1",
                                            "additionalAttributes": {
                                              "customSegmentId": "398"
                                            }
                                          }
                                    }
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/{Customer_IMWebhook_URL_Segment_Category}": {
            "post": {
                "tags": [
                    "Segments Webhook"
                ],
                "summary": "Segment category",
                "description": "To enable this feature, you can send an email to helpdesk@franconnect.com and share the webhook URL(an endpoint that canreceive arrays of events as JSON objects) where the updates can be pushed in the JSON format. Once this feature isenabled, the following events are captured corresponding to segment categories:-<ul> <li>Create</li> <li>Update</li> <li>Delete</li></ul> <p> The captured events will be sent in real-time to the specified webhook URL in JSON format. The reference to all the events mentioned above can be found under Response Samples.</p>",
                "operationId": "Segment_Category_Webhook",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "create": {
                                        "summary": "Create",
                                        "value": {
                                            "entityType": "segmentCategory",
                                            "eventType": "create",
                                            "entityId": "770915990983677771",
                                            "entityName": "SB-cat",
                                            "entityState": "active",
                                            "eventDateTime": "2023-03-29T07:44:55Z",
                                            "userNo": "1"
                                          }
                                    },
                                    "update": {
                                        "summary": "Update",
                                        "value":{
                                            "entityType": "segmentCategory",
                                            "eventType": "create",
                                            "entityId": "770915990983677771",
                                            "entityName": "SB-cat (updated)",
                                            "entityState": "active",
                                            "eventDateTime": "2023-03-29T07:44:55Z",
                                            "userNo": "1"
                                          }
                                    },
                                    "delete": {
                                        "summary": "delete",
                                        "value": {
                                            "entityType": "segmentCategory",
                                            "eventType": "delete",
                                            "entityId": "770915990983677771",
                                            "entityName": "SB-cat",
                                            "entityState": "active",
                                            "eventDateTime": "2023-03-29T07:44:55Z",
                                            "userNo": "1"
                                          }
                                    }
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/{Customer_IMWebhook_URL_Custom_Segment_Field}": {
            "post": {
                "tags": [
                    "Segments Webhook"
                ],
                "summary": "Custom Segment Field",
                "description": "To enable this feature, you can send an email to helpdesk@franconnect.com and share the webhook URL(an endpoint that canreceive arrays of events as JSON objects) where the updates can be pushed in the JSON format. Once this feature isenabled, the following events are captured corresponding to custom segment fields:-<ul> <li>Create</li> <li>Update</li> <li>Delete</li></ul> <p> The captured events will be sent in real-time to the specified webhook URL in JSON format. The reference to all the events mentioned above can be found under Response Samples.</p>",
                "operationId": "Custom_Segment_Field_Webhook",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "create": {
                                        "summary": "Create",
                                        "value":{
                                            "entityType": "customSegmentField",
                                            "eventType": "create",
                                            "entityId": "770916427526838091",
                                            "entityName": "ABN No.",
                                            "entityState": "active",
                                            "eventDateTime": "2023-03-29T07:46:39Z",
                                            "userNo": "1"
                                          }
                                    },
                                    "update": {
                                        "summary": "Update",
                                        "value":{
                                            "entityType": "customSegmentField",
                                            "eventType": "create",
                                            "entityId": "770916427526838091",
                                            "entityName": "ABN No. (Updated)",
                                            "entityState": "active",
                                            "eventDateTime": "2023-03-29T07:46:39Z",
                                            "userNo": "1"
                                          }
                                    },
                                    "delete": {
                                        "summary": "delete",
                                        "value": {
                                            "entityType": "customSegmentField",
                                            "eventType": "create",
                                            "entityId": "770916427526838091",
                                            "entityName": "ABN No.",
                                            "entityState": "active",
                                            "eventDateTime": "2023-03-29T07:46:39Z",
                                            "userNo": "1"
                                          }
                                    }
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/{customer_CRMwebhook_URL}": {
            "post": {
                "tags": [
                    "CRM Webhook"
                ],
                "summary": "LEAD/CONTACT",
                "description": "<p>To enable the Webhook feature, you can send an email to helpdesk@franconnect.com and share the webhook URL where the updates can be pushed in the JSON format. Once the feature is enabled, the Webhook URL must be configured for receiving Webhook notifications. Please read the following steps to configure your Webhook URL:<ol><li>Enter Workflow Name and select Workflow Type along with Record Type in the CRM > Workflows. For this instance, we have selected Lead as the Record Type.</li><li>Select when to Trigger the Workflow accordingly.</li><li>Choose Workflow condition “Which Leads do you want to execute this workflow on?” – All Leads or Leads matching required condition(s). If selecting “All Leads”, then as the name suggests, the Workflow condition would apply to all the Leads. But, if selecting “Leads matching required condition(s)”, then select Fields to filter Leads from the drop-down list.</li><li>Choose Action from the drop-down list, and select “Configure Webhook URL”.<p><img src=\"images/Create_CRM_Workflow.png\"></li><li>A pop-up “Configure Webhook URL” would display. Enter the valid Webhook URL, and click “Associate & Save”.</li><p><img src=\"images/Configure_CRM_Webhook_URL.png\"></ol></p><br><p><b>Receiving Webhook Notifications</b></p><p>FranConnect Sky System would send Webhook notifications via HTTP POST requests in the JSON Format to the URL endpoints that you defined to Retrieve Primary Info of a Lead or Contact in the CRM Module along with the Tenant ID. Tenant ID would be the name of the Tenant. An example of the dataset format is given on the right panel.</p>",
                "operationId": "LEAD/CONTACT",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "fcResponse": {
                                        "responseData": {
                                            "cmLead": {
                                                "ownerType": "Corporate",
                                                "country": "USA",
                                                "birthdate": "",
                                                "anniversarydate": "",
                                                "companyName": "",
                                                "bestTimeToContact": "",
                                                "suffix": "",
                                                "cmLeadTypeID": "",
                                                "areaID": "",
                                                "unsubscribe": "Opt-In Request not Sent",
                                                "cmLeadStatusID": "New",
                                                "state": "District of Columbia",
                                                "emailIds": "sample@domain.com",
                                                "leadOwnerID": "Martha Hustle",
                                                "leadOwnerReferenceId": "850485234",
                                                "leadAddedByReferenceId": "1",
                                                "areaReferenceId": "",
                                                "bounceEmailStatus": "No",
                                                "cmSource3ID": "",
                                                "referralContact": "",
                                                "leadLastName": "Fernandez",
                                                "cmSource1ID": "",
                                                "zipcode": "20001",
                                                "smsUnsubscribeDate": "",
                                                "franchiseeReferenceId": "",
                                                "lastContactedField": "",
                                                "divisionID": "",
                                                "position": "",
                                                "primaryContactMethod": "Email",
                                                "extn": "",
                                                "city": "ohio",
                                                "title": "",
                                                "spamEmailStatus": "No",
                                                "referenceId": "1976134029",
                                                "leadFirstName": "Christian",
                                                "phoneNumbers": "(717) 999-1111",
                                                "faxNumbers": "",
                                                "referralAccount": "",
                                                "cmRatingID": "",
                                                "tenantID": "developers",
                                                "leadAddedBy": "FranConnect Administrator",
                                                "bounceReason": "",
                                                "smsUnsubscribe": "Opt-In Request not Sent",
                                                "unsubscribeDate": "",
                                                "leadAddDate": "2021-07-18T15:45Z",
                                                "franchiseeNo": "",
                                                "alternateEmail": "",
                                                "leadModifyDate": "2021-07-18T15:52Z",
                                                "convertedBy": "",
                                                "address": "",
                                                "comments": "",
                                                "mobileNumbers": "",
                                                "cmSource2ID": "",
                                                "unsubscribeReason": "",
                                                "contactDetails": {
                                                    "contactFirstName": "",
                                                    "contactLastName": "",
                                                    "referenceId": ""
                                                },
                                                "unsubscribeReasonDetail": "",
                                                "convertedOn": "",
                                                "divisionReferenceId": "",
                                                "serviceID": "Product/Service Update, Newsletters, Announcements, Webinars and Events, Offers, Others, Send Email, Email Communications, Information Email"
                                            }
                                        },
                                        "responseStatus": "Success",
                                        "responseId": "1729301091"
                                    }
                                }
                            }
                        },
                        "description": "Successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/userauth/oauth/token": {
            "post": {
                "tags": [
                    "Refresh Token"
                ],
                "summary": "Refresh Token Authentication",
                "description": "<p><table width=\"100%\" class=\"endpoint-table\"> <tr> <td width=\"25%\"><strong>Operation Name</strong></td> <td width=\"1%\">:</td> <td>POST</td> </tr> <tr> <td><strong>Production API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://auth.franconnect.net/userauth/oauth/token</td> </tr> <tr> <td><strong>UAT API Endpoint</strong></td> <td>:</td> <td valign=\"top\">https://auth.franconnectuat.net/userauth/oauth/token</td> </tr></table><br>Perform the following steps to generate a new access token using a refresh token:<ol> <li style=\"margin-left: 1px;\">Using the Postman GUI, select POST as the API method and enter https://auth.franconnectuat.net/userauth/oauth/token as the request url.<p><img src=\"images/Refresh_Token_2.PNG\"></p> </li> <li style=\"margin-left: 1px;\">Enter the following items as query parameters: <ul> <li> <p>&ldquo;grant_type&rdquo; as the key and its value as &ldquo;refresh_token&rdquo;.</p> </li> <li style=\"margin-left: 1px;\"> <p>&ldquo;refresh_token&rdquo; as the key and its value will be the complete refresh token value that you have received from authentication.</p> </li> </ul> <p><img src=\"images/Refresh_Token_3.PNG\"></p> </li> <li style=\"margin-left: 1px;\">Click on Authorization tab and choose Basic Auth for the type field. Enter the Client ID provided to you by FranConnect in the username field, for e.g. FRANC0NN3CT_API. Enter the Client Secret provided to you by FranConnect in the password field, for e.g. DDEEMVOE2L0O1P9E. <p>Contact <a href=\"mailto:helpdesk@franconnect.com\">helpdesk@franconnect.com</a> to get your Client ID and Client Secret.</p> <p><img src=\"images/Refresh_Token_4.PNG\"></p> </li> <li style=\"margin-left: 1px;\">Include the following item in the header of the request: <ul> <li style=\"margin-left: 1px;\"> <p>&ldquo;X-TenantID&rdquo; as the key and its value based on your FranConnect system's URL. If the login URL for your FranConnect system is https://developers.franconnectdemo.net/fc, then the X-TenantID will be developers.franconnectdemo.net. </li> </ul> <p><img src=\"images/Refresh_Token_5.PNG\"></p> </li> <li style=\"margin-left: 1px;\">Click Send to get a new access token along with a new refresh token.</li></ol></p>",
                "operationId": "Refresh_Token_Auth"
            }
        }
    },
    "components": {
        "schemas": {
            "Module": {
                "type": "object",
                "properties": {
                    "responseType": {
                        "type": "string"
                    }
                },
                "XML": {
                    "name": "Module"
                }
            },
            "AdminSubModule": {
                "type": "object",
                "properties": {
                    "module": {
                        "type": "string"
                    },
                    "subModule": {
                        "type": "string"
                    },
                    "xmlString": {
                        "type": "string"
                    },
                    "responseType": {
                        "type": "string"
                    }
                },
                "XML": {
                    "name": "AdminSubModule"
                }
            },
            "CreateSchema": {
                "type": "object",
                "properties": {
                    "module": {
                        "type": "string"
                    },
                    "subModule": {
                        "type": "string"
                    },
                    "operation": {
                        "type": "string"
                    },
                    "roleTypeForQuery": {
                        "type": "integer"
                    }
                },
                "xml": {
                    "name": "CreateSchema"
                }
            },
            "retrievefield": {
                "type": "object",
                "properties": {
                    "module": {
                        "type": "string"
                    },
                    "subModule": {
                        "type": "string"
                    },
                    "fieldName": {
                        "type": "string"
                    },
                    "dependentfieldName": {
                        "type": "string"
                    },
                    "dependentfieldValue": {
                        "type": "string"
                    }
                },
                "XML": {
                    "name": "retrievefield"
                }
            },
            "FSCreateLead": {
                "type": "object",
                "properties": {
                    "module": {
                        "type": "string"
                    },
                    "subModule": {
                        "type": "string"
                    },
                    "xmlString": {
                        "type": "string"
                    },
                    "responseType": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "FSCreateLead"
                }
            }
        },
        "requestBodies": {
            "ModuleArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/module?responseType=XML",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Module"
                            },
                            "xml": {
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "CreateSchemaArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/query?module=admin&subModule=user&roleTypeForQuery=1&operation=create",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/CreateSchema"
                            },
                            "xml": {
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "RetrieveSchemaArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/query?module=admin&subModule=user&operation=retrieve",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/CreateSchema"
                            },
                            "xml": {
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "UpdateSchemaArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/query?module=admin&subModule=user&roleTypeForQuery=1&operation=update",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/CreateSchema"
                            },
                            "xml": {
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "DeleteSchemaArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/query?module=admin&subModule=user&operation=delete",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/CreateSchema"
                            },
                            "xml": {
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "FSCreateLeadArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fsLead>\n<salutation>Mr.</salutation>\n<firstName>Adam</firstName>\n<lastName>Smith</lastName>\n<address>100 Main St</address>\n<address2></address2>\n<city>Seattle</city>\n<country>USA</country>\n<stateID>Washington</stateID>\n<sendAutomaticMail>Yes</sendAutomaticMail>\n<zip>98102</zip>\n<countyID>Adams</countyID>\n<primaryPhoneToCall>Mobile</primaryPhoneToCall>\n<bestTimeToContact></bestTimeToContact>\n<phone></phone>\n<phoneExt></phoneExt>\n<homePhone></homePhone>\n<homePhoneExt></homePhoneExt>\n<fax></fax>\n<mobile>9876543210</mobile>\n<emailID>example@franconnect.com</emailID>\n<companyName></companyName>\n<comments></comments>\n<basedOnAssignmentRule>Yes</basedOnAssignmentRule>\n<leadOwnerID>Eriberto Crooks</leadOwnerID>\n<leadRatingID>Warm</leadRatingID>\n<marketingCodeId></marketingCodeId>\n<leadSource2ID>Advertisement</leadSource2ID>\n<leadSource3ID>Magazine</leadSource3ID>\n<otherLeadSourceDetail></otherLeadSourceDetail>\n<liquidCapitalMin></liquidCapitalMin>\n<liquidCapitalMax></liquidCapitalMax>\n<investTimeframe></investTimeframe>\n<background></background>\n<sourceOfFunding></sourceOfFunding>\n<noOfUnitReq>1</noOfUnitReq>\n<preferredCity1></preferredCity1>\n<preferredCountry1></preferredCountry1>\n<preferredCity2></preferredCity2>\n<probability></probability>\n<forecastRating></forecastRating>\n<forecastRevenue></forecastRevenue>\n<smartScheduleAppointmentDate>2020-05-15 11:28Z</smartScheduleAppointmentDate>\n<basedOnWorkflowAssignmentRule>Yes</basedOnWorkflowAssignmentRule>\n<serviceID>Product/Service Update,Newsletters,Announcements</serviceID>\n</fsLead>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "FSRetrieveLeadArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n<referenceId>1440427898</referenceId>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Retrieval object",
                "required": true
            },
            "FSUpdateLeadArray": {
                "content": {
                    "application/xml": {
                        "examples": {
                            "example1" : {
                                "summary": "Update Lead's Primary Info.",
                                "value": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fsLead>\n<referenceId>1440427898</referenceId>\n<firstName>Adrian</firstName>\n</fsLead>\n</fcRequest>"
                            },
                            "example2":{
                                "summary": "Update Lead's Status With Status Change Reason",
                                "value": "<fcRequest>\n<fsLead>\n<referenceId>371549658</referenceId>\n<leadStatusID>Connected</leadStatusID>\n<leadKilledReason>\nLead connected through to HQ</leadKilledReason>\n<leadKilledReasonComment>\nLead status changed to Connected. Proceed to the next step in the pipeline\n</leadKilledReasonComment>\n</fsLead>\n</fcRequest>\n"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Updation object",
                "required": true
            },
            "FSDeleteLeadArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fsLead>\n<referenceId>1440427898</referenceId>\n</fsLead>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Deletion object",
                "required": true
            },
            "AdminSubModuleArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/submodule?module=admin&responseType=XML",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Deletion object",
                "required": true
            },
            "SalesSubModuleArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/submodule?module=fs&responseType=XML",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Deletion object",
                "required": true
            },
            "InfoMgrSubModuleArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/submodule?module=fim&responseType=XML",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Deletion object",
                "required": true
            },
            "CRMSubModuleArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/submodule?module=cm&responseType=XML",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Deletion object",
                "required": true
            },
            "RegionalSubModuleArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/submodule?module=regional&responseType=XML",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "wrapped": true
                            }
                        }
                    }
                }
            },
            "AdminCreateUserArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<adminUser>\n<userID>CarlW</userID>\n<password>Carl12345</password>\n<userLevel>Corporate</userLevel>\n<userLanguage>English</userLanguage>\n<timezone>GMT -06:30</timezone>\n<type>Normal</type>\n<expirationTime>NA</expirationTime>\n<role>Corporate Administrator</role>\n<jobTitle>Project Manager</jobTitle>\n<firstname>Carl</firstname>\n<lastname>Williams</lastname>\n<isAuditor>Y</isAuditor>\n<address>Street3, Hudson Lane</address>\n<city>Reston</city>\n<state>Virginia</state>\n<zipCode>201301</zipCode>\n<country>USA</country>\n<phone1>987654321</phone1>\n<phoneExt1>53</phoneExt1>\n<phone2>9876543210</phone2>\n<phoneExt2>63</phoneExt2>\n<fax>Fax</fax>\n<mobile>9876543210</mobile>\n<email>example@franconnect.com</email>\n<sendNotification>Y</sendNotification>\n<loginUserIp>192.169.1.214</loginUserIp>\n><isDaylight>Y</isDaylight>\n</adminUser>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Admin User Creation object",
                "required": true
            },
            "AdminRetrieveUserArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n<referenceId>3451843</referenceId>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Admin User Retrieval object",
                "required": true
            },
            "AdminUpdateUserArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<adminUser>\n<referenceId>3451843</referenceId>\n<userID>jamesv</userID>\n</adminUser>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Admin User Updation object",
                "required": true
            },
            "AdminDeleteUserArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/delete?module=admin&subModule=user&responseType=XML&xmlString=<fcRequest><adminUser><referenceId>3451843</referenceId><userID>jamesv</userID></adminUser></fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Admin User Deletion object",
                "required": true
            },
            "retrieveFieldDataArray": {
                "content": {
                    "application/xml": {
                        "example": "POST/<context-path>/rest/dataservices/retrieveFieldData?module=fs&subModule=lead&responseType=XML&fieldName=countyID&dependentFieldName=country&dependentFieldValue=USA",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/retrievefield"
                            },
                            "xml": {
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "FimCreateFranchiseeArray": {
                "content": {
                    "application/xml": {
                        "examples": {
                            "createFranchisee": {
                                "summary": "Create Franchise",
                                "value": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fimFranchisee>\n<status>Yes</status>\n<franchiseeName>West Collection</franchiseeName>\n<centerName>Franchise-100001</centerName>\n<areaID>EST</areaID>\n<division></division>\n<licenseNo>10354</licenseNo>\n<fbc></fbc>\n<openingDate>2019-06-13</openingDate>\n<storeTypeId>Default</storeTypeId>\n<address>C-08</address>\n<address2>Lane-08</address2>\n<city>New York City</city>\n<country>USA</country>\n<state>New York</state>\n<zipcode>201254</zipcode>\n<storePhone>9876543210</storePhone>\n<storePhoneExtn>12</storePhoneExtn>\n<storeFax></storeFax>\n<storeMobile></storeMobile>\n<storeEmail>example@franconnect.com</storeEmail>\n<storeWebsite>www.google.com</storeWebsite>\n<contactTitle>Mrs</contactTitle>\n<contactFirstName>Freddie</contactFirstName>\n<contactLastName>Louis</contactLastName>\n<phone1>9876543210</phone1>\n<phone1Extn>55</phone1Extn>\n<fax></fax>\n<mobile></mobile>\n<emailID></emailID>\n<versionID></versionID>\n<taxRateId></taxRateId>\n<entityDetail>Individual</entityDetail>\n<entityType>New</entityType>\n<fimCbEntityType></fimCbEntityType>\n<fimTtEntityName></fimTtEntityName>\n<fimTtTaxpayer></fimTtTaxpayer>\n<fimCbStateOfFormation>USA</fimCbStateOfFormation>\n<fimCbCountryOfFormation>New York</fimCbCountryOfFormation>\n<ownerType>New</ownerType>\n<ownerTitle>Mr.</ownerTitle>\n<firstName>Freddie</firstName>\n<lastName>Louis</lastName>\n<muidValue></muidValue>\n</fimFranchisee>\n</fcRequest>"
                            },
                            "createFranchiseeWithTerminatedEntity": {
                                "summary": "Create Franchise Using A Terminated Entity",
                                "value": "<fcRequest>\n<adminFranchisee>\n<status>No</status>\n<franchiseeName>SB001</franchiseeName>\n<areaID>V Region</areaID>\n<openingDate>2022-01-01</openingDate>\n<storeTypeId>Default</storeTypeId>\n<entityDetail>Entity</entityDetail>\n<entityType>Existing</entityType>\n<fimTtEntityName>SB Enterprise</fimTtEntityName>\n<ownerType>New</ownerType>\n<firstName>Sam</firstName>\n<lastName>DeGrass</lastName>\n</adminFranchisee>\n</fcRequest>\n"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Admin User Deletion object",
                "required": true
            },
            "FimRetrieveFranchiseeArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n<referenceId>557097219</referenceId>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Admin User Deletion object",
                "required": true
            },
            "FimUpdateFranchiseeArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fimFranchisee>\n<referenceId>1174579387</referenceId>\n<centerName>West Center</centerName>\n</fimFranchisee>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Admin User Deletion object",
                "required": true
            },
            "FimDeleteFranchiseeArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fimFranchisee>\n<referenceId>1174579387</referenceId>\n</fimFranchisee>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/AdminSubModule"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Admin User Deletion object",
                "required": true
            },
            "CreateCRMLeadArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest><cmLead><title>Mr.</title>\n<leadFirstName>Francis</leadFirstName>\n<leadLastName>Wagner</leadLastName>\n<companyName>Wagner Office Suites</companyName>\n<primaryContactMethod>Email</primaryContactMethod>\n<ownerTypeValue> CORP</ownerTypeValue>\n<franchiseeNo></franchiseeNo>\n<areaID></areaID>\n<divisionID>Division</divisionID>\n<address>Street 1</address>\n<city>Saint Louis</city>\n<country>USA</country>\n<zipcode>63132</zipcode>\n<state>Missouri</state>\n<phoneNumbers>(314) 570-1234</phoneNumbers>\n<extn>011</extn>\n<faxNumbers> </faxNumbers>\n<mobileNumbers>9876543210</mobileNumbers>\n<emailIds>example@franconnect.com</emailIds>\n<alternateEmail> </alternateEmail>\n<suffix></suffix>\n<position></position>\n<birthdate></birthdate>\n<anniversarydate></anniversarydate>\n<cmLeadTypeID></cmLeadTypeID>\n<cmRatingID>Cold</cmRatingID>\n<cmSource2ID>Advertisement</cmSource2ID>\n<cmSource3ID>Newspaper</cmSource3ID>\n<cmSource1ID>Email</cmSource1ID>\n<bestTimeToContact></bestTimeToContact>\n<comments>Welcome to FC System</comments>\n<serviceID>Product/Service Update, Announcements</serviceID>\n</cmLead>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "RetrieveCRMLeadArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n<referenceId>926951689</referenceId>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "UpdateCRMLeadArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmLead>\n<referenceId>436155293</referenceId>\n<leadFirstName>Philip</leadFirstName></cmLead>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "DeleteCRMLeadArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmLead>\n<referenceId>1485413158</referenceId>\n</cmLead>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "CreateCRMContactArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmContact>\n<contactType>Contacts</contactType>\n<title>Mr.</title>\n<contactFirstName>Amanda</contactFirstName>\n<contactLastName>Jacques</contactLastName>\n<suffix></suffix>\n<position></position>\n<address>PO Box 1022</address>\n<city>Seattle</city>\n<country>USA</country>\n<zipcode>98104</zipcode>\n<state>Washington</state>\n<primaryContactMethod>Email</primaryContactMethod>\n<bestTimeToContact>Morning</bestTimeToContact>\n<phoneNumbers>12121</phoneNumbers>\n<extn>121</extn>\n<faxNumbers></faxNumbers>\n<mobileNumbers>9876543210</mobileNumbers>\n<emailIds>example@franconnect.com</emailIds>\n<alternateEmail></alternateEmail>\n<birthdate></birthdate>\n<sendAutomaticMail>Yes</sendAutomaticMail>\n<anniversarydate></anniversarydate>\n<cmSource1ID>Email</cmSource1ID>\n<cmRatingID></cmRatingID>\n<cmSource2ID>Advertisement</cmSource2ID>\n<cmSource3ID>Magazine</cmSource3ID>\n<ownerTypeValue>CORP</ownerTypeValue>\n<contactOwnerID>David Henry</contactOwnerID>\n<franchiseeNo></franchiseeNo>\n<areaID></areaID>\n<divisionID>Division</divisionID>\n<comments>This is new contact</comments>\n<accountName>Account 01</accountName>\n<facebook></facebook>\n<twitter></twitter>\n<Youtube></Youtube>\n<linkedin></linkedin>\n<google></google>\n<serviceID>Product/Service Update, Announcements</serviceID>\n</cmContact>\n<cmContact>\n</cmContact>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "RetrieveCRMContactArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n<referenceId>976934640</referenceId>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "UpdateCRMContactArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmContact>\n<referenceId>976934640</referenceId>\n<contactFirstName>William</contactFirstName></cmContact>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "DeleteCRMContactArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmContact>\n<referenceId>344545</referenceId>\n</cmContact>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "CreateCRMAccountArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmAccount>\n<accountName>SharpMinds</accountName>\n<accountType>B2B</accountType>\n<type>Corporate</type>\n<areaID></areaID>\n<franchiseeNo></franchiseeNo>\n<isParent>Yes</isParent>\n<parentAccountID></parentAccountID>\n<address>Park Avenue</address>\n<city>Reston</city>\n<country>USA</country>\n<zipcode>20139</zipcode>\n<state>Virginia</state>\n<phoneNumbers>9876543210</phoneNumbers>\n<extn>02</extn>\n<faxNumbers></faxNumbers>\n<mobileNumbers>9876543210</mobileNumbers>\n<emailIds>example@franconnect.com</emailIds>\n<noOfEmployee>200</noOfEmployee>\n<industry></industry>\n<sicCode></sicCode>\n<servicesProvided></servicesProvided>\n<stockSymbol></stockSymbol>\n<revenue>5000</revenue>\n<website></website>\n<comments></comments>\n</cmAccount>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "RetrieveCRMAccountArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n<referenceId>1778692554</referenceId>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "UpdateCRMAccountArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmAccount>\n<referenceId>1355475032</referenceId>\n<city>Rockford</city>\n</cmAccount>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "DeleteCRMAccountArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmAccount>\n<referenceId>1355475032</referenceId>\n</cmAccount>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "CreateCRMTransactionArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmTransaction>\n<parentReferenceId>9000002</parentReferenceId>\n<invoiceDate>02/16/2016</invoiceDate>\n<isReported>Yes</isReported>\n<cmtmsTransactionDetails>\n<category></category>\n<productID>Product 2</productID>\n<quantity>10</quantity>\n<rate>10</rate>\n<amount>100</amount>\n<description>This is the default service</description>\n</cmtmsTransactionDetails>\n<cmtmsTransactionDetails>\n</cmtmsTransactionDetails>\n</cmTransaction>\n<cmTransaction>\n</cmTransaction>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "RetrieveCRMTransactionArray": {
                "content": {
                    "application/xml": {
                        "example": "<fcRequest>\n<filter>\n<referenceId>263507742</referenceId>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "UpdateCRMTransactionArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmTransaction>\n<referenceId>39614076</referenceId>\n<invoiceDate>02/16/2016</invoiceDate>\n<isReported>No</isReported>\n<cmtmsTransactionDetails>\n<referenceId>464080221</referenceId>\n<productID>Product 2</productID>\n<quantity>10</quantity>\n<rate>10</rate>\n<amount>100 </amount>\n<description>This is the default service</description>\n</cmtmsTransactionDetails></cmTransaction>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "DeleteCRMTransactionArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmTransaction>\n<referenceId>39614076</referenceId>\n</cmTransaction>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "CreateCRMOpportunityArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fcRequest>\n<cmOpportunity>\n<opportunityName>Leah opportunity</opportunityName>\n<oppAccountID>1734810351</oppAccountID>\n<opportunityOwner>Sandy</opportunityOwner>\n<stage>Prospecting</stage>\n<opportunityType>New Business</opportunityType>\n<probability>10</probability>\n<opportunitySource>Advertisement</opportunitySource>\n<salesAmount>1000</salesAmount>\n</cmOpportunity>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "RetrieveCRMOpportunityArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n<referenceId>1896975234</referenceId>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "UpdateCRMOpportunityArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmOpportunity>\n<referenceId>913876584</referenceId>\n<opportunityName>Leah opportunity</opportunityName>\n<oppAccountID>Account 1</oppAccountID>\n<oppContactID>Contact 2</oppContactID>\n<opportunityOwner>Sandy</opportunityOwner>\n<stage>Prospecting</stage>\n<opportunityType>New Business</opportunityType>\n<probability>10</probability>\n<opportunitySource>Advertisement</opportunitySource>\n<closerDate>2017-01-25</closerDate>\n<salesAmount>1000</salesAmount>\n</cmOpportunity>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "DeleteCRMOpportunityArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmOpportunity>\n<referenceId>2036557576</referenceId>\n</ cmOpportunity>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "FSCreateTaskArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fsTask>\n<parentReferenceId>166110471</parentReferenceId>\n<assignmentTo>OWNER</assignmentTo>\n<assignTo></assignTo>\n<status>Not Started</status>\n<taskType>Default</taskType>\n<subject>Task 1</subject>\n<timelessTask>N</timelessTask>\n<priority>Low</priority>\n<date>2020-03-02</date>\n<calendarTask>Y</calendarTask>\n<startTime>10:00Z</startTime>\n<endTime>11:00Z</endTime>\n<comments></comments>\n<schduleTime>15 Minutes Prior</schduleTime>\n<taskEmailReminder>Y</taskEmailReminder>\n<reminderDate>2017-11-02</reminderDate>\n<reminderTime>01:00 PM</reminderTime>\n</fsTask>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "FSRetrieveTaskArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n<referenceId>1696458950</referenceId>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "FSUpdateTaskArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n <fsTask>\n<referenceId>1442059186</referenceId>\n<priority>Low</priority>\n</fsTask>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "FSDeleteTaskArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fsTask>\n<referenceId>1661907438</referenceId>\n</fsTask>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "CMCreateMailArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmMail><parentReferenceId>2016620620</parentReferenceId>\n<subject>Mail Discussions</subject>\n<mailText>Mail for general discussion</mailText>\n<mailFrom>noreply@franconnect.com</mailFrom>\n</cmMail>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "CMRetrieveMailArray": {
                "content": {
                    "application/xml": {
                        "example": "<fcRequest>\n<filter>\n<referenceId>329773998</referenceId>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "CMDeleteMailArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<cmMail><referenceId>1661907438</referenceId>\n</cmMail>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "CMRetrieveSMSArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n<cmContactSMS>\n<smsSentFrom>2017-10-05</smsSentFrom>\n</cmContactSMS>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "CMRetrieveCampaignEmailArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n <referenceId>1970068020</referenceId>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            },
            "CMRetrieveCampaignSMSArray": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n<contactFirstName>John</contactFirstName>\n<contactLastName>James</contactLastName>\n</filter>\n</fcRequest>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/FSCreateLead"
                            },
                            "xml": {
                                "name": "fcRequest",
                                "wrapped": true
                            }
                        }
                    }
                },
                "description": "Lead Creation object",
                "required": true
            }
        },
        "responses": {
            "ModuleResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>41141160</responseId>\n<responseData>\n<fcRequest>\n<cm>CRM</cm>\n<fim>Info Mgr</fim>\n<fs>Sales</fs>\n<regional>Regional</regional>\n</fcRequest>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "AdminSubModuleResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1527878235</responseId>\n<responseData><fcRequest>\n<franchisee>Franchisee</franchisee>\n<user>User</user>\n</fcRequest>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "SalesSubModuleResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1449885839</responseId>\n<responseData>\n<fcRequest>\n<addlContact>Co-Applicants</addlContact>\n<call>Call</call>\n<compliance>Compliance</compliance>\n<lead>Primary Info</lead>\n<mail>Emails</mail>\n<personalProfile>Personal Profile</personalProfile>\n<qualification>Qualification Details</qualification>\n<realEstate>Real Estate</realEstate>\n<remark>Remark</remark>\n<statusChangeHistory>Status Change History</statusChangeHistory>\n<task>Task</task>\n<visit>Visit</visit>\n</fcRequest>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "InfoMgrSubModuleResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1449885839</responseId>\n<responseData>\n<fcRequest>\n<agreement>Agreement</agreement>\n<auditFieldHistory>Field Audit History</auditFieldHistory>\n<auditFormHistory>Form Audit History</auditFormHistory>\n<call>Call</call>\n<centerInfo>Center Info</centerInfo>\n<complaint>Customer Complaints</complaint>\n<contractSigning>Contract Signing</contractSigning>\n<employee>Employees</employee>\n<entity>Entity Details</entity>\n<event>Events</event>\n<financial>Financial</financial>\n<franchisee>Franchisee</franchisee>\n<guarantor>Guarantors</guarantor>\n<insurance>Insurance</insurance>\n<legalViolation>Legal Violation</legalViolation>\n<lender>Lenders</lender>\n<mail>External Mail</mail>\n<marketing>Marketing</marketing>\n<mysteryReview>Mystery Review</mysteryReview>\n<outlookMail>Outlook Emails</outlookMail>\n<owner>Owners</owner>\n<qa>QA History</qa>\n<realEstate>Real Estate</realEstate>\n<remark>Remark</remark>\n<renewal>Renewal</renewal>\n<task>Task</task>\n<termination>Default and Termination</termination>\n<territory>Territory</territory>\n<training>Training</training>\n</fcRequest>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CRMSubModuleResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>165173566</responseId>\n<responseData>\n<fcRequest>\n<account>Account Info</account>\n<accountRemark>Account - Remarks</accountRemark>\n<call>CM - Call</call>\n<category>Product Category</category>\n<contact>Primary Info</contact>\n<contactStatusChangeHistory>Contact StatusChangeHistory</contactStatusChangeHistory>\n<lead>Lead Info</lead>\n<leadCall>Lead - Call</leadCall>\n<leadMail>Lead Email</leadMail><leadOutlookMail>Lead Outlook Emails</leadOutlookMail>\n<leadRemark>Lead - Remarks</leadRemark>\n<leadStatusChangeHistory>Lead Status Change History</leadStatusChangeHistory>\n<leadTask>Lead - Task</leadTask>\n<leadToContactConversion>Lead Conversion</leadToContactConversion>\n<mail>Email</mail>\n<opportunity>Opportunity Information</opportunity>\n<opportunityCall>Opportunity - Call</opportunityCall>\n<opportunityRemark>Opportunity - Remarks</opportunityRemark>\n<opportunityTask>Opportunity - Task</opportunityTask>\n<otherAddress>Other Address</otherAddress>\n<outlookMail>Outlook Emails</outlookMail>\n<product>Product/Service</product>\n<remark>CM - Remarks</remark>\n<stageChangeHistory>Opportunity Stage Change History</stageChangeHistory>\n<task>CM - Task</task>\n<transaction>Transaction</transaction>\n</fcRequest>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "RegionalSubModuleResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='UTF-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>62712764</responseId>\n<responseData>\n<fcRequest>\n<agreement>Agreement</agreement>\n<areaInfo>Area Info</areaInfo>\n<areaOwner>Area Owner</areaOwner>\n<contractSigning>Contract Signing</contractSigning>\n<entityDetails>Entity Details</entityDetails>\n<events>Events</events>\n<financial>Financial</financial>\n<guarantors>Guarantors</guarantors>\n<insurance>Insurance</insurance>\n<legalViolation>Legal Violation</legalViolation>\n<lenders>Lenders</lenders>\n<marketing>Marketing</marketing>\n<mysteryReview>Mystery Review</mysteryReview>\n<otherAddress>Other Addresses</otherAddress>\n<qaHistory>QA History</qaHistory>\n<realEstate>Real Estate</realEstate>\n<renewal>Renewal</renewal>\n<territory>Territory</territory>\n<training>Training</training>\n</fcRequest>\n</responseData>\n</fcResponse>\n"
                    }
                }
            },
            "AdminCreateQueryResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1769195025</responseId>\n<responseData>\n<fcRequest>\n<adminUser>\n<userID>User ID(Mandatory)</userID>\n<password>Password(Mandatory)</password>\n<userLevel>User Level(Mandatory)(Corporate)</userLevel>\n<timezone>Time Zone(Mandatory)</timezone>\n<type>User Type(Normal/Guest) (Default 'Normal')</type>\n<expirationTime>Expiration Time(NA for userType 'Normal')(7/14/21/28 for userType 'Guest')</expirationTime>\n<role>Role(Mandatory)</role>\n<jobTitle>Job Title</jobTitle>\n<firstname>First Name(Mandatory)</firstname>\n<lastname>Last Name(Mandatory)</lastname>\n<isAuditor>Consultant?(Y/N)</isAuditor>\n<address>Address</address>\n<city>City(Mandatory)</city>\n<state>State(Mandatory)</state>\n<zipCode>Zip/Postal Code</zipCode>\n<country>Country</country>\n<phone1>Phone1(Mandatory)</phone1>\n<phoneExt1>Phone1 Extension</phoneExt1>\n<phone2>Phone2</phone2>\n<phoneExt2>Phone2 Extension</phoneExt2>\n<fax>Fax</fax>\n<mobile>Mobile</mobile>\n<email>Email(Mandatory)</email>\n<sendNotification>Send Notification(Y/N)</sendNotification>\n<loginUserIp>IP Address</loginUserIp>\n<isDaylight>Allow DST(Y/N)</isDaylight>\n</adminUser>\n</fcRequest>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "AdminRetrieveQueryResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>656966018</responseId>\n<responseData>\n<fcRequest>\n<filter>\n<referenceId>Comma separated User referenceId.</referenceId>\n<userID>User Login ID</userID>\n<userLevel>User Type(zero or more repetition)</userLevel>\n<firstname>User First Name</firstname>\n<lastname>User Last Name</lastname>\n<creationDateFrom>User Creation Date From(YYYY-MM-DD)</creationDateFrom>\n<creationDateTo>User Creation Date To(YYYY-MM-DD)</creationDateTo>\n<createdBy>User Created By (zero or more repetition)</createdBy>\n<createdByReferenceId>User Created By referenceId(zero or more repetition)</crzeatedByReferenceId>\n<lastModifiedBy>User Last Modified By(zero or more repetition)</lastModifiedBy>\n<lastModifiedByReferenceId>User Last Modified By referenceId(zero or more repetition)</lastModifiedByReferenceId>\n<lastModifiedOnFrom>User Last Modified On From(YYYY-MM-DD)</lastModifiedOnFrom>\n<lastModifiedOnTo>User Last Modified On To(YYYY-MM-DD)</lastModifiedOnTo>\n</filter>\n</fcRequest>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "AdminUpdateQueryResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>884994840</responseId>\n<responseData>\n<fcRequest>\n<adminUser>\n<referenceId>Module referenceId(Mandatory)</referenceId>\n<userID>User ID(Mandatory)</userID>\n<password>Password(Mandatory)</password>\n<timezone>Time Zone(Mandatory)</timezone>\n<type>User Type(Normal/Guest)(Default 'Normal')</type>\n<expirationTime>Expiration Time(NA for userType 'Normal')(7/14/21/28 for userType 'Guest')</expirationTime>\n<role>Role(Mandatory)</role>\n<jobTitle>Job Title</jobTitle>\n<firstname>First Name(Mandatory)</firstname>\n<lastname>Last Name(Mandatory)</lastname>\n<isAuditor>Consultant?(Y/N)</isAuditor>\n<address>Address</address>\n<city>City(Mandatory)</city>\n<state>State(Mandatory)</state>\n<zipCode>Zip/Postal Code</zipCode>\n<country>Country</country>\n<phone1>Phone1(Mandatory)</phone1>\n<phoneExt1>Phone1 Extension</phoneExt1>\n<phone2>Phone2</phone2>\n<phoneExt2>Phone2 Extension</phoneExt2>\n<fax>Fax</fax>\n<mobile>Mobile</mobile>\n<email>Email(Mandatory)</email>\n<loginUserIp>IP Address</loginUserIp>\n<isDaylight>Allow DST(Y/N)</isDaylight>\n</adminUser>\n</fcRequest>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "AdminDeleteQueryResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1388026969</responseId>\n<responseData>\n<fcRequest>\n<adminUser>\n<referenceId>Selected Module/SubModule referenceId(Mandatory)</referenceId>\n</adminUser>\n</fcRequest>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "AdminCreateUserResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>450450221</responseId>\n<responseData>\n<adminUser>\n<status>Success</status>\n<referenceId>572479316</referenceId>\n</adminUser>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "AdminRetrieveUserResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>780503221</responseId>\n<responseData>\n<adminUser>\n<referenceId>1292712032</referenceId>\n<userID>adamsandlars1</userID>\n<userLevel>Franchise Users</userLevel>\n<firstname>Adam</firstname>\n<lastname>Sandlars</lastname>\n<role>FU of other brand</role>\n<expirationTime>Not Applicable</expirationTime>\n<type>Normal User</type>\n<timeZone>GMT -05:00 US/Canada/Eastern</timeZone>\n<franUserType>Employee</franUserType>\n<employeeNo/>\n<smsAddress/>\n<zoneAreaNo/>\n<division/>\n<creationDate>2021-04-08T15:14Z</creationDate>\n<createdBy/>\n<createdByReferenceId/>\n<lastModifiedBy>FranConnect Administrator</lastModifiedBy>\n<lastModifiedByReferenceId>1</lastModifiedByReferenceId>\n<lastModifiedOn>2022-05-12T07:32Z</lastModifiedOn><personalDetails>\n<franchiseeReferenceId>651482134</franchiseeReferenceId>\n<franchiseeName>1032-1</franchiseeName>\n<address>3489 Sandy Spring Road</address>\n<city>Sandy Spring</city>\n<state>Georgia</state>\n<country>USA</country>\n<zipcode>20191</zipcode>\n<phone1>(509) 409-3854</phone1>\n<phone1Extn/>\n<fax>(654) 879-5107</fax>\n<mobile/>\n<emailID>test@franqa.net</emailID>\n<jobTitle/>\n<comments/>\n<phone2/>\n<phone2Extn/>\n<language>English</language>\n<loginUserIp/>\n<isDaylight>Y</isDaylight>\n<isAuditor>N</isAuditor>\n<salutation>-1</salutation>\n<canAddEmployee>N</canAddEmployee>\n<unsubscribeCampaign>N</unsubscribeCampaign>\n<birthDate/>\n<muidValue/>\n<region/>\n<visibleToStore>N</visibleToStore>\n<assignFutureChecklist>N</assignFutureChecklist>\n</personalDetails>\n</adminUser>\n</responseData>\n</fcResponse>\n"
                    }
                },
                "description": "Successful"
            },
            "AdminUpdateUserResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1042377380</responseId>\n<responseData>\n<adminUser>\n<status>Success</status>\n<referenceId>3451843</referenceId>\n</adminUser>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "ActivateUserResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1483644608</responseId>\n<responseData>\n<adminUser>\n<status>Success</status>\n<referenceId>20217750</referenceId>\n</adminUser>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "DeactivateUserResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1483644608</responseId>\n<responseData>\n<adminUser>\n<status>Success</status>\n<referenceId>20217750</referenceId>\n</adminUser>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "AdminDeleteUserResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1348340529</responseId>\n<responseData>\n<adminUser>\n<status>Success</status>\n<referenceId>3451843</referenceId>\n</adminUser>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CreateDivisionResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcResponse><responseStatus>Success</responseStatus>\n<responseId>1815852361</responseId>\n<responseData>\n<adminDivision>\n<status>Success</status>\n<referenceId>1979772448</referenceId>\n</adminDivision>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "RetrieveDivisionResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>375515778</responseId>\n<responseData>\n<adminDivision>\n<referenceId>787078813</referenceId>\n<divisionName>Ace</divisionName>\n<createdDate>2021-12-22</createdDate>\n<lastUpdatedOn>2021-12-22T09:38Z</lastUpdatedOn>\n<createdBy>WebService</createdBy>\n<createdByReferenceId>2</createdByReferenceId>\n</adminDivision>\n<adminDivision>\n<referenceId>1979772448</referenceId>\n<divisionName>Aqua</divisionName>\n<createdDate>2021-12-22</createdDate>\n<lastUpdatedOn>2021-12-22T10:18Z</lastUpdatedOn>\n<createdBy>WebService</createdBy>\n<createdByReferenceId>2</createdByReferenceId>\n</adminDivision>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "UpdateDivisionResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1048848929</responseId>\n<responseData>\n<adminDivision>\n<status>Success</status>\n<referenceId>787078813</referenceId>\n</adminDivision>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "RetrieveAreaRegionResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1578150449</responseId>\n<responseData>\n<adminAreaRegion>\n<referenceId>704429734</referenceId>\n<areaName>EST</areaName>\n<areaType>State(Domestic)</areaType>\n<lastUpdatedOn>2021-07-07T12:05Z</lastUpdatedOn>\n<areaCounties/>\n<areaZipCodes/>\n<areaStates>\nCalifornia,Colorado,Connecticut,Delaware,DistrictofColumbia,Florida,Georgia,Guam,Hawaii,Idaho,Illinois,Indiana,Iowa,Kansas,Kentucky,\nLouisiana,Maine,Maryland,Massachusetts,Michigan,Minnesota,Mississippi,Missouri,Montana,Nebraska,Nevada,NewHampshire,NewJersey,New\nMexico,NewYork,NorthCarolina,NorthDakota,Ohio,Oklahoma,Oregon,Pennsylvania,PuertoRico,RhodeIsland,SouthCarolina,SouthDakota,\nTennessee,Texas,Utah,Vermont,VirginIslands,Virginia,Washington,WestVirginia,Wisconsin,Wyoming\n</areaStates>\n<areaCountries>USA</areaCountries>\n</adminAreaRegion>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CreateAreaRegionTabResp": {
                "content": {
                    "application/xml": {
                            "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1205701239</responseId>\n<responseData>\n<regionalAreaInfo>\n<status>Success</status>\n<referenceId>1375193751</referenceId>\n</regionalAreaInfo>\n</responseData>\n</fcResponse>\n"
                        }
                    },
                "description": "Successful"
            },
            "RetrieveAreaRegionTabResp": {
                "content": {
                    "application/xml": {
                        "examples":{
                            "retrieveAreaRegion": {
                                "summary": "Retrieve Area/Region",
                                "value": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>53162373</responseId>\n<responseData>\n<adminAreaRegion>\n<referenceId>130544557</referenceId>\n<areaName>V Region</areaName>\n<regionalAreaInfo>\n<referenceId>1375193751</referenceId>\n<licenseType>New License</licenseType>\n<agreementType>Area Franchisee</agreementType>\n<approvedDate/>\n<initialFee/>\n<effectiveDate>2022-03-01</effectiveDate>\n<expirationDate>2023-03-01</expirationDate>\n<consecutive/>\n<address>41C, Clinton Street</address>\n<city>Iowa City</city>\n<country>USA</country>\n<state>Iowa</state>\n<zipCode/>\n<phone/>\n<extn/>\n<fax/>\n<mobile/>\n<email>test@gmail.com</email>\n<transferFee/>\n<renewalFee/>\n<renewalOptions/>\n<initialFeePercentage/>\n<operatingFeePercentage/>\n<transferFeePercentage/>\n<renewalFeePercentage/>\n<notes/>\n</regionalAreaInfo>\n</adminAreaRegion>\n</responseData>\n</fcResponse>\n"
                            },
                            "retrieveEntityOfRegional":{
                                "summary": "Retrieve Entities Associated With Area/Region",
                                "value": "<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>2060013456</responseId>\n<responseData>\n<adminAreaRegion>\n<referenceId>130544557</referenceId>\n<areaName>Midwest</areaName>\n<regionalEntityDetails>\n<referenceId>1366929485</referenceId>\n<fimTtEntityName>SCT LLC</fimTtEntityName>\n<clientEntityID/>\n<fimEntityDetail0>USA </fimEntityDetail0>\n<fimCbCountryOfFormation>USA</fimCbCountryOfFormation>\n<fimCbStateOfFormation/>\n<fimDdDateOfFormation/>\n<fimTtTaxpayer/>\n<fimCbEntityType/>\n<fimCbOtherEntityType/>\n<fimEntityDetailDoc0/>\n<fimEntityDetailDoc1/>\n</regionalEntityDetails>\n<regionalEntityDetails>\n<referenceId>2064190700</referenceId>\n<fimTtEntityName>SB Corp.</fimTtEntityName>\n<clientEntityID>SB-prise-01</clientEntityID>\n<fimCbCountryOfFormation>USA</fimCbCountryOfFormation>\n<fimCbStateOfFormation>California</fimCbStateOfFormation>\n<fimDdDateOfFormation/>\n<fimTtTaxpayer/>\n<fimCbEntityType/>\n<fimCbOtherEntityType/>\n<fimEntityDetailDoc0/>\n<fimEntityDetailDoc1/>\n</regionalEntityDetails>\n<regionalEntityDetails>\n<referenceId>1451658464</referenceId>\n<fimTtEntityName>Sample LLC</fimTtEntityName>\n<clientEntityID>SBLLC01</clientEntityID>\n<fimEntityDetail0>USA </fimEntityDetail0>\n<fimCbCountryOfFormation>USA</fimCbCountryOfFormation>\n<fimCbStateOfFormation/>\n<fimDdDateOfFormation/>\n<fimTtTaxpayer/>\n<fimCbEntityType/>\n<fimCbOtherEntityType/>\n<fimEntityDetailDoc0/>\n<fimEntityDetailDoc1/>\n</regionalEntityDetails>\n</adminAreaRegion>\n</responseData>\n</fcResponse>\n"
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "UpdateAreaRegionTabResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1838934160</responseId>\n<responseData>\n<regionalAreaInfo>\n<status>Success</status>\n<referenceId>1375193751</referenceId>\n</regionalAreaInfo>\n</responseData>\n</fcResponse>\n"
                    }
                },
                "description": "Successful"
            },
            "DeleteAreaRegionTabResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>205424275</responseId>\n<responseData>\n<regionalAreaInfo>\n<status>Success</status>\n<referenceId>1375193751</referenceId>\n</regionalAreaInfo>\n</responseData>\n</fcResponse>\n"
                    }
                },
                "description": "Successful"
            },
            "RetrieveMultiUnitOwnerResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xmlversion='1.0'encoding='utf-8'?>\n<responseData>\n<adminMultiUnit>\n<referenceId>302000001</referenceId>\n<firstName>Sam</firstName>\n<lastName>Grasso</lastName>\n<muidValue>MUID_0074</muidValue>\n<franchiseeReferenceId>\n190000001,190000002,190000003,190000004,190000010,190000062,190000551,852169252</franchiseeReferenceId>\n<franchiseeName>0001,0002,0004,0005,0013,0067,0582,1038</franchiseeName>\n</adminMultiUnit>\n</responseData>"
                    }
                },
                "description": "Successful"
            },
            "FSCreateLeadResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1313140254</responseId>\n<responseData>\n<fsLead>\n<status>Success</status>\n<referenceId>1440427898</referenceId>\n</fsLead>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "FSRetrieveLeadResp": {
                "content": {
                    "application/xml": {
                        "examples": {
                            "normalLead": {
                                "summary": "Example: Retrieve Normal Lead",
                                "value": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1396292204</responseId>\n<responseData>\n<fsLead>\n<referenceId>1440427898</referenceId>\n<requestDate>2020-05-13T08:08Z</requestDate>\n<salutation>Mr.</salutation>\n<firstName>Adam</firstName>\n<lastName>Smith</lastName>\n<address>100 Main St</address>\n<address2></address2>\n<city>Seattle</city>\n<country>USA</country>\n <stateID>Washington</stateID>\n<zip>98102</zip>\n<countyID>Adams</countyID>\n<primaryPhoneToCall>Mobile</primaryPhoneToCall>\n <bestTimeToContact></bestTimeToContact>\n<phone></phone>\n<phoneExt></phoneExt>\n<homePhone></homePhone>\n<homePhoneExt></homePhoneExt>\n<fax></fax>\n<mobile>9876543210</mobile>\n<emailID>example@franconnect.com</emailID>\n<companyName></companyName>\n<comments></comments>\n<leadStatusID>New Lead</leadStatusID>\n<leadOwnerID>Eriberto Crooks</leadOwnerID>\n<leadRatingID>Warm</leadRatingID>\n<leadKilledReason></leadKilledReason>\n<leadKilledReasonComment></leadKilledReasonComment>\n<leadSource2ID>Advertisement</leadSource2ID>\n<leadSource3ID>Magazine</leadSource3ID>\n<otherLeadSourceDetail></otherLeadSourceDetail>\n<marketingCodeId></marketingCodeId>\n<liquidCapitalMin></liquidCapitalMin>\n<liquidCapitalMax></liquidCapitalMax>\n<investTimeframe></investTimeframe>\n<background></background>\n<sourceOfFunding></sourceOfFunding>\n<nextCallDate></nextCallDate>\n<noOfUnitReq></noOfUnitReq>\n<franchiseAwarded></franchiseAwarded>\n<noOfFieldSold></noOfFieldSold>\n<dateOfOpen></dateOfOpen>\n<statusChangeDate></statusChangeDate>\n<webSiteLead></webSiteLead>\n<forecastClosureDate></forecastClosureDate>\n<probability></probability>\n<forecastRating></forecastRating>\n<forecastRevenue></forecastRevenue>\n<coApplicantRelationshipID></coApplicantRelationshipID>\n<ipAddress></ipAddress>\n<browserType></browserType>\n<locationId1></locationId1>\n<locationId1b></locationId1b>\n<locationId2></locationId2>\n<preferredCountry1></preferredCountry1>\n<preferredCity1></preferredCity1>\n<preferredStateId1></preferredStateId1>\n<preferredCountry2></preferredCountry2>\n<preferredStateId2></preferredStateId2>\n<preferredCity2></preferredCity2>\n<lastUpdate>2020-05-13T08:08Z</lastUpdate>\n<lastAttended></lastAttended>\n<bounceEmailStatus>No</bounceEmailStatus>\n<spamEmailStatus>No</spamEmailStatus>\n<bounceReason></bounceReason>\n<unsubscribeReason></unsubscribeReason>\n<unsubscribeReasonDetail></unsubscribeReasonDetail>\n<smartScheduleAppointmentDate>2020-05-13T08:08Z</smartScheduleAppointmentDate>\n<_dob1672783918></_dob1672783918>\n<divisionReferenceId></divisionReferenceId>\n<division></division>\n<leadOwnerReferenceId>298353430</leadOwnerReferenceId>\n<serviceID>Product/Service Update,Newsletters,Announcements</serviceID>\n<unsubscribe>Opted-Out</unsubscribe>\n<smsUnsubscribe>Opted-In</smsUnsubscribe>\n</fsLead>\n</responseData>\n</fcResponse>"
                            },
                            "mergedLead": {
                                "summary": "Example: Retrieve Merged Lead",
                                "value": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n <responseStatus>Success</responseStatus>\n <responseId>450608743</responseId>\n <responseData>\n <fsLead>\n <referenceId>1157514788</referenceId>\n <requestDate>2022-11-25T17:20Z</requestDate>\n <salutation/>\n <firstName>Sam</firstName>\n <lastName>Smith</lastName>\n <address/>\n <address2/>\n <city>Alaska</city>\n <country>USA</country>\n <stateID>Alaska</stateID>\n <zip/>\n <countyID/>\n <primaryPhoneToCall/>\n <bestTimeToContact/>\n <phone/>\n <phoneExt/>\n <homePhone/>\n <homePhoneExt/>\n <fax/>\n <mobile/>\n <emailID>fcTestApi@testMail.com</emailID>\n <companyName/>\n <comments/>\n <unsubscribeReason/>\n <unsubscribeReasonDetail/>\n <leadStatusID>New Lead</leadStatusID>\n <leadOwnerID>Sansh Gupta</leadOwnerID>\n <leadRatingID/>\n <leadKilledReason/>\n <leadKilledReasonComment/>\n <leadSource2ID>Advertisement</leadSource2ID>\n <leadSource3ID>Magazine</leadSource3ID>\n <otherLeadSourceDetail/>\n <marketingCodeId/>\n <liquidCapitalMin/>\n <liquidCapitalMax/>\n <investTimeframe/>\n <background/>\n <sourceOfFunding/>\n <nextCallDate/>\n <noOfUnitReq/>\n <franchiseAwarded/>\n <noOfFieldSold/>\n <dateOfOpen/>\n <statusChangeDate/>\n <webSiteLead>No</webSiteLead>\n <forecastClosureDate/>\n <probability>50.00</probability>\n <forecastRating/>\n <forecastRevenue/>\n <coApplicantRelationshipID/>\n <ipAddress/>\n <browserType/>\n <brokerFirstName/>\n <brokerLastName/>\n <firstContacted>2022-11-28T14:15Z</firstContacted>\n <lastAttended>2022-11-29T09:58Z</lastAttended>\n <lastUpdate>2022-11-29T09:58Z</lastUpdate>\n <bounceEmailStatus>No</bounceEmailStatus>\n <spamEmailStatus>No</spamEmailStatus>\n <bounceReason/>\n <smartSchedulerAppointmentDate/>\n <mergedParentIds>791221161,1468156699</mergedParentIds>\n <divisionReferenceId/>\n <division/>\n <leadOwnerReferenceId>1628543175</leadOwnerReferenceId>\n <serviceID>\n Product/Service Update,Newsletters,Announcements,Webinars and Events,Offers,Others,Email Communications,New Custom \n </serviceID>\n <unsubscribe>Opted-In</unsubscribe>\n <smsUnsubscribe/>\n </fsLead>\n </responseData>\n </fcResponse>\n"
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "FSUpdateLeadResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1811406651</responseId>\n<responseData>\n<fsLead>\n<status>Success</status>\n<referenceId>1440427898</referenceId>\n</fsLead>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "FSDeleteLeadResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>876542787</responseId>\n<responseData>\n<fsLead>\n<status>Success</status>\n<referenceId>1440427898</referenceId>\n</fsLead>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "retrieveFieldDataResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>382399713</responseId>\n<responseData>\n<countyID>Abbeville</countyID>\n<countyID>Acadia Parish</countyID>\n<countyID>Ballard</countyID>\n<countyID>Baltimore</countyID>\n<countyID>Cambria</countyID>\n<countyID>Campbell</countyID>\n<countyID>Dallas</countyID>\n<countyID>Dane</countyID>\n<countyID>Eagle</countyID>\n<countyID>Edgefield</countyID>\n<countyID>Fairfield</countyID>\n<countyID>Florence</countyID>\n<countyID>Garfield</countyID>\n<countyID>Geneva</countyID>\n<countyID>Hampshire</countyID>\n<countyID>Hawaii</countyID>\n<countyID>Isle of Wight</countyID>\n<countyID>James City</countyID>\n<countyID>Kenedy</countyID>\n<countyID>La Crosse</countyID>\n<countyID>Madison</countyID>\n<countyID>Navajo</countyID>\n<countyID>Oakland</countyID>\n<countyID>Palo Alto</countyID>\n<countyID>Queens</countyID>\n<countyID>Republic</countyID>\n<countyID>Salt Lake</countyID>\n<countyID>Texas</countyID>\n<countyID>Union Parish</countyID>\n<countyID>Vermilion</countyID>\n<countyID>Walsh</countyID>\n<countyID>Yadkin</countyID>\n<countyID>Ziebach</countyID>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "FimCreateFranchiseeResp": {
                "content": {
                    "application/xml": {
                        "examples": {
                            "createFranchiseeResp": {
                                "summary": "Create Franchise Response",
                                "value": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>980752871</responseId>\n<responseData>\n<fimFranchisee>\n<status>Success</status>\n<referenceId>1665635279</referenceId>\n</fimFranchisee>\n</responseData>\n</fcResponse>"
                            },
                            "createFranchiseeWithTerminatedEntityResp": {
                                "summary": "Create Franchise Using A Terminated Entity Response",
                                "value": "<fcResponse>\n<responseStatus>Error</responseStatus>\n<responseId>1012053025</responseId>\n<responseData>\n<adminFranchisee>\n<status>Error</status>\n<error>\n<errorCode>400</errorCode>\n<errorDetails>Invalid mandatory field : fimTtEntityName</errorDetails>\n</error>\n<warning>\n<warningCode>216</warningCode>\n<warningDetails>\nMessage : Default value 'Y' is considered for storeEmail_includeInCampaignList, Default value 'Y' is considered for emailID_includeInCampaignList, Default value 'Y' is considered for legalNoticeEmail_includeInCampaignList\n</warningDetails>\n</warning>\n</adminFranchisee>\n</responseData>\n</fcResponse>\n"
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "FimRetrieveFranchiseeResp": {
                "content": {
                    "application/xml": {
                        "examples": {
                            "centerInfo": {
                                "summary": "Example: Center Info Tab Response",
                                "value": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1546252019</responseId>\n<responseData>\n<fimFranchisee>\n<referenceId>557097219</referenceId>\n<status>Corporate Locations</status>\n<franchiseeName>10001</franchiseeName>\n<centerName>Franchise-100001</centerName>\n<areaID>EST</areaID>\n<licenseNo>10354</licenseNo>\n<reportPeriodStartDate></reportPeriodStartDate>\n<fbc></fbc>\n        <openingDate>2019-06-13</openingDate>\n<storeStatus></storeStatus>\n  <storeTypeId>Default</storeTypeId>\n<address>39 HOLLANDBUSH CT.</address>\n<address2>8883 18 Ave</address2>\n<city>ST.PETERS</city>\n<country>USA</country>\n<state>New York</state>\n<zipcode>63304</zipcode>\n<storePhone>(866) 987-5432</storePhone>\n<storePhoneExtn>8669786</storePhoneExtn>\n<storeFax>(654) 987-5432</storeFax>\n     <storeMobile>(756) 984-5323</storeMobile>\n<storeEmail>example@franconnect.com</storeEmail>\n<storeWebsite>www.franconnect.com</storeWebsite>\n<contactTitle>Mr.</contactTitle>\n          <contactFirstName>Oliver</contactFirstName>\n          <contactLastName>Williams</contactLastName>\n<phone1>(654) 987-6543</phone1>\n<phone1Extn>5487954</phone1Extn>\n<fax>(654) 789-6543</fax>\n<mobile>(702) 987-6543</mobile>\n<emailID>example@franconnect.com</emailID>\n<franchiseeStatus>Active</franchiseeStatus>\n<division></division>\n<website>www.franconnect.com</website>\n<competitor></competitor>\n<serviceCategory></serviceCategory>\n<keyBusinessPerson></keyBusinessPerson>\n<commonBusinessName></commonBusinessName>\n<twitterSearch></twitterSearch>\n  <businessCategory></businessCategory>\n<description></description>\n<tagLine></tagLine>\n<altPhone></altPhone>\n<paymentType></paymentType>\n<businessType></businessType>\n<fimEntity>\n<referenceId></referenceId>\n<fimCbEntityType></fimCbEntityType>\n   <fimTtEntityName></fimTtEntityName>\n<fimTtTaxpayer></fimTtTaxpayer>\n<fimCbCountryOfFormation></fimCbCountryOfFormation>\n          <fimCbStateOfFormation></fimCbStateOfFormation>\n</fimEntity>\n  <fimOwner>\n<referenceId>1917033192</referenceId>\n<ownerTitle>Mr.</ownerTitle>\n<firstName>Sandy</firstName>\n<lastName>Nadia</lastName>\n<muidValue>MUID1</muidValue>\n</fimOwner>\n<socialURL>\n<referenceId></referenceId>\n<linkTitle></linkTitle>\n<linkUrl></linkUrl>\n</socialURL>\n<storeHours>\n<referenceId></referenceId>\n<operatingDay></operatingDay>\n<openingTime></openingTime>\n         <closingTime></closingTime>\n</storeHours>\n</fimFranchisee>\n</responseData>\n</fcResponse>"
                            },
                            "entityInfo": {
                                "summary": "Example: Entity Details Tab Response",
                                "value": "<!--This response showcases example of a unit related to an entity that is associated with multiple Area/Regions -->\n<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>605564084</responseId>\n<responseData>\n<fimCenterInfo>\n<referenceId>2144414430</referenceId>\n<franchiseeName>10001</franchiseeName>\n<fimEntity>\n<referenceId>1566270597</referenceId>\n<fimTtEntityName>Maester Alaska, LLC</fimTtEntityName>\n<clientEntityID>LLC-001</clientEntityID>\n<fimEntityDetail0/>\n<entityDetails_address>\n<referenceId>1119328174</referenceId>\n<address/>\n<city/>\n<country/>\n<state/>\n<zipcode/>\n<phoneNumbers/>\n<extn/>\n<faxNumbers/>\n<mobileNumbers/>\n<emailIds/>\n</entityDetails_address>\n<fimCbCountryOfFormation/>Australia<fimCbStateOfFormation/>\n<fimDdDateOfFormation/>\n<fimTtTaxpayer/>\n<fimCbEntityType/>\n<fimCbOtherEntityType/>\n<fimEntityAreaMapping>\n<referenceId>492</referenceId>\n<areaID>EST</areaID>\n</fimEntityAreaMapping>\n<fimEntityAreaMapping>\n<referenceId>493</referenceId>\n<areaID>CST</areaID>\n</fimEntityAreaMapping>\n<fimEntityAreaMapping>\n<referenceId>494</referenceId>\n<areaID>EMEA Updated</areaID>\n</fimEntityAreaMapping>\n<fimEntityLocationMapping>\n<referenceId>1566270597</referenceId>\n<storeOwnedPercentage/>\n<typeOfOwnership/>\n</fimEntityLocationMapping>\n</fimEntity>\n</fimCenterInfo>\n</responseData>\n</fcResponse>\n"
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "FimUpdateFranchiseeResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse><responseStatus>Success</responseStatus><responseId>1499992554</responseId><responseData><fimFranchisee><status>Success</status><referenceId>1174579387</referenceId></fimFranchisee></responseData></fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "FimDeleteFranchiseeResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n  <responseStatus>Error</responseStatus>\n<responseId>1624694868</responseId>\n<error>\n<errorCode>400</errorCode>\n<errorDetails>Request to delete Franchisee is not supported.</errorDetails>\n   </error>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "RetrieveFranchiseByIdResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "qamsa6.franconnectqa.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "unitId": "484283510",
                                    "unitName": "BDC-1001",
                                    "centerName": "BCD | Chicago Commercial",
                                    "createdOn": "2023-01-06 00:10:02",
                                    "address": {
                                        "streetAddress": "13865 Sunrise Valley Drive, Suite 150",
                                        "city": "Herndon",
                                        "country": {
                                            "id": "1",
                                            "name": "USA"
                                        },
                                        "state": {
                                            "id": "15",
                                            "name": "Colorado"
                                        },
                                        "zipcode": "20171"
                                    },
                                    "area": {
                                        "id": "388037787",
                                        "name": "Virginia"
                                    },
                                    "contactInfo": {
                                        "phoneNo": "9166666666",
                                        "mobileNo": "",
                                        "emailId": "",
                                        "extension": ""
                                    },
                                    "legalNoticeDetails": {
                                        "address": {
                                            "streetAddress": "",
                                            "city": "",
                                            "zipcode": ""
                                        }
                                    },
                                    "centerContactDetails": {},
                                    "license": {},
                                    "customFields": [
                                        {
                                            "fieldDisplayName": "ABN",
                                            "fieldName": "_ABN_123741027",
                                            "fieldValue": "7645-B"
                                        },
                                        {
                                            "fieldDisplayName": "VAT Tax ID",
                                            "fieldName": "_VAT_TAX_ID_1020207793",
                                            "fieldValue": "INB1238100"
                                        }
                                    ],
                                    "storeType": {
                                        "id": "1",
                                        "value": "Default"
                                    },
                                    "storeOpeningDate": "2022-11-26",
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/484283510"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "CMCreateLeadResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>727907439</responseId>\n<responseData>\n<cmLead>\n<status>Success</status>\n<referenceId>951568372</referenceId>\n</cmLead>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMRetrieveLeadResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n    <responseStatus>Success</responseStatus>\n<responseId>761787385</responseId>\n<responseData>\n<cmLead>\n<referenceId>926951689</referenceId>\n<title>Mr.</title>\n<cmLeadStatusID>Contacted</cmLeadStatusID>\n<leadAddDate>2019-09-05T04:00Z</leadAddDate>\n<leadFirstName>Mcbride</leadFirstName>\n<leadLastName>Henry</leadLastName>\n<companyName>Henry Office Suites</companyName>\n    <primaryContactMethod>Email</primaryContactMethod>\n<franchiseeNo></franchiseeNo>\n<divisionID></divisionID>\n<leadModifyDate></leadModifyDate>\n<address>Street 1</address>\n<city>Saint Louis</city>\n<country>USA</country>\n<zipcode>63132</zipcode>\n<state>Missouri</state>\n<phoneNumbers>(314) 987-8568</phoneNumbers>\n    <extn>011</extn>\n<faxNumbers></faxNumbers>\n<mobileNumbers>(989) 898-9898</mobileNumbers>\n<emailIds>example@franconnect.com</emailIds>\n<alternateEmail></alternateEmail>\n<suffix></suffix>\n<position></position>\n<birthdate></birthdate>\n<anniversarydate></anniversarydate>\n<cmLeadTypeID></cmLeadTypeID>\n<cmRatingID>Cold</cmRatingID>\n<cmSource2ID>Advertisement</cmSource2ID>\n<cmSource3ID></cmSource3ID>\n<cmSource1ID>Email</cmSource1ID>\n<bestTimeToContact></bestTimeToContact><comments>Welcome to FC System</comments>\n    <unsubscribe>Opt-In Request not Sent</unsubscribe>\n           <unsubscribeDate></unsubscribeDate>\n<leadOwnerID>FranConnect Administrator</leadOwnerID>\n<leadAddedBy>Web Service</leadAddedBy>\n<bounceEmailStatus>No</bounceEmailStatus>\n<spamEmailStatus>No</spamEmailStatus>\n<bounceReason></bounceReason>\n<smsUnsubscribe>Opt-In Request not Sent</smsUnsubscribe>\n<smsUnsubscribeDate></smsUnsubscribeDate>\n  <lastContactedField></lastContactedField>\n<unsubscribeReason></unsubscribeReason>\n<unsubscribeReasonDetail></unsubscribeReasonDetail>\n<franchiseeReferenceId></franchiseeReferenceId>\n<leadOwnerReferenceId>356393263</leadOwnerReferenceId>\n<leadAddedByReferenceId>2</leadAddedByReferenceId>\n<convertedBy></convertedBy>\n<convertedOn></convertedOn>\n<ownerType>Corporate</ownerType>\n<divisionReferenceId></divisionReferenceId>\n<areaReferenceId></areaReferenceId>\n<areaID></areaID>\n<contactDetails>\n        <referenceId></referenceId>\n<contactFirstName></contactFirstName>\n <contactLastName></contactLastName>\n</contactDetails>\n<serviceID>Product/Service Update, Announcements</serviceID>\n</cmLead>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMUpdateLeadResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>85246348</responseId>\n<responseData>\n<cmLead>\n<status>Success</status>\n<referenceId>436155293</referenceId>\n</cmLead>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMDeleteLeadResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>829485943</responseId>\n<responseData>\n<cmLead >\n<status>Success</status>\n<referenceId>1485413158</referenceId>\n</cmLead>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMCreateContactResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>586252913</responseId>\n<responseData>\n<cmContact>\n<status>Success</status>\n<referenceId>1970068020</referenceId>\n</cmContact>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMRetrieveContactResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1586797350</responseId>\n<responseData>\n<cmContact>\n<referenceId>1970068020</referenceId>\n<contactType>Contacts</contactType>\n<contactAddDate>2020-02-28T09:38Z</contactAddDate>\n<contactOwnerID>FranConnect Administrator</contactOwnerID>\n<contactAddedBy>Web Service</contactAddedBy><title>Mr.</title>\n<contactFirstName>Amanda</contactFirstName><contactLastName>Jacques</contactLastName>\n<primaryContactMethod>Email</primaryContactMethod>\n<bestTimeToContact>Morning</bestTimeToContact><suffix></suffix>\n<cmLeadStatusID>New</cmLeadStatusID>\n<cmLeadSubStatusID></cmLeadSubStatusID>\n  <cmLeadTypeID></cmLeadTypeID>\n<cmSource1ID>Email</cmSource1ID>\n    <cmRatingID></cmRatingID>\n<cmSource2ID>Advertisement</cmSource2ID>\n<cmSource3ID></cmSource3ID>\n<franchiseeNo></franchiseeNo>\n<divisionID></divisionID>\n<comments>This is new contact</comments>\n <position></position>\n<address>PO Box 1022</address>\n<city>Seattle</city>\n<country>USA</country>\n<zipcode>98104</zipcode>\n<state>Washington</state>\n<phoneNumbers>123456</phoneNumbers>\n<extn>121</extn>\n <faxNumbers></faxNumbers>\n<mobileNumbers>9876543210</mobileNumbers>\n<emailIds>example@franconnect.com</emailIds>\n<alternateEmail></alternateEmail>\n<birthdate></birthdate>\n<anniversarydate></anniversarydate>\n<contactModifyDate></contactModifyDate>\n<lastContactedField></lastContactedField>\n    <unsubscribe>Opted In</unsubscribe>\n<unsubscribeDate></unsubscribeDate>\n<smsUnsubscribeDate></smsUnsubscribeDate>\n  <facebook></facebook>\n<twitter></twitter>\n<Youtube></Youtube>\n    <linkedin></linkedin>\n<google></google>\n<bounceEmailStatus>No</bounceEmailStatus>\n<spamEmailStatus>No</spamEmailStatus>\n        <bounceReason></bounceReason>\n<smsUnsubscribe></smsUnsubscribe>\n<_businessType319370392></_businessType319370392>\n<_anniversaryDate1353960078></_anniversaryDate1353960078>\n           <_propertySqFt1556721726></_propertySqFt1556721726>\n           <_latitude1078746944></_latitude1078746944>\n<_longitude1185604513></_longitude1185604513>\n<_bestTimeToContact52494304></_bestTimeToContact52494304>\n<_propertyCode915460063></_propertyCode915460063>\n<_numberOfBuildings1987530759></_numberOfBuildings1987530759>\n<_numberOfUnits959283769></_numberOfUnits959283769>\n<_typeOfProperty829088228></_typeOfProperty829088228><unsubscribeReasonDetail></unsubscribeReasonDetail>\n<unsubscribeReason></unsubscribeReason>\n <_renewalDate1041739061></_renewalDate1041739061>\n           <_initateRenewalDiscussions175216171></_initateRenewalDiscussions175216171>\n          <franchiseeReferenceId></franchiseeReferenceId>\n            <contactOwnerReferenceId>356393263</contactOwnerReferenceId>\n        <contactAddedByReferenceId>2</contactAddedByReferenceId>\n        <ownerType>Corporate</ownerType>\n<divisionReferenceId></divisionReferenceId>\n<areaReferenceId></areaReferenceId>\n<areaID></areaID>\n<serviceID>Product/Service Update, Announcements</serviceID>\n<accountDetails>\n<referenceId></referenceId>\n        <accountName></accountName>\n<accountType></accountType>\n            <emailIds></emailIds>\n<companyAddDate></companyAddDate>\n        </accountDetails>\n</cmContact>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMUpdateContactResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>980752871</responseId>\n<responseData>\n<cmContact>\n<status>Success</status>\n<referenceId>976934640</referenceId>\n</cmContact>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMDeleteContactResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1790617288</responseId>\n<responseData>\n<cmContact >\n<status>Success</status>\n<referenceId>344545</referenceId>\n</cmContact >\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMCreateAccountResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>80428348</responseId>\n<responseData>\n<cmAccount>\n<status>Success</status>\n<referenceId>1778692554</referenceId>\n</cmAccount>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMRetrieveAccountResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>SUCCESS</responseStatus>\n<responseId>985485485</responseId>\n<responseData>\n<cmAccount>\n<referenceId>2112135651</referenceId>\n<accountName>Heading Associates</accountName>\n<accountType>B2B</accountType>\n<parentAccountID/>\n<address>4567 Hudson Way</address>\n<city>Jersey City</city>\n<country>USA</country>\n<zipcode>201301</zipcode>\n<state>New Jersey</state>\n<phoneNumbers>(985) 876-5432</phoneNumbers>\n<extn>46</extn>\n<faxNumbers/>\n<mobileNumbers>(838) 987-6543</mobileNumbers>\n<emailIds>example@franconnect.com</emailIds>\n<noOfEmployee>200</noOfEmployee>\n<industry/>\n<sicCode/>\n<servicesProvided/>\n<stockSymbol/>\n<revenue>10000</revenue>\n<website>www.google.com</website>\n<comments>Hello ! This is a Heading Associates.</comments>\n<companyAddDate>2016-05-12</companyAddDate>\n<type>All Network</type>\n<areaReferenceId/>\n<areaID/>\n<franchiseeReferenceId/>\n<franchiseeNo/>\n<divisionReferenceId/>\n<divisionID/>\n<contactDetails>\n<referenceId/>\n<contactAddDate/>\n<contactFirstName/>\n<contactLastName/>\n<emailIds/>\n<contactModifyDate/>\n</contactDetails>\n</cmAccount>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMUpdateAccountResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1603255634</responseId>\n<responseData>\n<cmAccount >\n<status>Success</status>\n<referenceId>1355475032</referenceId>\n</cmAccount >\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMDeleteAccountResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1105493793</responseId>\n<responseData>\n<cmAccount>\n<status>Success</status>\n<referenceId>1355475032</referenceId>\n</cmAccount>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMCreateTransactionResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\nfcResponse>\n    <responseStatus>Success</responseStatus>\n<responseId>892811458</responseId>\n<responseData>\n<cmTransaction>\n<referenceId>1427070110</referenceId>\n<cmtmsTransactionDetails>\n<referenceId>1463881224</referenceId>\n</cmtmsTransactionDetails>\n</cmTransaction>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMRetrieveTransactionResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>SUCCESS</responseStatus>\n<responseId>589658425</responseId>\n<responseData>\n<cmOpportunity>\n<referenceId>263507742</referenceId>\n<opportunityName>Sandy James</opportunityName>\n<contactDetails>\n<referenceId>1464597864</referenceId>\n<contactFirstName>Tom</contactFirstName>\n<contactLastName>Blair</contactLastName>\n</contactDetails>\n<accountDetails>\n<referenceId>1082145073</referenceId>\n<accountName>Account 1</accountName>\n</accountDetails>\n<cmTransaction>\n<referenceId>659838712</referenceId>\n<transactionNumber>INV1001</transactionNumber>\n<invoiceDate>2016-05-12</invoiceDate>\n<totalAmount>10.00</totalAmount>\n<isReported>No</isReported>\n<cmtmsTransactionDetails>\n<referenceId>1089265217</referenceId>\n<productID>Service</productID>\n<quantity>1</quantity>\n<rate>10.00</rate>\n<amount>10.00</amount>\n<description>Service</description>\n</cmtmsTransactionDetails>\n</cmTransaction>\n</cmOpportunity>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMUpdateTransactionResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1822929301</responseId>\n<responseData>\n<cmTransaction>\n<status>Success</status>\n<referenceId>39614076</referenceId>\n<cmtmsTransactionDetails>\n<referenceId>464080221</referenceId>\n    </cmtmsTransactionDetails></cmTransaction>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMDeleteTransactionResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>427653740</responseId>\n<responseData>\n<cmTransaction>\n<status>Success</status>\n<referenceId>39614076</referenceId>\n</cmTransaction>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMCreateOpportunityResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1443693162</responseId>\n<responseData>\n<cmOpportunity>\n<status>Success</status>\n<referenceId>1896975234</referenceId>\n</cmOpportunity>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMRetrieveOpportunityResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>422575173</responseId>\n<responseData>\n<cmOpportunity>\n<referenceId>1896975234</referenceId>\n<opportunityName>Leah opportunity</opportunityName>\n<oppAccountID>1-800-PackOuts</oppAccountID>\n<opportunityOwner>Sandy Nadia</opportunityOwner>\n<opportunityAddDate>01/27/2020 12:47 AM</opportunityAddDate>\n<stage>Prospecting</stage>\n<opportunityType>New Business</opportunityType>\n<probability>10</probability>\n<opportunitySource>Advertisement</opportunitySource>\n<salesAmount>1000.0</salesAmount>\n<opportunityOwnerReferenceId>47691556</opportunityOwnerReferenceId>\n<accountDetails>\n<referenceId>1734810351</referenceId>\n<accountName><accountType>B2B</accountType>\n<emailIds>example@franconnect.com</emailIds><companyAddDate>12/16/2015 12:00 AM</companyAddDate>\n</accountDetails></cmOpportunity>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMUpdateOpportunityResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>980752871</responseId>\n<responseData>\n<cmOpportunity>\n<status>Success</status>\n<referenceId>1831211901</referenceId>\n</cmOpportunity>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMDeleteOpportunityResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>2100473134</responseId>\n<responseData>\n<cmOpportunity>\n<status>Success</status>\n<referenceId>2036557576</referenceId>\n</cmOpportunity>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "FSCreateTaskResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>246509591</responseId>\n<responseData>\n<fsTask>\n<status>Success</status>\n<referenceId>680609376</referenceId>\n</fsTask>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "FSRetrieveTaskResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>445098613</responseId>\n<responseData>\n<fsLead>\n<referenceId>1696458950</referenceId>\n<requestDate>2016-12-01</requestDate>\n<salutation>Mr.</salutation>\n<firstName>Nick</firstName>\n<lastName>James</lastName>\n<fsTask>\n<referenceId>1375071536</referenceId>\n<assignBy>FranConnect Administrator</assignBy>\n<subject>Application Task</subject>\n<priority>Medium</priority>\n<date>2016-12-01 07:30 AM</date>\n<duration>2016-12-01 08:30 AM</duration>\n<status>Not Started</status>\n<taskType>Default</taskType>\n<reminderTime>2016-12-01 12:00 AM</reminderTime>\n<comments>Hello! This is my first task.</comments>\n<assignTo>FranConnect Administrator</assignTo>\n</fsTask>\n</fsLead>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "FSUpdateTaskResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>971648450</responseId>\n<responseData>\n<fsTask>\n<status>Success</status>\n<referenceId>1442059186</referenceId>\n</fsTask>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "FSDeleteTaskResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1790617288</responseId>\n<responseData>\n<fsTask>\n<status>Success</status>\n<referenceId>1661907438</referenceId>\n</fsTask>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMCreateMailResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>386076013</responseId>\n<responseData/>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMRetrieveMailResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>SUCCESS</responseStatus>\n<responseId>589658425</responseId>\n<responseData>\n<cmContact>\n<referenceId>329773998</referenceId>\n<contactType>Contacts</contactType>\n<contactAddDate>2016-05-12</contactAddDate>\n<franchiseeNo/>\n<contactOwnerID>FranConnect Administrator</contactOwnerID>\n<contactAddedBy>FranConnect Administrator</contactAddedBy>\n<contactFirstName>Nick</contactFirstName>\n<contactLastName>Larson</contactLastName>\n<franchiseeReferenceId>\n<accountDetails>\n<referenceId/>\n<accountName></accountName>\n<accountType></accountType>\n<emailIds/>\n<companyAddDate/>\n</accountDetails>\n<cmMail>\n<referenceId>218671952</referenceId>\n<fromID>FranConnect Administrator</fromID>\n<subject>Reminder mail</subject>\n<mailText> Hey! I am reminding you about your bills. </mailText>\n<date>2016-05-12</date>\n</cmMail>\n</cmContact>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMDeleteMailResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1790617288</responseId>\n<responseData>\n<cmMail>\n<status>Success</status>\n<referenceId>1661907438</referenceId>\n</cmMail>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMRetrieveSMSResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>1715977357</responseId>\n<responseData>\n<cmContact>\n<referenceId>742374233</referenceId>\n<contactType>Contacts</contactType>\n<contactAddDate>2017-10-05T10:34Z</contactAddDate>\n<franchiseeNo/>\n<contactOwnerID>Nick</contactOwnerID>\n<contactAddedBy>Web Service</contactAddedBy>\n<contactFirstName>C</contactFirstName>\n<contactLastName>T2</contactLastName>\n<franchiseeReferenceId/>\n<accountDetails>\n<referenceId/>\n<accountName/>\n<accountType/>\n<emailIds/>\n<companyAddDate/>\n</accountDetails>\n<cmContactSMS>\n<referenceId>17</referenceId>\n<smsSent>2017-10-05</smsSent>\n<sentBy>FranConnect Administrator</sentBy>\n<smsText>Hello, i'm SMS for contact sent by workflow</smsText>\n<smsType>Outbound</smsType>\n<smsStatus/>\n</cmContactSMS>\n</cmContact>\n<cmContact>\n<referenceId>419799026</referenceId>\n<contactType>Contacts</contactType>\n<contactAddDate>2017-10-05T10:33Z</contactAddDate>\n<franchiseeNo/>\n<contactOwnerID>Nick</contactOwnerID>\n<contactAddedBy>WebService</contactAddedBy>\n<contactFirstName>C</contactFirstName>\n<contactLastName>T1</contactLastName>\n<franchiseeReferenceId/>\n<accountDetails>\n<referenceId/>\n<accountName/>\n<accountType/>\n<emailIds/>\n<companyAddDate/>\n</accountDetails>\n<cmContactSMS>\n<referenceId>98</referenceId>\n<smsSent>2017-11-05</smsSent>\n<sentBy>FranConnect Administrator</sentBy>\n<smsText>Let's have a Discussion</smsText>\n<smsType>Outbound</smsType>\n<smsStatus/>\n</cmContactSMS>\n</cmContact>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMRetrieveCampaignEmailResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n    <responseStatus>Success</responseStatus>\n<responseId>1377941630</responseId>\n<responseData>\n<cmContact>\n<referenceId>1970068020</referenceId>\n<contactType>Contacts</contactType>\n<contactAddDate>2020-02-28T09:38Z</contactAddDate>\n<franchiseeNo></franchiseeNo>\n<contactOwnerID>FranConnect Administrator</contactOwnerID>\n<contactAddedBy>Web Service</contactAddedBy>\n<contactFirstName>Amanda</contactFirstName>\n<contactLastName>Jacques</contactLastName>\n  <franchiseeReferenceId></franchiseeReferenceId>\n<contactOwnerReferenceId>1131168966</contactOwnerReferenceId>\n    <contactAddedByReferenceId>2</contactAddedByReferenceId>\n           <accountDetails>\n<referenceId></referenceId>\n<accountName></accountName>\n<accountType></accountType>\n<emailIds></emailIds>\n<companyAddDate></companyAddDate>\n</accountDetails>\n<cmCampaignEmail>\n<referenceId></referenceId>\n<mailRead></mailRead>\n<mailSent></mailSent>\n<cmTemplates>\n<referenceId></referenceId>\n<mailSubject></mailSubject>\n</cmTemplates>\n</cmCampaignEmail>\n</cmContact>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "CMRetrieveCampaignSMSResp": {
                "content": {
                    "application/xml": {
                        "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcResponse>\n<responseStatus>Success</responseStatus>\n<responseId>611296382</responseId>\n<responseData>\n<cmContact>\n<referenceId>1590177018</referenceId>\n<contactType>Customers</contactType>\n<contactAddDate>2017-08-10T07:40Z</contactAddDate>\n<franchiseeNo>location2</franchiseeNo>\n<contactOwnerID>Nick Mecozzi</contactOwnerID>\n<contactAddedBy>Nick Mecozzi</contactAddedBy>\n<contactFirstName>John</contactFirstName>\n<contactLastName>Karter</contactLastName>\n<franchiseeReferenceId/>\n<accountDetails>\n<referenceId/>\n<accountName/>\n<accountType/>\n<emailIds/>\n<companyAddDate/>\n</accountDetails>\n<cmSmsCampaign>\n<referenceId>4</referenceId>\n<smsSent>2017-08-16</smsSent>\n<smsText>Hello All location Public SMS Template</smsText>\n<smsStatus>Failed</smsStatus>\n<smsTemplates>\n<referenceId>209545930</referenceId>\n<smsTemplateTitle>All location Public SMS Template</smsTemplateTitle>\n</smsTemplates>\n</cmSmsCampaign>\n</cmContact>\n</responseData>\n</fcResponse>"
                    }
                },
                "description": "Successful"
            },
            "RetrieveFranchiseeNumberResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    [
                                        {
                                            "is_store": "Y",
                                            "franchisee_name": "12345",
                                            "f_name": "null null",
                                            "franchisee_no": "1319673313",
                                            "last_name": null,
                                            "area_id": "2075199050",
                                            "is_store_archive": null,
                                            "first_name": null,
                                            "is_franchisee": "Y",
                                            "status": "0"
                                        },
                                        {
                                            "is_store": "N",
                                            "franchisee_name": "Naples",
                                            "f_name": "null null",
                                            "franchisee_no": "1961077604",
                                            "last_name": null,
                                            "area_id": "2075199050",
                                            "is_store_archive": null,
                                            "first_name": null,
                                            "is_franchisee": "Y",
                                            "status": "0"
                                        }
                                    ]
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveFranchiseeNumberLocationResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    [
                                        {
                                            "is_store": "N",
                                            "franchisee_name": "10012",
                                            "f_name": "null null",
                                            "franchisee_no": "318618828",
                                            "last_name": null,
                                            "area_id": "311783348",
                                            "is_store_archive": null,
                                            "first_name": null,
                                            "is_franchisee": "Y",
                                            "status": "1"
                                        }
                                    ]
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "SalesReportPeriodResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    [
                                        {
                                            "reportPeriod": "Jan - 2019"
                                        },
                                        {
                                            "reportPeriod": "Feb - 2019"
                                        },
                                        {
                                            "reportPeriod": "Mar - 2019"
                                        },
                                        {
                                            "reportPeriod": "Apr - 2019"
                                        },
                                        {
                                            "reportPeriod": "May - 2019"
                                        }
                                    ]
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveFinanceCategoriesResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "financialItems": [
                                            {
                                                "1": {
                                                    "name": "Service",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Service",
                                                            "quantity": "Enter the quantity of the products in Service"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveNonFinanceCategoriesResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "nonFinancialItems": [
                                            {
                                                "100": {
                                                    "name": "Non Financial Category",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Non Financial Category"
                                                        }
                                                    ]
                                                },
                                                "450299664": {
                                                    "name": "Non-Fin Category",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Non-Fin Category"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveAddInvoiceItemsResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "finAddnlItems": [
                                            {
                                                "450294451": {
                                                    "name": "Additional Invoice Item Categ",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Additional Invoice Item Categ"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveSalesReportStatusResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "P": {
                                            "key": "P",
                                            "name": "Waiting for Approval",
                                            "description": ""
                                        },
                                        "A": {
                                            "key": "A",
                                            "name": "Approved",
                                            "description": ""
                                        },
                                        "R": {
                                            "key": "R",
                                            "name": "Rejected",
                                            "description": ""
                                        },
                                        "I": {
                                            "key": "I",
                                            "name": "Invoiced",
                                            "description": ""
                                        },
                                        "K": {
                                            "key": "K",
                                            "name": "Waiting for Acknowledgement",
                                            "description": ""
                                        }
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "CreateNewSalesReportResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "reportNo": "2",
                                        "salesReportID": "991157129"
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveSalesReportResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "1758848040": {
                                            "reportNo": "56",
                                            "salesReportID": "1758848040",
                                            "franchiseeNo": "907680077",
                                            "reportPeriodStart": "2019-01-01",
                                            "reportPeriodEnd": "2019-01-31",
                                            "reportSubmitDate": "2019-12-02 02:06:11",
                                            "dateReceived": "2019-12-02",
                                            "totalSales": "10000.0",
                                            "reportStatus": "I",
                                            "reportType": "M",
                                            "franchiseRoyaltyID": "1842529681",
                                            "versionID": "Flat percent 2015",
                                            "totalQuantity": "0.0",
                                            "lastModifiedDate": "2020-05-19 06:30:26",
                                            "financialItems": [
                                                {
                                                    "1": {
                                                        "name": "Service 1",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 10000,
                                                                "quantity": 0
                                                            }
                                                        ]
                                                    },
                                                    "110353610": {
                                                        "name": "Product 1",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0,
                                                                "quantity": 0
                                                            }
                                                        ]
                                                    },
                                                    "172558286": {
                                                        "name": "Product 2",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0,
                                                                "quantity": 0
                                                            }
                                                        ]
                                                    },
                                                    "489950611": {
                                                        "name": "Adjustments",
                                                        "calculationType": "(-)",
                                                        "data": [
                                                            {
                                                                "amount": 0,
                                                                "quantity": 0
                                                            }
                                                        ]
                                                    },
                                                    "771657194": {
                                                        "name": "Service 3",
                                                        "calculationType": "(+)",
                                                        "children": [
                                                            {
                                                                "247817332": {
                                                                    "name": "Weekly Special",
                                                                    "calculationType": "(+)",
                                                                    "data": [
                                                                        {
                                                                            "amount": 0,
                                                                            "quantity": 0
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "1155069001": {
                                                        "name": "Product 3",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0,
                                                                "quantity": 0
                                                            }
                                                        ]
                                                    },
                                                    "1508280192": {
                                                        "name": "Package 1",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0,
                                                                "quantity": 0
                                                            }
                                                        ]
                                                    },
                                                    "1925589920": {
                                                        "name": "Service 2",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0,
                                                                "quantity": 0
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "nonFinancialItems": [
                                                {
                                                    "100": {
                                                        "name": "Non Financial Category",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 100
                                                            }
                                                        ]
                                                    },
                                                    "1925589933": {
                                                        "name": "Average Transaction Value",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0
                                                            }
                                                        ]
                                                    },
                                                    "1925589935": {
                                                        "name": "New Leads",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0
                                                            }
                                                        ]
                                                    },
                                                    "1925589937": {
                                                        "name": "Loyalty Program Enrollments",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0
                                                            }
                                                        ]
                                                    },
                                                    "1925589939": {
                                                        "name": "Total Marketing Campaigns",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "finAddnlItems": [
                                                {
                                                    "91768934": {
                                                        "name": "Printing",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 300
                                                            }
                                                        ]
                                                    },
                                                    "425629981": {
                                                        "name": "Training Fee",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0
                                                            }
                                                        ]
                                                    },
                                                    "602785080": {
                                                        "name": "Tech Fee",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0
                                                            }
                                                        ]
                                                    },
                                                    "714608200": {
                                                        "name": "Marketing Fee",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0
                                                            }
                                                        ]
                                                    },
                                                    "1637569982": {
                                                        "name": "Call Center Fee",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0
                                                            }
                                                        ]
                                                    },
                                                    "1659664436": {
                                                        "name": "Co-op Fee",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 400
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "actionLogs": {
                                                "764579323": {
                                                    "salestasklogId": 764579323,
                                                    "userComments": "",
                                                    "userName": "FranConnect Administrator",
                                                    "finSalestasklogsdate": "2019-12-02T07:06:11.000+0000",
                                                    "finSalesTaskId": "Added"
                                                }
                                            },
                                            "promissoryNotes": {
                                                "673395639": {
                                                    "amount": "837.85",
                                                    "name": "Promissory note test"
                                                }
                                            }
                                        },
                                        "response": "Success"
                                    }
                                ],
                                "page": {
                                    "size": 100,
                                    "totalRecords": 1,
                                    "totalPages": 1,
                                    "pageId": 0
                                }
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "UpdateSalesReportResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "response": "Success"
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveRoyaltyInvoicesResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "response": "Success",
                                        "1944797722": {
                                            "franchiseRoyaltyID": "1944797722",
                                            "parentID": "1944797722",
                                            "invoiceNO": "291",
                                            "franchiseeNo": "1481248948",
                                            "taxRateId": "-1",
                                            "totalSales": "8000.00",
                                            "addlAmount": "300.00",
                                            "invoiceAmount": "1100.00",
                                            "invoiceDate": "2022-12-21 07:31:05",
                                            "paymentStatus": "N",
                                            "reportStatus": "I",
                                            "invType": "R",
                                            "amountPaid": "0.00",
                                            "openBalAdv": "0.00",
                                            "openBalTax": "0.00",
                                            "openBalRoy": "0.00",
                                            "addlFees": "300.00",
                                            "openBalAddlFees": "300.00",
                                            "totalQuantity": "0.00",
                                            "lastModifiedDate": "2022-12-21 07:31:05",
                                            "taxAmount": null,
                                            "Open Royalty": "800.00",
                                            "Royalty": "800.00",
                                            "Royalty Yearly Cap": "2000.00",
                                            "Open Adv.": "0.00",
                                            "Adv.": "0.00",
                                            "Adv. Yearly Cap": "2000.00",
                                            "Open Royalty (Area Franchise)": "0.00",
                                            "Royalty (Area Franchise)": "0.00",
                                            "Open Adv. (Area Franchise)": "0.00",
                                            "Adv. (Area Franchise)": "0.00",
                                            "Open Promissory Notes": "0.00",
                                            "Promissory Notes": "0.00",
                                            "Open Late Fee": "0.00",
                                            "Late Fee": "0.00",
                                            "Open Late Fee(Area Franchise)": "0.00",
                                            "Late Fee(Area Franchise)": "0.00",
                                            "Adv. remaining yearly cap": "0.00",
                                            "Royalty remaining yearly cap": "400.00",
                                            "totalOpenBalance": "1100.00",
                                            "lineItems": {},
                                            "reportNo": "283",
                                            "salesReportID": "610517953",
                                            "reportPeriodStart": "2022-03-01",
                                            "reportPeriodEnd": "2022-03-31",
                                            "reportSubmitDate": "2022-12-21 07:30:46",
                                            "dateReceived": "2022-12-21",
                                            "reportType": "M",
                                            "versionID": "SB-Simple-Monthly",
                                            "discountCapId": null,
                                            "totalPositiveCategoriesSales": null,
                                            "totalNegativeCategoriesSales": null,
                                            "totalDiscountAmount": null,
                                            "maxDiscountAllowed": null,
                                            "applicableDiscount": null,
                                            "totalMainAmount": "8000.00",
                                            "totalAdjustmentAmount": "0.00"
                                        }
                                    }
                                ],
                                "page": {
                                    "size": 500,
                                    "totalRecords": 1,
                                    "totalPages": 1,
                                    "pageId": 0
                                }
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveInvoiceByIdResp":{
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": {
                                    "invoiceReportDetails": {
                                        "franchiseeNo": "317889558",
                                        "franchiseeName": "SB-001",
                                        "totalSales": 1900.0,
                                        "storeType": "Default",
                                        "area": "NCR Region",
                                        "reportPeriod": "2023-03-14",
                                        "invoiceNo": "284",
                                        "versionID": "AV 2023 Monthly",
                                        "openBalance": 901.4,
                                        "additionalFees": 346.95,
                                        "taxOnInvoice": 11.84,
                                        "invoiceAmount": 901.4,
                                        "invoiceDate": "2023-04-21 06:12:18.0"
                                    },
                                    "additionalInvoiceDetails": {
                                        "licenseNo": "ABYN-094378-BA",
                                        "storePhone": "(981) 121-1601",
                                        "storeEmail": "franconnect.test@gmail.com"
                                    },
                                    "royaltyItems": {
                                        "Royalty": {
                                            "amount": 190.0,
                                            "tax": -0.95,
                                            "taxTypes": {
                                                "VAT @ 3.0%": 5.7,
                                                "Withholding ST @ -2.00%": -3.8,
                                                "Withholding WT @ -1.50%": -2.85
                                            },
                                            "lineItems": {
                                                "1696323611": {
                                                    "Description": "Royalty Adjustment#1",
                                                    "Amount": 100.0,
                                                    "Added By": "FranConnect Administrator",
                                                    "Added On": "2023-04-24 00:22:12"
                                                }
                                            },
                                            "total": 289.05,
                                            "openAmount": 289.05,
                                            "remainingYearlyCap": 5855.4,
                                            "yearlyCap": 10000
                                        },
                                        "Adv.": {
                                            "amount": 190.0,
                                            "tax": 5.7,
                                            "taxTypes": {
                                                "VAT @ 3.0%": 5.7,
                                                "ST @ 3.5%": 6.65,
                                                "Withholding WT1 @ -2.00%": -3.8,
                                                "Withholding WT2 @ -1.50%": -2.85
                                            },
                                            "total": 195.7,
                                            "openAmount": 195.7,
                                            "remainingYearlyCap": 2782.08,
                                            "yearlyCap": 10000
                                        },
                                        "Promissory Notes": {
                                            "amount": 0.0,
                                            "total": 0.0,
                                            "openAmount": 0.0
                                        },
                                        "Late Fee": {
                                            "amount": 57.0,
                                            "tax": 0.86,
                                            "taxTypes": {
                                                "VAT @ 3.0%": 1.71,
                                                "Withholding ST @ -1.50%": 0.86
                                            },
                                            "total": 57.86,
                                            "openAmount": 57.86
                                        }
                                    },
                                    "additionalItems": {
                                        "Marketing Fee": {
                                            "amount": 125.55,
                                            "tax": 6.28,
                                            "taxTypes": {
                                                "VAT @ 3.0%": 3.77,
                                                "ST @ 3.5%": 4.39,
                                                "Withholding WT @ -1.50%": -1.88
                                            },
                                            "total": 131.83
                                        },
                                        "Tech Fee": {
                                            "amount": 200.0,
                                            "tax": 10.0,
                                            "taxTypes": {
                                                "VAT @ 3.0%": 6.0,
                                                "ST @ 3.5%": 7.0,
                                                "Withholding WT @ -1.50%": -3.0
                                            },
                                            "total": 210.0
                                        }
                                    },
                                    "additionalFees": {
                                        "amount": 341.83,
                                        "tax": 5.13,
                                        "taxTypes": {
                                            "ST @ 3.0%": 10.25,
                                            "Withholding WT @ -1.50%": -5.13
                                        },
                                        "total": 346.95,
                                        "openAmount": 346.95
                                    },
                                    "invoiceAmount": {
                                        "amount": 789.56,
                                        "tax": 11.84,
                                        "taxTypes": {
                                            "VAT @ 3.0%": 23.69,
                                            "Withholding ST @ -1.50%": -11.84
                                        },
                                        "total": 801.4,
                                        "openAmount": 901.4
                                    },
                                    "paymentDetails": {
                                        "paymentStatus": "Unpaid",
                                        "amountPaid": 0.0
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "LinkDebitMemosWithInvoiceResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "response": "Success"
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveRoyaltyPaymentResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "P": {
                                            "key": "P",
                                            "name": "Partially Paid",
                                            "description": ""
                                        },
                                        "C": {
                                            "key": "C",
                                            "name": "Fully Paid",
                                            "description": ""
                                        },
                                        "N": {
                                            "key": "N",
                                            "name": "Unpaid",
                                            "description": ""
                                        }
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "CreatePaymentResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "paymentNo": "45",
                                        "paymentID": "822049897"
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "CreateAdjustmentResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "reportNo": "1234",
                                        "salesReportID": "1476675187",
                                        "response": "Success"
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "UpdateAdjustmentResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "response": "Success"
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveAdjustmentResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "1199821203": {
                                            "reportNo": "241",
                                            "salesReportID": "1199821203",
                                            "franchiseeNo": "1951953135",
                                            "reportPeriodStart": "2020-01-01",
                                            "reportPeriodEnd": "2020-01-31",
                                            "reportSubmitDate": "2020-03-06 00:12:34",
                                            "dateReceived": "2020-03-06",
                                            "totalSales": "500.0",
                                            "reportStatus": "I",
                                            "reportType": "X",
                                            "franchiseRoyaltyID": "424620139",
                                            "versionID": "Flat percent 2015",
                                            "totalQuantity": "100.0",
                                            "lastModifiedDate": "2020-03-06 00:12:34",
                                            "financialItems": [
                                                {
                                                    "1": {
                                                        "name": "Service 1",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 500,
                                                                "quantity": 100
                                                            }
                                                        ]
                                                    },
                                                    "110353610": {
                                                        "name": "Product 1",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0,
                                                                "quantity": 0
                                                            }
                                                        ]
                                                    },
                                                    "172558286": {
                                                        "name": "Product 2",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0,
                                                                "quantity": 0
                                                            }
                                                        ]
                                                    },
                                                    "489950611": {
                                                        "name": "Adjustments",
                                                        "calculationType": "(-)",
                                                        "data": [
                                                            {
                                                                "amount": 0,
                                                                "quantity": 0
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "nonFinancialItems": [
                                                {
                                                    "100": {
                                                        "name": "Non Financial Category",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0
                                                            }
                                                        ]
                                                    },
                                                    "1925589933": {
                                                        "name": "Average Transaction Value",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "finAddnlItems": [
                                                {
                                                    "91768934": {
                                                        "name": "Printing",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 300
                                                            }
                                                        ]
                                                    },
                                                    "1659664436": {
                                                        "name": "Co-op Fee",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 400
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "actionLogs": {
                                                "2144131743": {
                                                    "salestasklogId": 2144131743,
                                                    "userComments": "Approved",
                                                    "userName": "FranConnect Administrator",
                                                    "finSalestasklogsdate": "2020-03-06T09:43:54.000+0000",
                                                    "finSalesTaskId": "Approved"
                                                }
                                            }
                                        },
                                        "response": "Success"
                                    }
                                ],
                                "page": {
                                    "size": 100,
                                    "totalRecords": 1,
                                    "totalPages": 1,
                                    "pageId": 0
                                }
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "AdjustmentTypesResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "X": {
                                            "key": "X",
                                            "name": "Adjustment Report",
                                            "description": ""
                                        },
                                        "M": {
                                            "key": "M",
                                            "name": "Royalty Report",
                                            "description": ""
                                        }
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "AdjustmentStatusResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "P": {
                                            "key": "P",
                                            "name": "Waiting for Approval",
                                            "description": ""
                                        },
                                        "A": {
                                            "key": "A",
                                            "name": "Approved",
                                            "description": ""
                                        },
                                        "R": {
                                            "key": "R",
                                            "name": "Rejected",
                                            "description": ""
                                        },
                                        "I": {
                                            "key": "I",
                                            "name": "Invoiced",
                                            "description": ""
                                        },
                                        "K": {
                                            "key": "K",
                                            "name": "Waiting for Acknowledgement",
                                            "description": ""
                                        }
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "AdjRetrieveFinanceCategoriesResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "financialItems": [
                                            {
                                                "1": {
                                                    "name": "Service 1",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Service 1",
                                                            "quantity": "Enter the quantity of the products in Service 1"
                                                        }
                                                    ]
                                                },
                                                "110353610": {
                                                    "name": "Product 1",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Product 1",
                                                            "quantity": "Enter the quantity of the products in Product 1"
                                                        }
                                                    ]
                                                },
                                                "489950611": {
                                                    "name": "Adjustments",
                                                    "calculationType": "(-)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Adjustments",
                                                            "quantity": "Enter the quantity of the products in Adjustments"
                                                        }
                                                    ]
                                                },
                                                "1925589920": {
                                                    "name": "Service 2",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Service 2",
                                                            "quantity": "Enter the quantity of the products in Service 2"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "AdjRetrieveKpiCategoriesResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "nonFinancialItems": [
                                            {
                                                "100": {
                                                    "name": "Non Financial Category",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Non Financial Category"
                                                        }
                                                    ]
                                                },
                                                "1925589937": {
                                                    "name": "Loyalty Program Enrollments",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Loyalty Program Enrollments"
                                                        }
                                                    ]
                                                },
                                                "1925589939": {
                                                    "name": "Total Marketing Campaigns",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Total Marketing Campaigns"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "AdjRetrieveLineItemsResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "finAddnlItems": [
                                            {
                                                "91768934": {
                                                    "name": "Printing",
                                                    "calculationType": "(+)",
                                                    "amountType": "Fixed (This value will remain fixed even if the value is changed)",
                                                    "data": [
                                                        {
                                                            "amount": "300.0"
                                                        }
                                                    ]
                                                },
                                                "425629981": {
                                                    "name": "Training Fee",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Training Fee"
                                                        }
                                                    ]
                                                },
                                                "602785080": {
                                                    "name": "Tech Fee",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Tech Fee"
                                                        }
                                                    ]
                                                },
                                                "714608200": {
                                                    "name": "Marketing Fee",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Marketing Fee"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveAuditsResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "response": "Success",
                                        "2004730523": {
                                            "reportNo": "535",
                                            "salesReportID": "2004730523",
                                            "franchiseeNo": "1116391861",
                                            "reportPeriodStart": "2022-11-01",
                                            "reportPeriodEnd": "2022-11-30",
                                            "reportSubmitDate": "2023-01-02 02:00:08",
                                            "dateReceived": "2023-01-02",
                                            "totalSales": "18300.00",
                                            "reportStatus": "I",
                                            "reportType": "U",
                                            "franchiseRoyaltyID": "1242730254",
                                            "versionID": "AV for Iowa Franchises",
                                            "totalQuantity": "0.00",
                                            "lastModifiedDate": "2023-01-02 02:01:37",
                                            "discountCapId": null,
                                            "totalPositiveCategoriesSales": null,
                                            "totalNegativeCategoriesSales": null,
                                            "totalDiscountAmount": null,
                                            "maxDiscountAllowed": null,
                                            "applicableDiscount": null,
                                            "totalMainAmount": "17000.00",
                                            "totalAdjustmentAmount": "1300.00",
                                            "financialItems": {
                                                "Royalty": [
                                                    {
                                                        "1": {
                                                            "name": "Service",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1500.00",
                                                                    "netAmount": "2500.00",
                                                                    "rate": "10.0%",
                                                                    "royalty": "250.00"
                                                                }
                                                            ]
                                                        },
                                                        "935225899": {
                                                            "name": "Beverage",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "15000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "0.00",
                                                                    "netAmount": "15000.00",
                                                                    "rate": "10.0%",
                                                                    "royalty": "1500.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "1240457900": {
                                                                        "name": "Coca Cola",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1857455463": {
                                                                        "name": "Coca Cola (returns)",
                                                                        "calculationType": "(-)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "278664075": {
                                                            "name": "Food",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "-200.00",
                                                                    "netAmount": "800.00",
                                                                    "rate": "12.0%",
                                                                    "royalty": "96.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "749562724": {
                                                                        "name": "Burger (veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1006947012": {
                                                                        "name": "Burger (non-veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "total": {
                                                            "data": [
                                                                {
                                                                    "amount": "17000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1300.00",
                                                                    "netAmount": "18300.00",
                                                                    "rate": "NA",
                                                                    "royalty": "1846.00"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "Adv.": [
                                                    {
                                                        "1": {
                                                            "name": "Service",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1500.00",
                                                                    "netAmount": "2500.00",
                                                                    "rate": "20.0%",
                                                                    "royalty": "500.00"
                                                                }
                                                            ]
                                                        },
                                                        "935225899": {
                                                            "name": "Beverage",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "15000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "0.00",
                                                                    "netAmount": "15000.00",
                                                                    "rate": "25.0%",
                                                                    "royalty": "3750.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "1240457900": {
                                                                        "name": "Coca Cola",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1857455463": {
                                                                        "name": "Coca Cola (returns)",
                                                                        "calculationType": "(-)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "278664075": {
                                                            "name": "Food",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "-200.00",
                                                                    "netAmount": "800.00",
                                                                    "rate": "30.0%",
                                                                    "royalty": "240.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "749562724": {
                                                                        "name": "Burger (veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1006947012": {
                                                                        "name": "Burger (non-veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "total": {
                                                            "data": [
                                                                {
                                                                    "amount": "17000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1300.00",
                                                                    "netAmount": "18300.00",
                                                                    "rate": "NA",
                                                                    "royalty": "4490.00"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "Royalty (Area Franchise)": [
                                                    {
                                                        "1": {
                                                            "name": "Service",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1500.00",
                                                                    "netAmount": "2500.00",
                                                                    "rate": "20.0%",
                                                                    "royalty": "500.00"
                                                                }
                                                            ]
                                                        },
                                                        "935225899": {
                                                            "name": "Beverage",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "15000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "0.00",
                                                                    "netAmount": "15000.00",
                                                                    "rate": "25.0%",
                                                                    "royalty": "3750.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "1240457900": {
                                                                        "name": "Coca Cola",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1857455463": {
                                                                        "name": "Coca Cola (returns)",
                                                                        "calculationType": "(-)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "278664075": {
                                                            "name": "Food",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "-200.00",
                                                                    "netAmount": "800.00",
                                                                    "rate": "30.0%",
                                                                    "royalty": "240.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "749562724": {
                                                                        "name": "Burger (veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1006947012": {
                                                                        "name": "Burger (non-veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "total": {
                                                            "data": [
                                                                {
                                                                    "amount": "17000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1300.00",
                                                                    "netAmount": "18300.00",
                                                                    "rate": null,
                                                                    "royalty": "0.00"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "Adv. (Area Franchise)": [
                                                    {
                                                        "1": {
                                                            "name": "Service",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1500.00",
                                                                    "netAmount": "2500.00",
                                                                    "rate": "20.0%",
                                                                    "royalty": "500.00"
                                                                }
                                                            ]
                                                        },
                                                        "935225899": {
                                                            "name": "Beverage",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "15000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "0.00",
                                                                    "netAmount": "15000.00",
                                                                    "rate": "25.0%",
                                                                    "royalty": "3750.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "1240457900": {
                                                                        "name": "Coca Cola",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1857455463": {
                                                                        "name": "Coca Cola (returns)",
                                                                        "calculationType": "(-)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "278664075": {
                                                            "name": "Food",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "-200.00",
                                                                    "netAmount": "800.00",
                                                                    "rate": "30.0%",
                                                                    "royalty": "240.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "749562724": {
                                                                        "name": "Burger (veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1006947012": {
                                                                        "name": "Burger (non-veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "total": {
                                                            "data": [
                                                                {
                                                                    "amount": "17000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1300.00",
                                                                    "netAmount": "18300.00",
                                                                    "rate": null,
                                                                    "royalty": "0.00"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "Late Fee": [
                                                    {
                                                        "1": {
                                                            "name": "Service",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1500.00",
                                                                    "netAmount": "2500.00",
                                                                    "rate": "7.0%",
                                                                    "royalty": "175.00"
                                                                }
                                                            ]
                                                        },
                                                        "935225899": {
                                                            "name": "Beverage",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "15000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "0.00",
                                                                    "netAmount": "15000.00",
                                                                    "rate": "7.0%",
                                                                    "royalty": "1050.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "1240457900": {
                                                                        "name": "Coca Cola",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1857455463": {
                                                                        "name": "Coca Cola (returns)",
                                                                        "calculationType": "(-)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "278664075": {
                                                            "name": "Food",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "-200.00",
                                                                    "netAmount": "800.00",
                                                                    "rate": "7.0%",
                                                                    "royalty": "56.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "749562724": {
                                                                        "name": "Burger (veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1006947012": {
                                                                        "name": "Burger (non-veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "total": {
                                                            "data": [
                                                                {
                                                                    "amount": "17000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1300.00",
                                                                    "netAmount": "18300.00",
                                                                    "rate": "NA",
                                                                    "royalty": "1281.00"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "Late Fee(Area Franchise)": [
                                                    {
                                                        "1": {
                                                            "name": "Service",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1500.00",
                                                                    "netAmount": "2500.00",
                                                                    "rate": "7.0%",
                                                                    "royalty": "175.00"
                                                                }
                                                            ]
                                                        },
                                                        "935225899": {
                                                            "name": "Beverage",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "15000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "0.00",
                                                                    "netAmount": "15000.00",
                                                                    "rate": "7.0%",
                                                                    "royalty": "1050.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "1240457900": {
                                                                        "name": "Coca Cola",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1857455463": {
                                                                        "name": "Coca Cola (returns)",
                                                                        "calculationType": "(-)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "278664075": {
                                                            "name": "Food",
                                                            "calculationType": "(+)",
                                                            "data": [
                                                                {
                                                                    "amount": "1000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "-200.00",
                                                                    "netAmount": "800.00",
                                                                    "rate": "7.0%",
                                                                    "royalty": "56.00"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "749562724": {
                                                                        "name": "Burger (veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "1006947012": {
                                                                        "name": "Burger (non-veg)",
                                                                        "calculationType": "(+)",
                                                                        "data": [
                                                                            {
                                                                                "amount": "0.00",
                                                                                "quantity": 0,
                                                                                "adjustments": "0.00",
                                                                                "netAmount": "0.00",
                                                                                "rate": "NA",
                                                                                "royalty": "0.00"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "total": {
                                                            "data": [
                                                                {
                                                                    "amount": "17000.00",
                                                                    "quantity": 0,
                                                                    "adjustments": "1300.00",
                                                                    "netAmount": "18300.00",
                                                                    "rate": null,
                                                                    "royalty": "0.00"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "nonFinancialItems": [
                                                {
                                                    "100": {
                                                        "name": "Non Financial Category",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 0.0
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "finAddnlItems": [
                                                {
                                                    "1249342825": {
                                                        "name": "AD1",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 100.0
                                                            }
                                                        ]
                                                    },
                                                    "338657": {
                                                        "name": "AD3",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 50.0
                                                            }
                                                        ]
                                                    },
                                                    "1185742608": {
                                                        "name": "Ad2",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 150.0
                                                            }
                                                        ]
                                                    }
                                                }
                                            ],
                                            "actionLogs": {
                                                "1792061643": {
                                                    "salestasklogId": "1792061643",
                                                    "userComments": "",
                                                    "userName": "FranConnect Administrator",
                                                    "finSalestasklogsdate": 1672642808000,
                                                    "finSalesTaskId": "Added"
                                                }
                                            }
                                        }
                                    }
                                ],
                                "page": {
                                    "size": 500,
                                    "totalRecords": 1,
                                    "totalPages": 1,
                                    "pageId": 0
                                }
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrievePaymentResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "298031988": {
                                            "paymentMappingId": "298031988",
                                            "paymentID": "1648095951",
                                            "franchiseRoyaltyId": "1928354899",
                                            "invoiceNo": "6",
                                            "paymentNo": "1",
                                            "amountApplied": "35.00",
                                            "dateApplied": "2019-06-26 08:32:12",
                                            "franchiseeNo": "403968414",
                                            "parentId": null,
                                            "royaltyType": "All",
                                            "dateReceived": "2019-06-26",
                                            "collectionMethod": "Cash",
                                            "refNo": "",
                                            "submitDate": "2019-06-26 08:32:11",
                                            "openBalance": "0.0",
                                            "memo": "test"
                                        },
                                        "497802296": {
                                            "paymentMappingId": "497802296",
                                            "paymentID": "1648095951",
                                            "franchiseRoyaltyId": "1928686199",
                                            "invoiceNo": "6",
                                            "paymentNo": "1",
                                            "amountApplied": "350.00",
                                            "dateApplied": "2019-06-26 08:32:11",
                                            "franchiseeNo": "403968414",
                                            "parentId": null,
                                            "royaltyType": "All",
                                            "dateReceived": "2019-06-26",
                                            "collectionMethod": "--",
                                            "refNo": "",
                                            "submitDate": "2019-06-26 08:32:11",
                                            "openBalance": "0.0",
                                            "memo": "test"
                                        },
                                        "732473447": {
                                            "paymentMappingId": "732473447",
                                            "paymentID": "1648095951",
                                            "franchiseRoyaltyId": "1928694199",
                                            "invoiceNo": "6",
                                            "paymentNo": "1",
                                            "amountApplied": "215.0",
                                            "dateApplied": "2019-06-26 08:32:12",
                                            "franchiseeNo": "403968414",
                                            "parentId": null,
                                            "royaltyType": "All",
                                            "dateReceived": "2019-06-26",
                                            "collectionMethod": "--",
                                            "refNo": "",
                                            "submitDate": "2019-06-26 08:32:11",
                                            "openBalance": "0.0",
                                            "memo": "test"
                                        },
                                        "response": "Success"
                                    }
                                ],
                                "page": {
                                    "size": 100,
                                    "totalRecords": 3,
                                    "totalPages": 1,
                                    "pageId": 0
                                }
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveProfitLossPeriodsResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    [
                                        {
                                            "statementPeriod": "Jun - 2019"
                                        },
                                        {
                                            "statementPeriod": "May - 2019"
                                        },
                                        {
                                            "statementPeriod": "Apr - 2019"
                                        },
                                        {
                                            "statementPeriod": "Mar - 2019"
                                        }
                                    ]
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveProfitLossCategoriesResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "plItems": [
                                            {
                                                "1": {
                                                    "name": "Income",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Income"
                                                        }
                                                    ]
                                                },
                                                "2": {
                                                    "name": "Expense",
                                                    "calculationType": "(-)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Expense"
                                                        }
                                                    ]
                                                },
                                                "3": {
                                                    "name": "Overhead",
                                                    "calculationType": "(-)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in Overhead"
                                                        }
                                                    ]
                                                },
                                                "4": {
                                                    "name": "P&L Addition Type Categ",
                                                    "calculationType": "(+)",
                                                    "data": [
                                                        {
                                                            "amount": "Enter the amount of earning in P&L Addition Type Categ"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "CreateProfitLossStatementResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "response": "Success",
                                        "plrepId": "1"
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveMemosResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "1037703664": {
                                            "memoID": "1037703664",
                                            "franchiseeNo": "2019500882",
                                            "amount": "1000.0",
                                            "memoType": "Credit",
                                            "memoDate": "2021-05-18",
                                            "openBalance": "350.0",
                                            "memo": "Comments",
                                            "memoNo": "3"
                                        },
                                        "1390673813": {
                                            "memoID": "1390673813",
                                            "franchiseeNo": "2019500882",
                                            "amount": "200.0",
                                            "memoType": "Debit",
                                            "memoDate": "2021-05-16",
                                            "openBalance": "200.0",
                                            "memo": "Debit memo added by NS",
                                            "memoNo": "7"
                                        },
                                        "1416567582": {
                                            "memoID": "1416567582",
                                            "franchiseeNo": "2019500882",
                                            "amount": "1000.0",
                                            "memoType": "Credit",
                                            "memoDate": "2021-05-18",
                                            "openBalance": "30.0",
                                            "memo": "Comments",
                                            "memoNo": "8"
                                        },
                                        "115798496": {
                                            "memoID": "115798496",
                                            "franchiseeNo": "2019500882",
                                            "amount": "100.0",
                                            "memoType": "Credit",
                                            "memoDate": "2021-05-18",
                                            "openBalance": "100.0",
                                            "memo": "Comments",
                                            "memoNo": "6"
                                        },
                                        "843734972": {
                                            "memoID": "843734972",
                                            "franchiseeNo": "2019500882",
                                            "amount": "100.0",
                                            "memoType": "Debit",
                                            "memoDate": "2021-05-18",
                                            "openBalance": "100.0",
                                            "memo": "Comments",
                                            "memoNo": "5"
                                        },
                                        "1106080230": {
                                            "memoID": "1106080230",
                                            "franchiseeNo": "2019500882",
                                            "amount": "800.0",
                                            "memoType": "Debit",
                                            "memoDate": "2021-05-18",
                                            "openBalance": "800.0",
                                            "memo": "Comments",
                                            "memoNo": "4"
                                        },
                                        "800047640": {
                                            "memoID": "800047640",
                                            "franchiseeNo": "2019500882",
                                            "amount": "500.0",
                                            "memoType": "Credit",
                                            "memoDate": "2021-05-03",
                                            "openBalance": "0.0",
                                            "memo": "test comment",
                                            "memoNo": "1"
                                        },
                                        "42235612": {
                                            "memoID": "42235612",
                                            "franchiseeNo": "2019500882",
                                            "amount": "123.0",
                                            "memoType": "Credit",
                                            "memoDate": "2017-09-30",
                                            "openBalance": "123.0",
                                            "memo": null,
                                            "memoNo": "9"
                                        },
                                        "response": "Success"
                                    }
                                ],
                                "page": {
                                    "size": 100,
                                    "totalRecords": 8,
                                    "totalPages": 1,
                                    "pageId": 0
                                }
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "CreateMemoResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "memoID": "42235612",
                                        "memoNo": "9"
                                    }
                                ],
                                "page": null
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveProfitLossStatementResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "data": [
                                    {
                                        "1": {
                                            "plrepId": "1",
                                            "franchiseeNo": "403968414",
                                            "submissionDate": "2019-06-26 00:00:00",
                                            "addedOn": "2019-06-26 07:21:29",
                                            "statementPeriod": "Jun - 2019",
                                            "Net Profit": "-400.0",
                                            "lastModifiedDate": "2019-06-26 00:00:00",
                                            "plItems": [
                                                {
                                                    "1": {
                                                        "name": "Income",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 100
                                                            }
                                                        ]
                                                    },
                                                    "2": {
                                                        "name": "Expense",
                                                        "calculationType": "(-)",
                                                        "data": [
                                                            {
                                                                "amount": 200
                                                            }
                                                        ]
                                                    },
                                                    "3": {
                                                        "name": "Overhead",
                                                        "calculationType": "(-)",
                                                        "data": [
                                                            {
                                                                "amount": 300
                                                            }
                                                        ]
                                                    },
                                                    "4": {
                                                        "name": "P&L Addition Type Categ",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 400
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "246516745": {
                                            "plrepId": "246516745",
                                            "franchiseeNo": "403968414",
                                            "submissionDate": "2019-06-26 03:41:26",
                                            "addedOn": "2019-06-26 03:40:53",
                                            "statementPeriod": "May - 2019",
                                            "Net Profit": "50.0",
                                            "lastModifiedDate": "2019-06-26 03:41:26",
                                            "plItems": [
                                                {
                                                    "1": {
                                                        "name": "Income",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 120
                                                            }
                                                        ]
                                                    },
                                                    "2": {
                                                        "name": "Expense",
                                                        "calculationType": "(-)",
                                                        "data": [
                                                            {
                                                                "amount": 50
                                                            }
                                                        ]
                                                    },
                                                    "3": {
                                                        "name": "Overhead",
                                                        "calculationType": "(-)",
                                                        "data": [
                                                            {
                                                                "amount": 20
                                                            }
                                                        ]
                                                    },
                                                    "4": {
                                                        "name": "P&L Addition Type Categ",
                                                        "calculationType": "(+)",
                                                        "data": [
                                                            {
                                                                "amount": 200
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "response": "Success"
                                    }
                                ],
                                "page": {
                                    "size": 100,
                                    "totalRecords": 2,
                                    "totalPages": 1,
                                    "pageId": 0
                                }
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveTypeSpecificCategoriesResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "developers.franconnectdemo.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "categoryId": "567680764276113411",
                                    "name": "Store",
                                    "parents": [
                                        {
                                            "categoryId": "567680617202843651"
                                        }
                                    ],
                                    "links": []
                                },
                                {
                                    "categoryId": "568671693363478532",
                                    "name": "Storeg",
                                    "parents": [
                                        {
                                            "categoryId": "568671593954279427"
                                        }
                                    ],
                                    "links": []
                                },
                                {
                                    "categoryId": "574932050520309762",
                                    "name": "STORE-C",
                                    "parents": [
                                        {
                                            "categoryId": "574931346409914371"
                                        }
                                    ],
                                    "links": []
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveCustomSegmentFieldsResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "qamsa6.franconnectqa.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "fieldId": "694797104412887234",
                                    "apiKey": "taxpayerCode",
                                    "fieldName": "Taxpayer Code",
                                    "fieldType": "text",
                                    "status": "active",
                                    "fieldTypeAttributes": {},
                                    "validations": {
                                        "textLengthMax": "180",
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "deleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694797224781023426",
                                    "apiKey": "additionalNotes",
                                    "fieldName": "Additional Nodes",
                                    "fieldType": "textArea",
                                    "status": "active",
                                    "fieldTypeAttributes": {},
                                    "validations": {
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "deleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694797399264069826",
                                    "apiKey": "creationDate",
                                    "fieldName": "Creation Date",
                                    "fieldType": "date",
                                    "status": "active",
                                    "fieldTypeAttributes": {},
                                    "validations": {
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "deleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694797937858840770",
                                    "apiKey": "singleDropDownField",
                                    "fieldName": "Single Drop Down Field",
                                    "fieldType": "dropdown",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "options": [
                                            {
                                                "id": "1661927934271",
                                                "value": "Option 2",
                                                "state": 0
                                            },
                                            {
                                                "id": "1661927928220",
                                                "value": "Option 1",
                                                "state": 0
                                            }
                                        ]
                                    },
                                    "validations": {
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "deleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694798142956112066",
                                    "apiKey": "countryOnly",
                                    "fieldName": "Country Only",
                                    "fieldType": "country",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "hasDependentField": false
                                    },
                                    "validations": {
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "deleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694798299735001282",
                                    "apiKey": "countryWithState",
                                    "fieldName": "Country With State",
                                    "fieldType": "country",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "hasDependentField": true
                                    },
                                    "validations": {
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "deleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694798299751778498",
                                    "apiKey": "stateWithCountry",
                                    "fieldName": "State With Country",
                                    "fieldType": "state",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "countryFieldId": "694798299735001282"
                                    },
                                    "validations": {
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "deleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694803709938370754",
                                    "apiKey": "multiSelectDropdown",
                                    "fieldName": "Multi Select Dropdown ",
                                    "fieldType": "multiselect-dropdown",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "options": [
                                            {
                                                "id": "1661929309237",
                                                "value": "Option 2",
                                                "state": 0
                                            },
                                            {
                                                "id": "1661929302970",
                                                "value": "Option 1",
                                                "state": 0
                                            }
                                        ]
                                    },
                                    "validations": {
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "deleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694803916000331970",
                                    "apiKey": "documents",
                                    "fieldName": "Documents",
                                    "fieldType": "file",
                                    "status": "active",
                                    "fieldTypeAttributes": {},
                                    "validations": {
                                        "isMandatory": false
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "deleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "696670214816794088",
                                    "apiKey": "serviceAreas477918464",
                                    "fieldName": "Service Areas",
                                    "fieldType": "multiselect-dropdown",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "options": [
                                            {
                                                "id": "1662374319794",
                                                "value": "Herndon",
                                                "state": 0
                                            },
                                            {
                                                "id": "1662374309711",
                                                "value": "Iowa",
                                                "state": 0
                                            },
                                            {
                                                "id": "1662374305527",
                                                "value": "Reston",
                                                "state": 0
                                            },
                                            {
                                                "id": "1662374301860",
                                                "value": "Houston",
                                                "state": 0
                                            }
                                        ]
                                    },
                                    "validations": {
                                        "isMandatory": false
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "deleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "696671472608871912",
                                    "apiKey": "auditTemplateDoc285802595",
                                    "fieldName": "Audit Template Doc",
                                    "fieldType": "file",
                                    "status": "active",
                                    "fieldTypeAttributes": {},
                                    "validations": {
                                        "isMandatory": false
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "deleted": false,
                                    "links": []
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveCountriesResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "qamsa6.franconnectqa.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "countryId": "2",
                                    "countryName": "Afghanistan",
                                    "links": []
                                },
                                {
                                    "countryId": "4",
                                    "countryName": "Algeria",
                                    "links": []
                                },
                                {
                                    "countryId": "14",
                                    "countryName": "Australia",
                                    "links": []
                                },
                                {
                                    "countryId": "39",
                                    "countryName": "Canada",
                                    "links": []
                                },
                                {
                                    "countryId": "46",
                                    "countryName": "China",
                                    "links": []
                                },
                                {
                                    "countryId": "227",
                                    "countryName": "Cyprus",
                                    "links": []
                                },
                                {
                                    "countryId": "95",
                                    "countryName": "India",
                                    "links": []
                                },
                                {
                                    "countryId": "147",
                                    "countryName": "New Zealand",
                                    "links": []
                                },
                                {
                                    "countryId": "1",
                                    "countryName": "USA",
                                    "links": []
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveStatesOfACountryResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "qamsa6.franconnectqa.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "stateId": "582",
                                    "stateName": "Alberta",
                                    "links": []
                                },
                                {
                                    "stateId": "583",
                                    "stateName": "British Columbia",
                                    "links": []
                                },
                                {
                                    "stateId": "584",
                                    "stateName": "Manitoba",
                                    "links": []
                                },
                                {
                                    "stateId": "585",
                                    "stateName": "New Brunswick",
                                    "links": []
                                },
                                {
                                    "stateId": "586",
                                    "stateName": "Newfoundland",
                                    "links": []
                                },
                                {
                                    "stateId": "587",
                                    "stateName": "Northwest Territories",
                                    "links": []
                                },
                                {
                                    "stateId": "588",
                                    "stateName": "Nova Scotia",
                                    "links": []
                                },
                                {
                                    "stateId": "589",
                                    "stateName": "Nunavut",
                                    "links": []
                                },
                                {
                                    "stateId": "590",
                                    "stateName": "Ontario",
                                    "links": []
                                },
                                {
                                    "stateId": "591",
                                    "stateName": "Prince Edward Island",
                                    "links": []
                                },
                                {
                                    "stateId": "592",
                                    "stateName": "Quebec",
                                    "links": []
                                },
                                {
                                    "stateId": "593",
                                    "stateName": "Saskatchewan",
                                    "links": []
                                },
                                {
                                    "stateId": "594",
                                    "stateName": "Yukon Territory",
                                    "links": []
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "CreateCustomSegmentFieldResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "qamsa6.franconnectqa.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "fieldId": "694797104412887234",
                                    "apiKey": "testField",
                                    "fieldName": "Text Field",
                                    "fieldType": "text",
                                    "status": "active",
                                    "fieldTypeAttributes": {},
                                    "validations": {
                                        "textLengthMax": "180",
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694797224781023426",
                                    "apiKey": "textAreaField",
                                    "fieldName": "Text Area Field",
                                    "fieldType": "textArea",
                                    "status": "active",
                                    "fieldTypeAttributes": {},
                                    "validations": {
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694798142956112066",
                                    "apiKey": "countryOnlyField",
                                    "fieldName": "Country Only Field",
                                    "fieldType": "country",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "hasDependentField": false
                                    },
                                    "validations": {
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694798299735001282",
                                    "apiKey": "countryField",
                                    "fieldName": "CountryField",
                                    "fieldType": "country",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "hasDependentField": true
                                    },
                                    "validations": {
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "694798299751778498",
                                    "apiKey": "stateField",
                                    "fieldName": "State Field",
                                    "fieldType": "state",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "countryFieldId": "694798299735001282"
                                    },
                                    "validations": {
                                        "isMandatory": true
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "696630849621198356",
                                    "apiKey": "creationDate637838117",
                                    "fieldName": "Creation Date",
                                    "fieldType": "date",
                                    "status": "active",
                                    "fieldTypeAttributes": {},
                                    "validations": {
                                        "isMandatory": false
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "696635537640916500",
                                    "apiKey": "entityTypeDrop-down558186133",
                                    "fieldName": "Entity Type Drop-down",
                                    "fieldType": "dropdown",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "options": [
                                            {
                                                "id": "1662366051389",
                                                "value": "Others",
                                                "state": 0
                                            },
                                            {
                                                "id": "1662366045289",
                                                "value": "LLC",
                                                "state": 0
                                            },
                                            {
                                                "id": "1662366038824",
                                                "value": "Limited Partnership",
                                                "state": 0
                                            },
                                            {
                                                "id": "1662366028672",
                                                "value": "Individual",
                                                "state": 0
                                            }
                                        ]
                                    },
                                    "validations": {
                                        "isMandatory": false
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "696658859204281876",
                                    "apiKey": "countryTypeDrop-Down348944204",
                                    "fieldName": "Country Type Drop-Down",
                                    "fieldType": "country",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "hasDependentField": false
                                    },
                                    "validations": {
                                        "isMandatory": false
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "696670214816794088",
                                    "apiKey": "serviceAreas477918464",
                                    "fieldName": "Service Areas",
                                    "fieldType": "multiselect-dropdown",
                                    "status": "active",
                                    "fieldTypeAttributes": {
                                        "options": [
                                            {
                                                "id": "1662374319794",
                                                "value": "Herndon",
                                                "state": 1
                                            },
                                            {
                                                "id": "1662374309711",
                                                "value": "Iowa",
                                                "state": 1
                                            },
                                            {
                                                "id": "1662374305527",
                                                "value": "Reston",
                                                "state": 1
                                            },
                                            {
                                                "id": "1662374301860",
                                                "value": "Houston",
                                                "state": 0
                                            }
                                        ]
                                    },
                                    "validations": {
                                        "isMandatory": false
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "links": []
                                },
                                {
                                    "fieldId": "696671472608871912",
                                    "apiKey": "auditTemplateDoc285802595",
                                    "fieldName": "Audit Template Doc",
                                    "fieldType": "file",
                                    "status": "active",
                                    "fieldTypeAttributes": {},
                                    "validations": {
                                        "isMandatory": false
                                    },
                                    "isSegmentDataAssociated": false,
                                    "canBeDeleted": false,
                                    "links": []
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveCompaniesResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "response": {
                                "tenantContext": {
                                    "tenantId": "developers.franconnectdemo.net",
                                    "userId": "adm"
                                },
                                "data": [
                                    {
                                        "companyId": "1896871",
                                        "name": "Five Grill's Pretzels, LLC",
                                        "links": []
                                    },
                                    {
                                        "companyId": "4742738",
                                        "name": "Aladdin Sane, LLC",
                                        "links": []
                                    },
                                    {
                                        "companyId": "35456127",
                                        "name": "HanCO Management, LLC",
                                        "links": []
                                    },
                                    {
                                        "companyId": "36387348",
                                        "name": "A & E Pretzels, LLC",
                                        "links": []
                                    },
                                    {
                                        "companyId": "43289823",
                                        "name": "Philly Soft Pretzel Factory Norristown Inc.",
                                        "links": []
                                    },
                                    {
                                        "companyId": "63897281",
                                        "name": "Lahrs Twisted Pretzels, LLC",
                                        "links": []
                                    },
                                    {
                                        "companyId": "85243333",
                                        "name": "PPF Chalfont, LLC",
                                        "links": []
                                    },
                                    {
                                        "companyId": "103685105",
                                        "name": "Dough Twisters Inc",
                                        "links": []
                                    },
                                    {
                                        "companyId": "106213522",
                                        "name": "Columbia AT CORP, INC.",
                                        "links": []
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveCompanyByIdResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "qamsa6.franconnectqa.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "companyId": "1066711118",
                                    "companyName": "XYZ Enterprises",
                                    "areas": [
                                        {
                                            "id": "1940365061",
                                            "name": "South Region"
                                        },
                                        {
                                            "id": "388037787",
                                            "name": "FC Region"
                                        }
                                    ],
                                    "address": {
                                        "streetAddress": "46-B Clinton Street, Iowa City",
                                        "city": "Iowa City",
                                        "country": {
                                            "id": "1",
                                            "name": "USA"
                                        },
                                        "zipcode": ""
                                    },
                                    "formationDetails": {
                                        "country": {
                                            "id": "1",
                                            "name": "USA"
                                        },
                                        "date": "0000-00-00"
                                    },
                                    "createdOn": "2022-10-17 05:23:32",
                                    "customFields": [
                                        {
                                            "fieldDisplayName": "Franchise No (Custom Field)",
                                            "fieldName": "_FRANCHISE_NO_CUSTOM_FIELD_1054513536",
                                            "fieldValue": "44567"
                                        },
                                        {
                                            "fieldDisplayName": "ABN (Custom Field 2)",
                                            "fieldName": "_ABN_CUSTOM_FIELD_2_427667771",
                                            "fieldValue": "1234567-B07A"
                                        }
                                    ],
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/company-management/v1/companies/1066711118"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveSegmentsResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "page": {
                                "pageId": 0,
                                "pageSize": 20,
                                "totalRecords": 3,
                                "sort": {
                                    "direction": "DESC",
                                    "columns": [
                                        "created_on"
                                    ]
                                }
                            },
                            "tenantContext": {
                                "tenantId": "developers.franconnectdemo.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "segmentId": "463912633",
                                    "name": "PPF, LLC",
                                    "associationType": "units",
                                    "category": {
                                        "categoryId": "574932050520309762",
                                        "categoryName": "STORE-C"
                                    },
                                    "customSegmentId": "10425",
                                    "createdOn": "2021-10-04T18:10:41Z",
                                    "status": "active",
                                    "segmentType": "static",
                                    "accessibility": "public",
                                    "additionalFields": {
                                        "customSegmentField2": "desc - This is a custom segment field",
                                        "custom_segment_field": "",
                                        "customSegmentField3": "desc - This is also a custom segment field"
                                    },
                                    "owners": [
                                        {
                                            "id": "241910148",
                                            "name": "Sarthak Bansal"
                                        }
                                    ],
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/463912633"
                                        }
                                    ]
                                },
                                {
                                    "segmentId": "733901598",
                                    "name": "The Stoakford, LLC",
                                    "associationType": "units",
                                    "category": {
                                        "categoryId": "574932050520309762",
                                        "categoryName": "STORE-C"
                                    },
                                    "customSegmentId": "8388",
                                    "createdOn": "2021-10-04T18:02:58Z",
                                    "status": "active",
                                    "segmentType": "static",
                                    "accessibility": "public",
                                    "additionalFields": {
                                        "customSegmentField2": "",
                                        "custom_segment_field": "",
                                        "customSegmentField3": ""
                                    },
                                    "owners": [
                                        {
                                            "id": "241910148",
                                            "name": "Sarthak Bansal"
                                        }
                                    ],
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/733901598"
                                        }
                                    ]
                                },
                                {
                                    "segmentId": "1871582863",
                                    "name": "A & E Pretzels, LLC",
                                    "associationType": "units",
                                    "category": {
                                        "categoryId": "574809462007660547",
                                        "categoryName": "test comp56"
                                    },
                                    "customSegmentId": "15005",
                                    "createdOn": "2021-10-04T09:47:03Z",
                                    "status": "active",
                                    "segmentType": "static",
                                    "accessibility": "public",
                                    "owners": [
                                        {
                                            "id": "290756926",
                                            "name": "sarthak corp user 4"
                                        }
                                    ],
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/1871582863"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveSegmentBySegmentIdResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "qamsa6.franconnectqa.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "parentSegments": [
                                        {
                                            "segmentId": "951475716",
                                            "customSegmentId": "15280",
                                            "name": "Five Grill's Pretzels, LLC"
                                        },
                                        {
                                            "segmentId": "1824176991",
                                            "customSegmentId": "2354",
                                            "name": "Segment October"
                                        },
                                        {
                                            "segmentId": "311175725",
                                            "customSegmentId": "17498",
                                            "name": "Five Grill's Pretzels, LLC"
                                        }
                                    ],
                                    "segmentId": "269248798",
                                    "name": "Sample Test Segment",
                                    "associationType": "segments",
                                    "category": {
                                        "categoryId": "570522678952198148",
                                        "categoryName": "Child Company category 1"
                                    },
                                    "customSegmentId": "1191",
                                    "createdOn": "2021-09-24T04:23:37Z",
                                    "status": "active",
                                    "createdBy": "FranConnect Administrator",
                                    "segmentType": "static",
                                    "accessibility": "public",
                                    "owners": [
                                        {
                                            "id": "317935743",
                                            "name": "Sam Grasso"
                                        }
                                    ],
                                    "additionalFields": {},
                                    "companyDetails": {
                                        "id": "1066711118",
                                        "name": "company123",
                                        "links": [
                                            {
                                                "rel": "self",
                                                "action": "get",
                                                "href": "https://api.franconnectqa.net/company-management/v1/companies/1066711118"
                                            }
                                        ]
                                    },
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/269248798"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveUnitsOfASegmentResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "page": {
                                "pageId": 0,
                                "pageSize": 20,
                                "totalRecords": 3
                            },
                            "tenantContext": {
                                "tenantId": "qamsa6.franconnectqa.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "unitReferenceId": "15050101",
                                    "franchiseId": "0250",
                                    "centerName": "Harlem Store Front",
                                    "status": "4",
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/15050101"
                                        }
                                    ]
                                },
                                {
                                    "unitReferenceId": "15133242",
                                    "franchiseId": "0242",
                                    "centerName": "30th Street Septa",
                                    "status": "1",
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/15133242"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveSegmentByCategoryIdResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "developers.franconnectdemo.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "segmentId": "463912633",
                                    "name": "PPF, LLC",
                                    "customSegmentId": "SB001",
                                    "categoryName": "STORE-C",
                                    "companyDetails": {
                                        "id": "1066711118",
                                        "name": "SME Enterprises",
                                        "links": [
                                            {
                                                "rel": "self",
                                                "action": "get",
                                                "href": "https://api.franconnectqa.net/company-management/v1/companies/1066711118"
                                            }
                                        ]
                                    },
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/463912633"
                                        }
                                    ]
                                },
                                {
                                    "segmentId": "733901598",
                                    "name": "The Stoakford, LLC",
                                    "customSegmentId": "SB0001",
                                    "categoryName": "STORE-C",
                                    "companyDetails": {
                                        "id": "1066711118",
                                        "name": "SME Enterprises",
                                        "links": [
                                            {
                                                "rel": "self",
                                                "action": "get",
                                                "href": "https://api.franconnectqa.net/company-management/v1/companies/1066711118"
                                            }
                                        ]
                                    },
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/733901598"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "RetrieveChildSegmentsResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "qamsa6.franconnectqa.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "segmentId": "311175725",
                                    "childSegments": [
                                        {
                                            "parentSegments": [
                                                {
                                                    "segmentId": "2114603862",
                                                    "customSegmentId": "18815",
                                                    "name": "31DECSEG 10SEPP1"
                                                },
                                                {
                                                    "segmentId": "334209867",
                                                    "customSegmentId": "18830",
                                                    "name": "Five Grill's Pretzels"
                                                },
                                                {
                                                    "segmentId": "1577425667",
                                                    "customSegmentId": "1777",
                                                    "name": "Five Grill's Pretzels, LLC PP 27 SEPT"
                                                },
                                                {
                                                    "segmentId": "951475716",
                                                    "customSegmentId": "15280",
                                                    "name": "Five Grill's Pretzels, LLC 24sep"
                                                },
                                                {
                                                    "segmentId": "1824176991",
                                                    "customSegmentId": "2354",
                                                    "name": "seg1oct"
                                                },
                                                {
                                                    "segmentId": "311175725",
                                                    "customSegmentId": "17498",
                                                    "name": "Five Grill's Pretzels, LLC"
                                                }
                                            ],
                                            "segmentId": "269248798",
                                            "name": "TEST-NI3-24-SEPT CHILD  11TH STREET",
                                            "associationType": "segments",
                                            "category": {
                                                "categoryId": "570522678952198148",
                                                "categoryName": "Child Company category 1"
                                            },
                                            "customSegmentId": "1191",
                                            "createdOn": "2021-09-24T04:23:37Z",
                                            "status": "active",
                                            "createdBy": "FranConnect Administrator",
                                            "segmentType": "static",
                                            "accessibility": "public",
                                            "additionalFields": {
                                                "customSegmentField2": "Test description",
                                                "custom_segment_field": "",
                                                "customSegmentField3": "Test description"
                                            },
                                            "companyDetails": {
                                                "id": "1066711118",
                                                "name": "SME Enterprises",
                                                "links": [
                                                    {
                                                        "rel": "self",
                                                        "action": "get",
                                                        "href": "https://api.franconnectqa.net/company-management/v1/companies/1066711118"
                                                    }
                                                ]
                                            },
                                            "owners": [
                                                {
                                                    "id": "317935743",
                                                    "name": "12corp1 12corp1"
                                                }
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/269248798"
                                                }
                                            ]
                                        },
                                        {
                                            "parentSegments": [
                                                {
                                                    "segmentId": "1633667283",
                                                    "customSegmentId": "3702",
                                                    "name": "Five Grill's Pretzels, LLCaaaaaaaaaaaaaaa"
                                                },
                                                {
                                                    "segmentId": "1577425667",
                                                    "customSegmentId": "1777",
                                                    "name": "Five Grill's Pretzels, LLC PP 27 SEPT"
                                                },
                                                {
                                                    "segmentId": "1945824445",
                                                    "customSegmentId": "11122",
                                                    "name": "Five Grill's Pretzels, LLCaaaaaaaaaaaaaaaaaa"
                                                },
                                                {
                                                    "segmentId": "1216786251",
                                                    "customSegmentId": "4660",
                                                    "name": "Five Grill's Pretzels, LLC2222"
                                                },
                                                {
                                                    "segmentId": "1372703799",
                                                    "customSegmentId": "10038",
                                                    "name": "Test Expose - 2 by ni3 678"
                                                },
                                                {
                                                    "segmentId": "311175725",
                                                    "customSegmentId": "17498",
                                                    "name": "Five Grill's Pretzels, LLC"
                                                }
                                            ],
                                            "segmentId": "974628277",
                                            "name": "11th Street Pretzel Factory, Inc2",
                                            "associationType": "segments",
                                            "category": {
                                                "categoryId": "567680123688452099",
                                                "categoryName": "International"
                                            },
                                            "customSegmentId": "11938",
                                            "createdOn": "2021-09-23T11:28:10Z",
                                            "status": "active",
                                            "createdBy": "FranConnect Administrator",
                                            "segmentType": "static",
                                            "accessibility": "public",
                                            "additionalFields": {
                                                "customSegmentField2": "Test description",
                                                "custom_segment_field": "",
                                                "customSegmentField3": "Test description"
                                            },
                                            "owners": [
                                                {
                                                    "id": "39698192",
                                                    "name": "\"First Name 2\" Last Name1"
                                                }
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/974628277"
                                                }
                                            ]
                                        }
                                    ],
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/311175725"
                                        }
                                    ]
                                },
                                {
                                    "segmentId": "1900195585",
                                    "childSegments": [
                                        {
                                            "parentSegments": [
                                                {
                                                    "segmentId": "1900195585",
                                                    "customSegmentId": "17982",
                                                    "name": "Scott Pretzels, LLC"
                                                }
                                            ],
                                            "segmentId": "3760996",
                                            "name": "Family Pretzels, LLC",
                                            "associationType": "units",
                                            "category": {
                                                "categoryId": "567680764276113411",
                                                "categoryName": "Store"
                                            },
                                            "customSegmentId": "8315",
                                            "createdOn": "2021-09-23T11:02:40Z",
                                            "status": "active",
                                            "createdBy": "Sarthak Bansal",
                                            "segmentType": "static",
                                            "accessibility": "public",
                                            "owners": [
                                                {
                                                    "id": "2012739873",
                                                    "name": "Sarthak Regional"
                                                }
                                            ],
                                            "units": [
                                                {
                                                    "unitReferenceId": "683813731",
                                                    "franchiseId": "Franchise mApZNW",
                                                    "centerName": "Test Center",
                                                    "status": "1",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/683813731"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "unitReferenceId": "689342253",
                                                    "franchiseId": "0226",
                                                    "centerName": "Indiana ND Pretzels",
                                                    "status": "0",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/689342253"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "unitReferenceId": "695544022",
                                                    "franchiseId": "Franchise eMPzMi",
                                                    "centerName": "Test Center",
                                                    "status": "1",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/695544022"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "unitReferenceId": "699383504",
                                                    "franchiseId": "9999",
                                                    "centerName": "",
                                                    "status": "1",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/699383504"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/3760996"
                                                }
                                            ]
                                        },
                                        {
                                            "parentSegments": [
                                                {
                                                    "segmentId": "1900195585",
                                                    "customSegmentId": "17982",
                                                    "name": "Scott Pretzels, LLC"
                                                }
                                            ],
                                            "segmentId": "176582280",
                                            "name": "CompSegCompany",
                                            "associationType": "units",
                                            "category": {
                                                "categoryId": "567680764276113411",
                                                "categoryName": "Store"
                                            },
                                            "customSegmentId": "2919",
                                            "createdOn": "2021-09-17T08:41:15Z",
                                            "status": "active",
                                            "createdBy": "FranConnect Administrator",
                                            "segmentType": "static",
                                            "accessibility": "public",
                                            "owners": [
                                                {
                                                    "id": "1658706748",
                                                    "name": "sarthak region test one"
                                                }
                                            ],
                                            "units": [
                                                {
                                                    "unitReferenceId": "15029716",
                                                    "franchiseId": "0192",
                                                    "centerName": "Winter Haven Walmart",
                                                    "status": "4",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/15029716"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "unitReferenceId": "15050101",
                                                    "franchiseId": "0250",
                                                    "centerName": "Harlem Store Front",
                                                    "status": "4",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/15050101"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "unitReferenceId": "15133242",
                                                    "franchiseId": "0242",
                                                    "centerName": "30th Street Septa",
                                                    "status": "1",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/15133242"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "unitReferenceId": "3756110",
                                                    "franchiseId": "Franchise LRpjfl",
                                                    "centerName": "Test Center",
                                                    "status": "0",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/3756110"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/176582280"
                                                }
                                            ]
                                        },
                                        {
                                            "parentSegments": [
                                                {
                                                    "segmentId": "1900195585",
                                                    "customSegmentId": "17982",
                                                    "name": "Scott Pretzels, LLC"
                                                }
                                            ],
                                            "segmentId": "176880484",
                                            "name": "unit store 2",
                                            "associationType": "units",
                                            "category": {
                                                "categoryId": "567680764276113411",
                                                "categoryName": "Store"
                                            },
                                            "customSegmentId": "6040",
                                            "createdOn": "2021-09-14T12:13:24Z",
                                            "status": "active",
                                            "createdBy": "FranConnect Administrator",
                                            "segmentType": "static",
                                            "accessibility": "public",
                                            "owners": [
                                                {
                                                    "id": "705537899",
                                                    "name": "Alexa Bradtke"
                                                },
                                                {
                                                    "id": "809980778",
                                                    "name": "Alessandra Nader"
                                                }
                                            ],
                                            "units": [
                                                {
                                                    "unitReferenceId": "45501966",
                                                    "franchiseId": "0289",
                                                    "centerName": "Glen Oaks, NY",
                                                    "status": "0",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/45501966"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "unitReferenceId": "51877951",
                                                    "franchiseId": "0196",
                                                    "centerName": "Vineland Walmart",
                                                    "status": "4",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/51877951"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/176880484"
                                                }
                                            ]
                                        },
                                        {
                                            "parentSegments": [
                                                {
                                                    "segmentId": "1900195585",
                                                    "customSegmentId": "17982",
                                                    "name": "Scott Pretzels, LLC"
                                                }
                                            ],
                                            "segmentId": "1822544228",
                                            "name": "unit store 1",
                                            "associationType": "units",
                                            "category": {
                                                "categoryId": "567680764276113411",
                                                "categoryName": "Store"
                                            },
                                            "customSegmentId": "9338",
                                            "createdOn": "2021-09-14T12:09:49Z",
                                            "status": "active",
                                            "createdBy": "FranConnect Administrator",
                                            "segmentType": "static",
                                            "accessibility": "public",
                                            "owners": [
                                                {
                                                    "id": "241910148",
                                                    "name": "Sarthak Bansal"
                                                }
                                            ],
                                            "units": [
                                                {
                                                    "unitReferenceId": "195060284",
                                                    "franchiseId": "0176",
                                                    "centerName": "Urbana",
                                                    "status": "0",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/195060284"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "unitReferenceId": "201982426",
                                                    "franchiseId": "Op24",
                                                    "centerName": "Op24",
                                                    "status": "1",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/201982426"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "unitReferenceId": "24645694",
                                                    "franchiseId": "Newloc002",
                                                    "centerName": "Newloc002",
                                                    "status": "1",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/24645694"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "unitReferenceId": "28540123",
                                                    "franchiseId": "0266",
                                                    "centerName": "Inner Harbor Kiosk #2",
                                                    "status": "1",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/28540123"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/1822544228"
                                                }
                                            ]
                                        }
                                    ],
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/1900195585"
                                        }
                                    ]
                                },
                                {
                                    "segmentId": "269248798",
                                    "childSegments": [
                                        {
                                            "parentSegments": [
                                                {
                                                    "segmentId": "269248798",
                                                    "customSegmentId": "1191",
                                                    "name": "TEST-NI3-24-SEPT CHILD  11TH STREET"
                                                }
                                            ],
                                            "segmentId": "465307109",
                                            "name": "TEST-NI3-24-SEPT GRAND CHILD",
                                            "description": "TEST Description",
                                            "associationType": "units",
                                            "category": {
                                                "categoryId": "571187103145132034",
                                                "categoryName": "Grand Child Category"
                                            },
                                            "customSegmentId": "6697",
                                            "createdOn": "2021-09-24T04:15:24Z",
                                            "status": "active",
                                            "createdBy": "FranConnect Administrator",
                                            "segmentType": "static",
                                            "accessibility": "public",
                                            "owners": [
                                                {
                                                    "id": "196312889",
                                                    "name": "15juneuser 15juneuser"
                                                }
                                            ],
                                            "units": [
                                                {
                                                    "unitReferenceId": "15029716",
                                                    "franchiseId": "0192",
                                                    "centerName": "Winter Haven Walmart",
                                                    "status": "4",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/15029716"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "unitReferenceId": "15050101",
                                                    "franchiseId": "0250",
                                                    "centerName": "Harlem Store Front",
                                                    "status": "4",
                                                    "links": [
                                                        {
                                                            "rel": "self",
                                                            "action": "get",
                                                            "href": "https://api.franconnectqa.net/manage-unit/v1/units/15050101"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/465307109"
                                                }
                                            ]
                                        }
                                    ],
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/269248798"
                                        }
                                    ]
                                },
                                {
                                    "segmentId": "1022196200",
                                    "childSegments": [
                                        {
                                            "parentSegments": [
                                                {
                                                    "segmentId": "970365649",
                                                    "customSegmentId": "34635",
                                                    "name": "Test segment"
                                                },
                                                {
                                                    "segmentId": "1022196200",
                                                    "customSegmentId": "12533",
                                                    "name": "JRJ Dough, Inc"
                                                }
                                            ],
                                            "segmentId": "1900195585",
                                            "name": "Scott Pretzels, LLC",
                                            "associationType": "segments",
                                            "category": {
                                                "categoryId": "567680617202843651",
                                                "categoryName": "State"
                                            },
                                            "customSegmentId": "17982",
                                            "createdOn": "2021-09-23T11:07:16Z",
                                            "status": "active",
                                            "createdBy": "Sarthak Bansal",
                                            "segmentType": "static",
                                            "accessibility": "public",
                                            "owners": [
                                                {
                                                    "id": "2012739873",
                                                    "name": "Sarthak Regional"
                                                }
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/1900195585"
                                                }
                                            ]
                                        }
                                    ],
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/1022196200"
                                        }
                                    ]
                                },
                                {
                                    "segmentId": "974628277",
                                    "childSegments": [
                                        {
                                            "parentSegments": [
                                                {
                                                    "segmentId": "2090860874",
                                                    "customSegmentId": "34688",
                                                    "name": "Five Grill's Pretzels, LLC seg"
                                                },
                                                {
                                                    "segmentId": "2077240553",
                                                    "customSegmentId": "18826",
                                                    "name": "Aladdin Sane Segment 1"
                                                },
                                                {
                                                    "segmentId": "1811247754",
                                                    "customSegmentId": "9985",
                                                    "name": "HanCO Management, LLC 16oct"
                                                },
                                                {
                                                    "segmentId": "974628277",
                                                    "customSegmentId": "11938",
                                                    "name": "11th Street Pretzel Factory, Inc2"
                                                },
                                                {
                                                    "segmentId": "1467318297",
                                                    "customSegmentId": "3297",
                                                    "name": "KM Pretzels Inc"
                                                }
                                            ],
                                            "segmentId": "1022196200",
                                            "name": "JRJ Dough, Inc",
                                            "associationType": "segments",
                                            "category": {
                                                "categoryId": "567680430438875138",
                                                "categoryName": "National"
                                            },
                                            "customSegmentId": "12533",
                                            "createdOn": "2021-09-23T11:09:54Z",
                                            "status": "active",
                                            "createdBy": "Sarthak Bansal",
                                            "segmentType": "static",
                                            "accessibility": "public",
                                            "owners": [
                                                {
                                                    "id": "241910148",
                                                    "name": "Sarthak Bansal"
                                                }
                                            ],
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/1022196200"
                                                }
                                            ]
                                        }
                                    ],
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/974628277"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            },
            "CreateSegmentResp": {
                "content": {
                    "application/json": {
                        "examples": {
                            "units": {
                                "summary": "Response sample of segment creation using UNITS",
                                "value": {
                                    "tenantContext": {
                                        "tenantId": "developers.franconnectdemo.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "segmentId": "387567111",
                                            "name": "Segment of units",
                                            "accessibility": "public",
                                            "description": "This segment contains units",
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/387567111"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "segments": {
                                "summary": "Response sample of segment creation using child SEGMENTS",
                                "value": {
                                    "tenantContext": {
                                        "tenantId": "developers.franconnectdemo.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "segmentId": "503949506",
                                            "name": "JJ Inc. USA Franchises",
                                            "accessibility": "public",
                                            "description": "This segment contains child segments that were retrieved on the basis of company",
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://internal-stage-ecs-internal-1168061446.us-east-1.elb.amazonaws.com/manage-segment/v2/segments/503949506"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "additionalFields": {
                                "summary": "Response sample of segment creation using custom segment fields",
                                "value": {
                                    "tenantContext": {
                                        "tenantId": "qamsa6.franconnectqa.net",
                                        "userId": "adm"
                                    },
                                    "data": [
                                        {
                                            "segmentId": "537101201",
                                            "name": "Filling custom segment fields 2",
                                            "accessibility": "public",
                                            "links": [
                                                {
                                                    "rel": "self",
                                                    "action": "get",
                                                    "href": "https://api.franconnectqa.net/manage-segment/v2/segments/537101201"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "description": "Created"
            },
            "RetrieveChildSegmentsBasedOnCompanyResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "developers.franconnectdemo.net",
                                "userId": "adm"
                            },
                            "errors": null,
                            "data": [
                                {
                                    "tenantId": null,
                                    "links": [],
                                    "errors": null,
                                    "hasErrors": null,
                                    "segmentId": "1900195585",
                                    "name": "Scott Pretzels, LLC",
                                    "categoryName": "State",
                                    "customSegmentId": "17957",
                                    "companyDetails": {
                                        "id": "1066711118",
                                        "name": "SME Pretzel's Enterprise",
                                        "links": [
                                            {
                                                "rel": "self",
                                                "action": "get",
                                                "href": "https://api.franconnectqa.net/company-management/v1/companies/1066711118"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "limit": null,
                            "offset": null,
                            "totalRecords": null,
                            "currentPageRecords": null,
                            "totalPages": null
                        }
                    }
                }
            },
            "EditSegmentResp": {
                "content": {
                    "application/json": {
                        "example": {
                            "tenantContext": {
                                "tenantId": "developers.franconnectdemo.net",
                                "userId": "adm"
                            },
                            "data": [
                                {
                                    "segmentId": "2131847900",
                                    "customSegmentId": "Custom-880",
                                    "name": "Segment name updated",
                                    "accessibility": "public",
                                    "description": "The description of this segment is updated",
                                    "links": [
                                        {
                                            "rel": "self",
                                            "action": "get",
                                            "href": "https://api.franconnectqa.net/manage-segment/v2/segments/2131847900"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "description": "Successful"
            }
        }
    }
}
